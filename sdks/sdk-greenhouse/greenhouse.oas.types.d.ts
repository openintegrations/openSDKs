/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/departments/{id}': {
    get: operations['getDepartment']
  }
  '/v1/departments': {
    get: operations['getDepartments']
  }
  '/v1/jobs/{id}': {
    get: operations['getJob']
  }
  '/v1/jobs': {
    get: operations['getJobs']
  }
  '/v1/offers/{id}': {
    get: operations['getOffer']
  }
  '/v1/offers': {
    get: operations['getOffers']
  }
  '/v1/candidates/{id}': {
    get: operations['getCandidate']
  }
  '/v1/candidates': {
    get: operations['getCandidates']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    department: {
      id: number
      name: string
      parent_id?: string | null
      parent_department_external_ids?: string | null
      child_ids?: number[] | null
      child_department_external_ids?: number[] | null
      external_id: string
      children: unknown[]
      [key: string]: unknown
    }
    job: {
      /** @description The job’s unique identifier */
      id: number
      name: string
      /** @description An arbitrary ID provided by an external source; does not map to another entity within Greenhouse. */
      requisition_id: string
      notes: string
      /** @description One of true, false. If the job is confidential or not. */
      confidential: boolean
      /** @enum {string} */
      status: 'open' | 'closed' | 'draft'
      created_at: string
      opened_at: string
      closed_at: string
      updated_at: string
      /** @description Is this job designated as a template used to create other jobs. This may be true, false, or null. Null is an indication this job was created before template job feature. */
      is_template: boolean | null
      /** @description If this job was copied from another job, this field contains the id of the source job. */
      copied_from_id: number
      departments: components['schemas']['department'][]
      offices: components['schemas']['office'][]
      openings: components['schemas']['opening'][]
      custom_fields: {
        [key: string]: unknown
      }
      keyed_custom_fields: {
        [key: string]: components['schemas']['keyedCustomFields']
      }
      hiring_team: components['schemas']['hiringTeam']
      [key: string]: unknown
    }
    office: {
      id: number
      name: string
      location: {
        name: string
      }
      parent_id: number
      child_ids?: number[] | null
      external_id: string
    }
    opening: {
      id: number
      opening_id: string | null
      status: string
      opened_at: string
      closed_at: string
      application_id: number
      close_reason: {
        id: number
        name: string
      } | null
    }
    keyedCustomFields: {
      name: string
      type: string
      value: string
    }
    hiringTeam: {
      hiring_managers: {
        id: number
        first_name: string
        last_name: string
        name: string
        employee_id: string
        responsible?: boolean | null
      }[]
      recruiters: {
        id: number
        first_name: string
        last_name: string
        name: string
        employee_id: string
        responsible?: boolean | null
      }[]
      coordinators: {
        id: number
        first_name: string
        last_name: string
        name: string
        employee_id: string
        responsible?: boolean | null
      }[]
      sourcers: {
        id: number
        first_name: string
        last_name: string
        name: string
        employee_id: string
        responsible?: boolean | null
      }[]
    }
    offer: {
      id: number
      version: number
      application_id: number
      job_id: number
      candidate_id: number
      opening: components['schemas']['opening']
      created_at: string
      updated_at: string
      sent_at: string
      resolved_at: string
      starts_at: string
      status: string
      custom_fields: {
        [key: string]: unknown
      }
      keyed_custom_fields: {
        [key: string]: components['schemas']['keyedCustomFields']
      }
    }
    candidate: {
      id: number
      first_name: string
      last_name: string
      company: string
      title: string
      created_at: string
      updated_at: string
      last_activity: string
      is_private: boolean
      photo_url: string | null
      application_ids: number[]
      can_email: boolean
      tags: string[]
      attachments: {
        filename: string
        url: string
        type: string
        created_at: string
      }[]
      phone_numbers: {
        value: string
        type?: string | null
      }[]
      addresses: {
        value: string
        type?: string | null
      }[]
      email_addresses: {
        value: string
        type?: string | null
      }[]
      website_addresses: {
        value: string
        type?: string | null
      }[]
      social_media_addresses: {
        value: string
        type?: string | null
      }[]
      recruiter: {
        id: number
        first_name: string
        last_name: string
        name: string
        employee_id: string
        responsible?: boolean | null
      }
      coordinator: {
        id: number
        first_name: string
        last_name: string
        name: string
        employee_id: string
        responsible?: boolean | null
      }
      applications: components['schemas']['application'][]
      [key: string]: unknown
    }
    application: {
      id: number
      candidate_id: number
      prospect: boolean
      applied_at: string
      rejected_at: null | string
      last_activity_at: string
      location: {
        address: string
      }
      source: {
        id: number
        public_name: string
      }
      credited_to: {
        id: number
        first_name: string
        last_name: string
        name: string
        employee_id: string
      }
      rejection_reason: null | string
      rejection_details: null | string
      jobs: {
        id: number
        name: string
      }[]
      job_post_id: number
      status: string
      current_stage: {
        id: number
        name: string
      }
      answers: {
        question: string
        answer: string
      }[]
      prospective_office: null | string
      prospective_department: null | string
      prospect_detail: {
        prospect_pool: null | string
        prospect_stage: null | string
        prospect_owner: null | string
      }
      custom_fields: {
        application_custom_test: null | string
      }
      keyed_custom_fields: {
        application_custom_test: {
          name: string
          type: string
          value: string
        }
      }
      attachments: components['schemas']['attachment'][]
    }
    attachment: {
      filename: string
      url: string
      type: string
      created_at: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  getDepartment: {
    parameters: {
      query?: {
        /** @description This parameter defines how to represent the list of departments. The default value is 'list’, which returns a flat list of departments. If this is set to 'tree’, departments are represented in a tree-like structure where they may include sub-departments as children. */
        render_as?: 'list' | 'tree'
      }
      path: {
        /** @description The ID of the department to retrieve */
        id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': unknown
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['department']
        }
      }
    }
  }
  getDepartments: {
    parameters: {
      query?: {
        /** @description This parameter defines how to represent the list of departments. The default value is 'list’, which returns a flat list of departments. If this is set to 'tree’, departments are represented in a tree-like structure where they may include sub-departments as children. */
        render_as?: 'list' | 'tree'
        /** @description Return up to this number of objects per response. Must be an integer between 1 and 500. Defaults to 100. */
        per_page?: number
        /** @description A cursor for use in pagination. Returns the n-th chunk of per_page objects. */
        page?: number
        /** @description If supplied, only return department(s) with that external ID. */
        external_id?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': unknown
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['department'][]
        }
      }
    }
  }
  getJob: {
    parameters: {
      path: {
        /** @description The ID of the job to retrieve */
        id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': unknown
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['job']
        }
      }
    }
  }
  getJobs: {
    parameters: {
      query?: {
        /** @description Return up to this number of objects per response. Must be an integer between 1 and 500. Defaults to 100. */
        per_page?: number
        /** @description A cursor for use in pagination. Returns the n-th chunk of per_page objects. */
        page?: number
        /** @description If supplied, only return department(s) with that external ID. */
        external_id?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': unknown
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['job'][]
        }
      }
    }
  }
  getOffer: {
    parameters: {
      path: {
        /** @description The ID of the offer to retrieve */
        id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': unknown
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['offer']
        }
      }
    }
  }
  getOffers: {
    parameters: {
      query?: {
        /** @description Return up to this number of objects per response. Must be an integer between 1 and 500. Defaults to 100. */
        per_page?: number
        /** @description A cursor for use in pagination. Returns the n-th chunk of per_page objects. */
        page?: number
        /** @description If supplied, only return department(s) with that external ID. */
        external_id?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': unknown
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['offer'][]
        }
      }
    }
  }
  getCandidate: {
    parameters: {
      path: {
        /** @description The ID of the candidate to retrieve */
        id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': unknown
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['candidate']
        }
      }
    }
  }
  getCandidates: {
    parameters: {
      query?: {
        /** @description Return up to this number of objects per response. Must be an integer between 1 and 500. Defaults to 100. */
        per_page?: number
        /** @description A cursor for use in pagination. Returns the n-th chunk of per_page objects. */
        page?: number
        /** @description If supplied, only return department(s) with that external ID. */
        external_id?: string
      }
    }
    requestBody?: {
      content: {
        'application/json': unknown
      }
    }
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['candidate'][]
        }
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
