import type {
  ClientOptions,
  OpenAPITypes,
  SdkDefinition,
  SDKTypes,
} from '@opensdks/runtime'
import {initSDK} from '@opensdks/runtime'

/**
 * This file was generated by @opensdks/cli, do not edit manually.
 * For bugs & feature requests, please open an issue on the [GitHub](https://github.com/tonyxiao/openSDKs)
 */

// This file is generated by @opensdks/cli, do not edit manually.
export const oasMeta = {
  info: {title: 'Files', version: 'v1.0'},
  servers: [{url: 'https://graph.microsoft.com/v1.0/', description: 'Core'}],
} as const

export type MsgraphSDKTypes = SDKTypes<OpenAPITypes, ClientOptions>

export const msgraphSdkDef = {
  types: {} as MsgraphSDKTypes,
  defaultOptions: {},
} satisfies SdkDefinition<MsgraphSDKTypes>

export function initMsgraphSDK(opts: MsgraphSDKTypes['options']) {
  return initSDK(msgraphSdkDef, opts)
}

export type MsgraphSDK = ReturnType<typeof initMsgraphSDK>

export default initMsgraphSDK

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/drives': {
    /** Get entities from drives */
    get: operations['drive_ListDrive']
    /** Add new entity to drives */
    post: operations['drive_CreateDrive']
  }
  '/drives/{drive-id}': {
    /** Get entity from drives by key */
    get: operations['drive_GetDrive']
    /** Delete entity from drives */
    delete: operations['drive_DeleteDrive']
    /** Update entity in drives */
    patch: operations['drive_UpdateDrive']
  }
  '/drives/{drive-id}/bundles': {
    /**
     * Get bundles from drives
     * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
     */
    get: operations['drive_ListBundle']
    /** Create new navigation property to bundles for drives */
    post: operations['drive_CreateBundle']
  }
  '/drives/{drive-id}/bundles/{driveItem-id}': {
    /**
     * Get bundles from drives
     * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
     */
    get: operations['drive_GetBundle']
  }
  '/drives/{drive-id}/bundles/{driveItem-id}/content': {
    /**
     * Get content for the navigation property bundles from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive_GetBundlesContent']
    /**
     * Update content for the navigation property bundles in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive_SetBundlesContent']
    /**
     * Delete content for the navigation property bundles in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive_DeleteBundlesContent']
  }
  '/drives/{drive-id}/bundles/$count': {
    /** Get the number of the resource */
    get: operations['drive.bundle_GetCount']
  }
  '/drives/{drive-id}/createdByUser': {
    /**
     * Get createdByUser from drives
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['drive_GetCreatedGraphBPreUser']
  }
  '/drives/{drive-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/following': {
    /**
     * Get following from drives
     * @description The list of items the user is following. Only in OneDrive for Business.
     */
    get: operations['drive_ListFollowing']
  }
  '/drives/{drive-id}/following/{driveItem-id}': {
    /**
     * Get following from drives
     * @description The list of items the user is following. Only in OneDrive for Business.
     */
    get: operations['drive_GetFollowing']
  }
  '/drives/{drive-id}/following/{driveItem-id}/content': {
    /**
     * Get content for the navigation property following from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive_GetFollowingContent']
    /**
     * Update content for the navigation property following in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive_SetFollowingContent']
    /**
     * Delete content for the navigation property following in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive_DeleteFollowingContent']
  }
  '/drives/{drive-id}/following/$count': {
    /** Get the number of the resource */
    get: operations['drive.following_GetCount']
  }
  '/drives/{drive-id}/items': {
    /**
     * drive: sharedWithMe
     * @description Get a list of driveItem objects shared with the owner of a drive. The driveItems returned from the sharedWithMe method always include the remoteItem facet that indicates they are items from a different drive.
     */
    get: operations['drive_ListItem']
    /** Create new navigation property to items for drives */
    post: operations['drive_CreateItem']
  }
  '/drives/{drive-id}/items/{driveItem-id}': {
    /**
     * Get items from drives
     * @description All items contained in the drive. Read-only. Nullable.
     */
    get: operations['drive_GetItem']
    /** Delete navigation property items for drives */
    delete: operations['drive_DeleteItem']
    /** Update the navigation property items in drives */
    patch: operations['drive_UpdateItem']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics': {
    /**
     * Get analytics from drives
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['drive.item_GetAnalytic']
    /** Delete navigation property analytics for drives */
    delete: operations['drive.item_DeleteAnalytic']
    /** Update the navigation property analytics in drives */
    patch: operations['drive.item_UpdateAnalytic']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/allTime': {
    /**
     * Get itemAnalytics
     * @description Get itemAnalytics about the views that took place under this resource.
     * The itemAnalytics resource is a convenient way to get activity stats for allTime and the lastSevenDays.
     * For a custom time range or interval, use the getActivitiesByInterval API.
     */
    get: operations['drive.item.analytic_GetAllTime']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats': {
    /** Get itemActivityStats from drives */
    get: operations['drive.item.analytic_ListItemActivityStat']
    /** Create new navigation property to itemActivityStats for drives */
    post: operations['drive.item.analytic_CreateItemActivityStat']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}': {
    /** Get itemActivityStats from drives */
    get: operations['drive.item.analytic_GetItemActivityStat']
    /** Delete navigation property itemActivityStats for drives */
    delete: operations['drive.item.analytic_DeleteItemActivityStat']
    /** Update the navigation property itemActivityStats in drives */
    patch: operations['drive.item.analytic_UpdateItemActivityStat']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities': {
    /**
     * Get activities from drives
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['drive.item.analytic.itemActivityStat_ListActivity']
    /** Create new navigation property to activities for drives */
    post: operations['drive.item.analytic.itemActivityStat_CreateActivity']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}': {
    /**
     * Get activities from drives
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['drive.item.analytic.itemActivityStat_GetActivity']
    /** Delete navigation property activities for drives */
    delete: operations['drive.item.analytic.itemActivityStat_DeleteActivity']
    /** Update the navigation property activities in drives */
    patch: operations['drive.item.analytic.itemActivityStat_UpdateActivity']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem': {
    /**
     * Get driveItem from drives
     * @description Exposes the driveItem that was the target of this activity.
     */
    get: operations['drive.item.analytic.itemActivityStat.activity_GetDriveItem']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive.item.analytic.itemActivityStat.activity_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive.item.analytic.itemActivityStat.activity_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive.item.analytic.itemActivityStat.activity_DeleteDriveItemContent']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.analytic.itemActivityStat.activity_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.analytic.itemActivityStat_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/analytics/lastSevenDays': {
    /** Get lastSevenDays from drives */
    get: operations['drive.item.analytic_GetLastSevenDay']
  }
  '/drives/{drive-id}/items/{driveItem-id}/children': {
    /**
     * List children of a driveItem
     * @description Return a collection of DriveItems in the children relationship of a DriveItem. DriveItems with a non-null folder or package facet can have one or more child DriveItems.
     */
    get: operations['drive.item_ListChild']
    /** Create new navigation property to children for drives */
    post: operations['drive.item_CreateChild']
  }
  '/drives/{drive-id}/items/{driveItem-id}/children/{driveItem-id1}': {
    /**
     * Get children from drives
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['drive.item_GetChild']
  }
  '/drives/{drive-id}/items/{driveItem-id}/children/{driveItem-id1}/content': {
    /**
     * Get content for the navigation property children from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive.item_GetChildrenContent']
    /**
     * Update content for the navigation property children in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive.item_SetChildrenContent']
    /**
     * Delete content for the navigation property children in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive.item_DeleteChildrenContent']
  }
  '/drives/{drive-id}/items/{driveItem-id}/children/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.child_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/content': {
    /**
     * Get content for the navigation property items from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive_GetItemsContent']
    /**
     * Update content for the navigation property items in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive_SetItemsContent']
    /**
     * Delete content for the navigation property items in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive_DeleteItemsContent']
  }
  '/drives/{drive-id}/items/{driveItem-id}/createdByUser': {
    /**
     * Get createdByUser from drives
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['drive.item_GetCreatedGraphBPreUser']
  }
  '/drives/{drive-id}/items/{driveItem-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.item.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.item.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/items/{driveItem-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.item.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/items/{driveItem-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from drives
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['drive.item_GetLastModifiedGraphBPreUser']
  }
  '/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.item.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.item.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.item.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem': {
    /**
     * Get listItem from drives
     * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
     */
    get: operations['drive.item_GetListItem']
    /** Delete navigation property listItem for drives */
    delete: operations['drive.item_DeleteListItem']
    /** Update the navigation property listItem in drives */
    patch: operations['drive.item_UpdateListItem']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/analytics': {
    /**
     * Get analytics from drives
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['drive.item.listItem_GetAnalytic']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser': {
    /**
     * Get createdByUser from drives
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['drive.item.listItem_GetCreatedGraphBPreUser']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.item.listItem.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.item.listItem.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.item.listItem.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions': {
    /**
     * Get documentSetVersions from drives
     * @description Version information for a document set version created by a user.
     */
    get: operations['drive.item.listItem_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for drives */
    post: operations['drive.item.listItem_CreateDocumentSetVersion']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from drives
     * @description Version information for a document set version created by a user.
     */
    get: operations['drive.item.listItem_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for drives */
    delete: operations['drive.item.listItem_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in drives */
    patch: operations['drive.item.listItem_UpdateDocumentSetVersion']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from drives
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['drive.item.listItem.documentSetVersion_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.item.listItem.documentSetVersion_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.item.listItem.documentSetVersion_UpdateField']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}/microsoft.graph.restore': {
    /**
     * Invoke action restore
     * @description Restore a document set version.
     */
    post: operations['drive.item.listItem.documentSetVersion_restore']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.listItem.documentSetVersion_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/driveItem': {
    /**
     * Get driveItem from drives
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['drive.item.listItem_GetDriveItem']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive.item.listItem_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive.item.listItem_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive.item.listItem_DeleteDriveItemContent']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/fields': {
    /**
     * Get fields from drives
     * @description The values of the columns set on this list item.
     */
    get: operations['drive.item.listItem_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.item.listItem_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.item.listItem_UpdateField']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from drives
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['drive.item.listItem_GetLastModifiedGraphBPreUser']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.item.listItem.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.item.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.item.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/microsoft.graph.createLink': {
    /** Invoke action createLink */
    post: operations['drive.item.listItem_createLink']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/microsoft.graph.getActivitiesByInterval()': {
    /** Invoke function getActivitiesByInterval */
    get: operations['drive.item.listItem_getActivitiesGraphBPreInterval']
  }
  "/drives/{drive-id}/items/{driveItem-id}/listItem/microsoft.graph.getActivitiesByInterval(startDateTime='{startDateTime}',endDateTime='{endDateTime}',interval='{interval}')": {
    /** Invoke function getActivitiesByInterval */
    get: operations['drive.item.listItem_getActivitiesGraphBPreInterval']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/versions': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the list item.
     */
    get: operations['drive.item.listItem_ListVersion']
    /** Create new navigation property to versions for drives */
    post: operations['drive.item.listItem_CreateVersion']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/versions/{listItemVersion-id}': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the list item.
     */
    get: operations['drive.item.listItem_GetVersion']
    /** Delete navigation property versions for drives */
    delete: operations['drive.item.listItem_DeleteVersion']
    /** Update the navigation property versions in drives */
    patch: operations['drive.item.listItem_UpdateVersion']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from drives
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['drive.item.listItem.version_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.item.listItem.version_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.item.listItem.version_UpdateField']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/versions/{listItemVersion-id}/microsoft.graph.restoreVersion': {
    /**
     * Invoke action restoreVersion
     * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
     */
    post: operations['drive.item.listItem.version_restoreVersion']
  }
  '/drives/{drive-id}/items/{driveItem-id}/listItem/versions/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.listItem.version_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.assignSensitivityLabel': {
    /** Invoke action assignSensitivityLabel */
    post: operations['drive.item_assignSensitivityLabel']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.checkin': {
    /**
     * Invoke action checkin
     * @description Check in a checked out driveItem resource, which makes the version of the document available to others.
     */
    post: operations['drive.item_checkin']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.checkout': {
    /**
     * Invoke action checkout
     * @description Check out a driveItem resource to prevent others from editing the document, and prevent your changes from being visible until the documented is checked in.
     */
    post: operations['drive.item_checkout']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.copy': {
    /**
     * Invoke action copy
     * @description Asynchronously creates a copy of an driveItem (including any children), under a new parent item or with a new name.
     */
    post: operations['drive.item_copy']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.createLink': {
    /**
     * Invoke action createLink
     * @description You can use createLink action to share a DriveItem via a sharing link. The createLink action will create a new sharing link if the specified link type doesn't already exist for the calling application.
     * If a sharing link of the specified type already exists for the app, the existing sharing link will be returned. DriveItem resources inherit sharing permissions from their ancestors.
     */
    post: operations['drive.item_createLink']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.createUploadSession': {
    /** Invoke action createUploadSession */
    post: operations['drive.item_createUploadSession']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.delta()': {
    /**
     * Invoke function delta
     * @description Track changes in a driveItem and its children over time. Your app begins by calling delta without any parameters.
     * The service starts enumerating the drive's hierarchy, returning pages of items and either an @odata.nextLink or an @odata.deltaLink, as described below.
     * Your app should continue calling with the @odata.nextLink until you no longer see an @odata.nextLink returned, or you see a response with an empty set of changes. After you have finished receiving all the changes, you may apply them to your local state.
     * To check for changes in the future, call delta again with the @odata.deltaLink from the previous response. Deleted items are returned with the deleted facet.
     * Items with this property set should be removed from your local state.
     */
    get: operations['drive.item_delta']
  }
  "/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.delta(token='{token}')": {
    /** Invoke function delta */
    get: operations['drive.item_delta']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.extractSensitivityLabels': {
    /** Invoke action extractSensitivityLabels */
    post: operations['drive.item_extractSensitivityLabel']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.follow': {
    /**
     * Invoke action follow
     * @description Follow a driveItem.
     */
    post: operations['drive.item_follow']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.getActivitiesByInterval()': {
    /**
     * Invoke function getActivitiesByInterval
     * @description Get a collection of itemActivityStats resources for the activities that took place on this resource within the specified time interval. Analytics aggregates might not be available for all action types.
     */
    get: operations['drive.item_getActivitiesGraphBPreInterval']
  }
  "/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.getActivitiesByInterval(startDateTime='{startDateTime}',endDateTime='{endDateTime}',interval='{interval}')": {
    /** Invoke function getActivitiesByInterval */
    get: operations['drive.item_getActivitiesGraphBPreInterval']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.invite': {
    /**
     * Invoke action invite
     * @description Sends a sharing invitation for a driveItem.
     * A sharing invitation provides permissions to the recipients and optionally sends them an email with a sharing link.
     */
    post: operations['drive.item_invite']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.permanentDelete': {
    /** Invoke action permanentDelete */
    post: operations['drive.item_permanentDelete']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.preview': {
    /** Invoke action preview */
    post: operations['drive.item_preview']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.restore': {
    /**
     * Invoke action restore
     * @description Restore a driveItem that has been deleted and is currently in the recycle bin. NOTE: This functionality is currently only available for OneDrive Personal.
     */
    post: operations['drive.item_restore']
  }
  "/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.search(q='{q}')": {
    /**
     * Invoke function search
     * @description Search the hierarchy of items for items matching a query.
     * You can search within a folder hierarchy, a whole drive, or files shared with the current user.
     */
    get: operations['drive.item_search']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.unfollow': {
    /**
     * Invoke action unfollow
     * @description Unfollow a driveItem.
     */
    post: operations['drive.item_unfollow']
  }
  '/drives/{drive-id}/items/{driveItem-id}/microsoft.graph.validatePermission': {
    /** Invoke action validatePermission */
    post: operations['drive.item_validatePermission']
  }
  '/drives/{drive-id}/items/{driveItem-id}/permissions': {
    /**
     * Get permissions from drives
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['drive.item_ListPermission']
    /** Create new navigation property to permissions for drives */
    post: operations['drive.item_CreatePermission']
  }
  '/drives/{drive-id}/items/{driveItem-id}/permissions/{permission-id}': {
    /**
     * Get permissions from drives
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['drive.item_GetPermission']
    /** Delete navigation property permissions for drives */
    delete: operations['drive.item_DeletePermission']
    /** Update the navigation property permissions in drives */
    patch: operations['drive.item_UpdatePermission']
  }
  '/drives/{drive-id}/items/{driveItem-id}/permissions/{permission-id}/microsoft.graph.grant': {
    /**
     * Invoke action grant
     * @description Grant users access to a link represented by a permission.
     */
    post: operations['drive.item.permission_grant']
  }
  '/drives/{drive-id}/items/{driveItem-id}/permissions/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.permission_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/retentionLabel': {
    /**
     * Get retentionLabel from drives
     * @description Information about retention label and settings enforced on the driveItem. Read-write.
     */
    get: operations['drive.item_GetRetentionLabel']
    /**
     * driveItem: removeRetentionLabel
     * @description Remove a retention label from a driveItem. For information about retention labels from an administrator's perspective, see Use retention labels to manage the lifecycle of documents stored in SharePoint.
     */
    delete: operations['drive.item_DeleteRetentionLabel']
    /**
     * driveItem: lockOrUnlockRecord
     * @description Lock or unlock a retention label on a driveItem that classifies content as records. For information about retention labels from an administrator's perspective, see Use retention labels to manage the lifecycle of documents stored in SharePoint. For more information about how you can lock and unlock retention labels, see Use record versioning to update records stored in SharePoint or OneDrive.
     */
    patch: operations['drive.item_UpdateRetentionLabel']
  }
  '/drives/{drive-id}/items/{driveItem-id}/subscriptions': {
    /**
     * Get subscriptions from drives
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['drive.item_ListSubscription']
    /** Create new navigation property to subscriptions for drives */
    post: operations['drive.item_CreateSubscription']
  }
  '/drives/{drive-id}/items/{driveItem-id}/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from drives
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['drive.item_GetSubscription']
    /** Delete navigation property subscriptions for drives */
    delete: operations['drive.item_DeleteSubscription']
    /** Update the navigation property subscriptions in drives */
    patch: operations['drive.item_UpdateSubscription']
  }
  '/drives/{drive-id}/items/{driveItem-id}/subscriptions/{subscription-id}/microsoft.graph.reauthorize': {
    /**
     * Invoke action reauthorize
     * @description Reauthorize a subscription when you receive a reauthorizationRequired challenge.
     */
    post: operations['drive.item.subscription_reauthorize']
  }
  '/drives/{drive-id}/items/{driveItem-id}/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.subscription_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/thumbnails': {
    /**
     * Get thumbnails from drives
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['drive.item_ListThumbnail']
    /** Create new navigation property to thumbnails for drives */
    post: operations['drive.item_CreateThumbnail']
  }
  '/drives/{drive-id}/items/{driveItem-id}/thumbnails/{thumbnailSet-id}': {
    /**
     * Get thumbnails from drives
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['drive.item_GetThumbnail']
    /** Delete navigation property thumbnails for drives */
    delete: operations['drive.item_DeleteThumbnail']
    /** Update the navigation property thumbnails in drives */
    patch: operations['drive.item_UpdateThumbnail']
  }
  '/drives/{drive-id}/items/{driveItem-id}/thumbnails/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.thumbnail_GetCount']
  }
  '/drives/{drive-id}/items/{driveItem-id}/versions': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['drive.item_ListVersion']
    /** Create new navigation property to versions for drives */
    post: operations['drive.item_CreateVersion']
  }
  '/drives/{drive-id}/items/{driveItem-id}/versions/{driveItemVersion-id}': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['drive.item_GetVersion']
    /** Delete navigation property versions for drives */
    delete: operations['drive.item_DeleteVersion']
    /** Update the navigation property versions in drives */
    patch: operations['drive.item_UpdateVersion']
  }
  '/drives/{drive-id}/items/{driveItem-id}/versions/{driveItemVersion-id}/content': {
    /**
     * Get content for the navigation property versions from drives
     * @description The content stream for this version of the item.
     */
    get: operations['drive.item_GetVersionsContent']
    /**
     * Update content for the navigation property versions in drives
     * @description The content stream for this version of the item.
     */
    put: operations['drive.item_SetVersionsContent']
    /**
     * Delete content for the navigation property versions in drives
     * @description The content stream for this version of the item.
     */
    delete: operations['drive.item_DeleteVersionsContent']
  }
  '/drives/{drive-id}/items/{driveItem-id}/versions/{driveItemVersion-id}/microsoft.graph.restoreVersion': {
    /**
     * Invoke action restoreVersion
     * @description Restore a previous version of a DriveItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the file.
     */
    post: operations['drive.item.version_restoreVersion']
  }
  '/drives/{drive-id}/items/{driveItem-id}/versions/$count': {
    /** Get the number of the resource */
    get: operations['drive.item.version_GetCount']
  }
  '/drives/{drive-id}/items/$count': {
    /** Get the number of the resource */
    get: operations['drive.item_GetCount']
  }
  '/drives/{drive-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from drives
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['drive_GetLastModifiedGraphBPreUser']
  }
  '/drives/{drive-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/list': {
    /**
     * Get list from drives
     * @description For drives in SharePoint, the underlying document library list. Read-only. Nullable.
     */
    get: operations['drive_GetList']
    /** Delete navigation property list for drives */
    delete: operations['drive_DeleteList']
    /** Update the navigation property list in drives */
    patch: operations['drive_UpdateList']
  }
  '/drives/{drive-id}/list/columns': {
    /**
     * Get columns from drives
     * @description The collection of field definitions for this list.
     */
    get: operations['drive.list_ListColumn']
    /** Create new navigation property to columns for drives */
    post: operations['drive.list_CreateColumn']
  }
  '/drives/{drive-id}/list/columns/{columnDefinition-id}': {
    /**
     * Get columns from drives
     * @description The collection of field definitions for this list.
     */
    get: operations['drive.list_GetColumn']
    /** Delete navigation property columns for drives */
    delete: operations['drive.list_DeleteColumn']
    /** Update the navigation property columns in drives */
    patch: operations['drive.list_UpdateColumn']
  }
  '/drives/{drive-id}/list/columns/{columnDefinition-id}/sourceColumn': {
    /**
     * Get sourceColumn from drives
     * @description The source column for the content type column.
     */
    get: operations['drive.list.column_GetSourceColumn']
  }
  '/drives/{drive-id}/list/columns/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.column_GetCount']
  }
  '/drives/{drive-id}/list/contentTypes': {
    /**
     * Get contentTypes from drives
     * @description The collection of content types present in this list.
     */
    get: operations['drive.list_ListContentType']
    /** Create new navigation property to contentTypes for drives */
    post: operations['drive.list_CreateContentType']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}': {
    /**
     * Get contentTypes from drives
     * @description The collection of content types present in this list.
     */
    get: operations['drive.list_GetContentType']
    /** Delete navigation property contentTypes for drives */
    delete: operations['drive.list_DeleteContentType']
    /** Update the navigation property contentTypes in drives */
    patch: operations['drive.list_UpdateContentType']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/base': {
    /**
     * Get base from drives
     * @description Parent contentType from which this content type is derived.
     */
    get: operations['drive.list.contentType_GetBase']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes': {
    /**
     * Get baseTypes from drives
     * @description The collection of content types that are ancestors of this content type.
     */
    get: operations['drive.list.contentType_ListBaseType']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes/{contentType-id1}': {
    /**
     * Get baseTypes from drives
     * @description The collection of content types that are ancestors of this content type.
     */
    get: operations['drive.list.contentType_GetBaseType']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.contentType.baseType_GetCount']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks': {
    /**
     * Get columnLinks from drives
     * @description The collection of columns that are required by this content type.
     */
    get: operations['drive.list.contentType_ListColumnLink']
    /** Create new navigation property to columnLinks for drives */
    post: operations['drive.list.contentType_CreateColumnLink']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks/{columnLink-id}': {
    /**
     * Get columnLinks from drives
     * @description The collection of columns that are required by this content type.
     */
    get: operations['drive.list.contentType_GetColumnLink']
    /** Delete navigation property columnLinks for drives */
    delete: operations['drive.list.contentType_DeleteColumnLink']
    /** Update the navigation property columnLinks in drives */
    patch: operations['drive.list.contentType_UpdateColumnLink']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.contentType.columnLink_GetCount']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions': {
    /**
     * Get columnPositions from drives
     * @description Column order information in a content type.
     */
    get: operations['drive.list.contentType_ListColumnPosition']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}': {
    /**
     * Get columnPositions from drives
     * @description Column order information in a content type.
     */
    get: operations['drive.list.contentType_GetColumnPosition']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.contentType.columnPosition_GetCount']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columns': {
    /**
     * Get columns from drives
     * @description The collection of column definitions for this content type.
     */
    get: operations['drive.list.contentType_ListColumn']
    /** Create new navigation property to columns for drives */
    post: operations['drive.list.contentType_CreateColumn']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/{columnDefinition-id}': {
    /**
     * Get columns from drives
     * @description The collection of column definitions for this content type.
     */
    get: operations['drive.list.contentType_GetColumn']
    /** Delete navigation property columns for drives */
    delete: operations['drive.list.contentType_DeleteColumn']
    /** Update the navigation property columns in drives */
    patch: operations['drive.list.contentType_UpdateColumn']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn': {
    /**
     * Get sourceColumn from drives
     * @description The source column for the content type column.
     */
    get: operations['drive.list.contentType.column_GetSourceColumn']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.contentType.column_GetCount']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/microsoft.graph.associateWithHubSites': {
    /**
     * Invoke action associateWithHubSites
     * @description Associate a published content type present in a content type hub with a list of hub sites.
     */
    post: operations['drive.list.contentType_associateGraphWPreHubSite']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/microsoft.graph.copyToDefaultContentLocation': {
    /**
     * Invoke action copyToDefaultContentLocation
     * @description Copy a file to a default content location in a content type. The file can then be added as a default file or template via a POST operation.
     */
    post: operations['drive.list.contentType_copyToDefaultContentLocation']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/microsoft.graph.isPublished()': {
    /**
     * Invoke function isPublished
     * @description Check the publishing status of a contentType in a content type hub site.
     */
    get: operations['drive.list.contentType_isPublished']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/microsoft.graph.publish': {
    /**
     * Invoke action publish
     * @description Publishes a contentType present in the content type hub site.
     */
    post: operations['drive.list.contentType_publish']
  }
  '/drives/{drive-id}/list/contentTypes/{contentType-id}/microsoft.graph.unpublish': {
    /**
     * Invoke action unpublish
     * @description Unpublish a contentType from a content type hub site.
     */
    post: operations['drive.list.contentType_unpublish']
  }
  '/drives/{drive-id}/list/contentTypes/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.contentType_GetCount']
  }
  '/drives/{drive-id}/list/contentTypes/microsoft.graph.addCopy': {
    /**
     * Invoke action addCopy
     * @description Add a copy of a content type from a site to a list.
     */
    post: operations['drive.list.contentType_addCopy']
  }
  '/drives/{drive-id}/list/contentTypes/microsoft.graph.addCopyFromContentTypeHub': {
    /**
     * Invoke action addCopyFromContentTypeHub
     * @description Add or sync a copy of a published content type from the content type hub to a target site or a list. This method is part of the content type publishing changes to optimize the syncing of published content types to sites and lists, effectively switching from a 'push everywhere' to 'pull as needed' approach. The method allows users to pull content types directly from the content type hub to a site or list. For more information, see contentType: getCompatibleHubContentTypes and the blog post Syntex Product Updates – August 2021.
     */
    post: operations['drive.list.contentType_addCopyFromContentTypeHub']
  }
  '/drives/{drive-id}/list/contentTypes/microsoft.graph.getCompatibleHubContentTypes()': {
    /**
     * Invoke function getCompatibleHubContentTypes
     * @description Get a list of compatible content types from the content type hub that can be added to a target site or a list. This method is part of the content type publishing changes to optimize the syncing of published content types to sites and lists, effectively switching from a 'push everywhere' to 'pull as needed' approach. The method allows users to pull content types directly from the content type hub to a site or list. For more information, see contentType: addCopyFromContentTypeHub and the blog post Syntex Product Updates – August 2021.
     */
    get: operations['drive.list.contentType_getCompatibleHubContentType']
  }
  '/drives/{drive-id}/list/createdByUser': {
    /**
     * Get createdByUser from drives
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['drive.list_GetCreatedGraphBPreUser']
  }
  '/drives/{drive-id}/list/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.list.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.list.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/list/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.list.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/list/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/list/drive': {
    /**
     * Get drive from drives
     * @description Allows access to the list as a drive resource with driveItems. Only present on document libraries.
     */
    get: operations['drive.list_GetDrive']
  }
  '/drives/{drive-id}/list/items': {
    /**
     * Get items from drives
     * @description All items contained in the list.
     */
    get: operations['drive.list_ListItem']
    /** Create new navigation property to items for drives */
    post: operations['drive.list_CreateItem']
  }
  '/drives/{drive-id}/list/items/{listItem-id}': {
    /**
     * Get items from drives
     * @description All items contained in the list.
     */
    get: operations['drive.list_GetItem']
    /** Delete navigation property items for drives */
    delete: operations['drive.list_DeleteItem']
    /** Update the navigation property items in drives */
    patch: operations['drive.list_UpdateItem']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/analytics': {
    /**
     * Get analytics from drives
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['drive.list.item_GetAnalytic']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/createdByUser': {
    /**
     * Get createdByUser from drives
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['drive.list.item_GetCreatedGraphBPreUser']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.list.item.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.list.item.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.list.item.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.item.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions': {
    /**
     * Get documentSetVersions from drives
     * @description Version information for a document set version created by a user.
     */
    get: operations['drive.list.item_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for drives */
    post: operations['drive.list.item_CreateDocumentSetVersion']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from drives
     * @description Version information for a document set version created by a user.
     */
    get: operations['drive.list.item_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for drives */
    delete: operations['drive.list.item_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in drives */
    patch: operations['drive.list.item_UpdateDocumentSetVersion']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from drives
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['drive.list.item.documentSetVersion_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.list.item.documentSetVersion_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.list.item.documentSetVersion_UpdateField']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}/microsoft.graph.restore': {
    /**
     * Invoke action restore
     * @description Restore a document set version.
     */
    post: operations['drive.list.item.documentSetVersion_restore']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.item.documentSetVersion_GetCount']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/driveItem': {
    /**
     * Get driveItem from drives
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['drive.list.item_GetDriveItem']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive.list.item_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive.list.item_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive.list.item_DeleteDriveItemContent']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/fields': {
    /**
     * Get fields from drives
     * @description The values of the columns set on this list item.
     */
    get: operations['drive.list.item_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.list.item_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.list.item_UpdateField']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from drives
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['drive.list.item_GetLastModifiedGraphBPreUser']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.list.item.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.list.item.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.list.item.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/microsoft.graph.createLink': {
    /** Invoke action createLink */
    post: operations['drive.list.item_createLink']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/microsoft.graph.getActivitiesByInterval()': {
    /** Invoke function getActivitiesByInterval */
    get: operations['drive.list.item_getActivitiesGraphBPreInterval']
  }
  "/drives/{drive-id}/list/items/{listItem-id}/microsoft.graph.getActivitiesByInterval(startDateTime='{startDateTime}',endDateTime='{endDateTime}',interval='{interval}')": {
    /** Invoke function getActivitiesByInterval */
    get: operations['drive.list.item_getActivitiesGraphBPreInterval']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/versions': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the list item.
     */
    get: operations['drive.list.item_ListVersion']
    /** Create new navigation property to versions for drives */
    post: operations['drive.list.item_CreateVersion']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/versions/{listItemVersion-id}': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the list item.
     */
    get: operations['drive.list.item_GetVersion']
    /** Delete navigation property versions for drives */
    delete: operations['drive.list.item_DeleteVersion']
    /** Update the navigation property versions in drives */
    patch: operations['drive.list.item_UpdateVersion']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from drives
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['drive.list.item.version_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.list.item.version_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.list.item.version_UpdateField']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/versions/{listItemVersion-id}/microsoft.graph.restoreVersion': {
    /**
     * Invoke action restoreVersion
     * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
     */
    post: operations['drive.list.item.version_restoreVersion']
  }
  '/drives/{drive-id}/list/items/{listItem-id}/versions/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.item.version_GetCount']
  }
  '/drives/{drive-id}/list/items/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.item_GetCount']
  }
  '/drives/{drive-id}/list/items/microsoft.graph.delta()': {
    /**
     * Invoke function delta
     * @description Get newly created, updated, or deleted list items without having to perform a full read of the entire items collection. Your app begins by calling delta without any parameters.
     * The service starts enumerating the hierarchy of the list, returning pages of items, and either an @odata.nextLink or an @odata.deltaLink.
     * Your app should continue calling with the @odata.nextLink until you see an @odata.deltaLink returned. After you received all the changes, you can apply them to your local state.
     * To check for changes in the future, call delta again with the @odata.deltaLink from the previous response. The delta feed shows the latest state for each item, not each change. If an item was renamed twice, it only shows up once, with its latest name.
     * The same item might appear more than once in a delta feed, for various reasons. You should use the last occurrence you see. Items with this property should be removed from your local state.
     */
    get: operations['drive.list.item_delta']
  }
  "/drives/{drive-id}/list/items/microsoft.graph.delta(token='{token}')": {
    /** Invoke function delta */
    get: operations['drive.list.item_delta']
  }
  '/drives/{drive-id}/list/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from drives
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['drive.list_GetLastModifiedGraphBPreUser']
  }
  '/drives/{drive-id}/list/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.list.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.list.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/list/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.list.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/list/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/list/operations': {
    /**
     * Get operations from drives
     * @description The collection of long-running operations on the list.
     */
    get: operations['drive.list_ListOperation']
    /** Create new navigation property to operations for drives */
    post: operations['drive.list_CreateOperation']
  }
  '/drives/{drive-id}/list/operations/{richLongRunningOperation-id}': {
    /**
     * Get operations from drives
     * @description The collection of long-running operations on the list.
     */
    get: operations['drive.list_GetOperation']
    /** Delete navigation property operations for drives */
    delete: operations['drive.list_DeleteOperation']
    /** Update the navigation property operations in drives */
    patch: operations['drive.list_UpdateOperation']
  }
  '/drives/{drive-id}/list/operations/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.operation_GetCount']
  }
  '/drives/{drive-id}/list/subscriptions': {
    /**
     * Get subscriptions from drives
     * @description The set of subscriptions on the list.
     */
    get: operations['drive.list_ListSubscription']
    /** Create new navigation property to subscriptions for drives */
    post: operations['drive.list_CreateSubscription']
  }
  '/drives/{drive-id}/list/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from drives
     * @description The set of subscriptions on the list.
     */
    get: operations['drive.list_GetSubscription']
    /** Delete navigation property subscriptions for drives */
    delete: operations['drive.list_DeleteSubscription']
    /** Update the navigation property subscriptions in drives */
    patch: operations['drive.list_UpdateSubscription']
  }
  '/drives/{drive-id}/list/subscriptions/{subscription-id}/microsoft.graph.reauthorize': {
    /**
     * Invoke action reauthorize
     * @description Reauthorize a subscription when you receive a reauthorizationRequired challenge.
     */
    post: operations['drive.list.subscription_reauthorize']
  }
  '/drives/{drive-id}/list/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['drive.list.subscription_GetCount']
  }
  '/drives/{drive-id}/microsoft.graph.recent()': {
    /**
     * Invoke function recent
     * @description List a set of items that have been recently used by the signed in user.
     * This collection includes items that are in the user's drive and items they have access to from other drives.
     */
    get: operations['drive_recent']
  }
  "/drives/{drive-id}/microsoft.graph.search(q='{q}')": {
    /**
     * Invoke function search
     * @description Search the hierarchy of items for items matching a query.
     * You can search within a folder hierarchy, a whole drive, or files shared with the current user.
     */
    get: operations['drive_search']
  }
  '/drives/{drive-id}/microsoft.graph.sharedWithMe()': {
    /**
     * Invoke function sharedWithMe
     * @description Get a list of driveItem objects shared with the owner of a drive. The driveItems returned from the sharedWithMe method always include the remoteItem facet that indicates they are items from a different drive.
     */
    get: operations['drive_sharedGraphWPreMe']
  }
  '/drives/{drive-id}/root': {
    /**
     * Get root from drives
     * @description The root folder of the drive. Read-only.
     */
    get: operations['drive_GetRoot']
    /** Delete navigation property root for drives */
    delete: operations['drive_DeleteRoot']
    /** Update the navigation property root in drives */
    patch: operations['drive_UpdateRoot']
  }
  '/drives/{drive-id}/root/analytics': {
    /**
     * Get analytics from drives
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['drive.root_GetAnalytic']
    /** Delete navigation property analytics for drives */
    delete: operations['drive.root_DeleteAnalytic']
    /** Update the navigation property analytics in drives */
    patch: operations['drive.root_UpdateAnalytic']
  }
  '/drives/{drive-id}/root/analytics/allTime': {
    /** Get allTime from drives */
    get: operations['drive.root.analytic_GetAllTime']
  }
  '/drives/{drive-id}/root/analytics/itemActivityStats': {
    /** Get itemActivityStats from drives */
    get: operations['drive.root.analytic_ListItemActivityStat']
    /** Create new navigation property to itemActivityStats for drives */
    post: operations['drive.root.analytic_CreateItemActivityStat']
  }
  '/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}': {
    /** Get itemActivityStats from drives */
    get: operations['drive.root.analytic_GetItemActivityStat']
    /** Delete navigation property itemActivityStats for drives */
    delete: operations['drive.root.analytic_DeleteItemActivityStat']
    /** Update the navigation property itemActivityStats in drives */
    patch: operations['drive.root.analytic_UpdateItemActivityStat']
  }
  '/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities': {
    /**
     * Get activities from drives
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['drive.root.analytic.itemActivityStat_ListActivity']
    /** Create new navigation property to activities for drives */
    post: operations['drive.root.analytic.itemActivityStat_CreateActivity']
  }
  '/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}': {
    /**
     * Get activities from drives
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['drive.root.analytic.itemActivityStat_GetActivity']
    /** Delete navigation property activities for drives */
    delete: operations['drive.root.analytic.itemActivityStat_DeleteActivity']
    /** Update the navigation property activities in drives */
    patch: operations['drive.root.analytic.itemActivityStat_UpdateActivity']
  }
  '/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem': {
    /**
     * Get driveItem from drives
     * @description Exposes the driveItem that was the target of this activity.
     */
    get: operations['drive.root.analytic.itemActivityStat.activity_GetDriveItem']
  }
  '/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive.root.analytic.itemActivityStat.activity_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive.root.analytic.itemActivityStat.activity_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive.root.analytic.itemActivityStat.activity_DeleteDriveItemContent']
  }
  '/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.analytic.itemActivityStat.activity_GetCount']
  }
  '/drives/{drive-id}/root/analytics/itemActivityStats/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.analytic.itemActivityStat_GetCount']
  }
  '/drives/{drive-id}/root/analytics/lastSevenDays': {
    /** Get lastSevenDays from drives */
    get: operations['drive.root.analytic_GetLastSevenDay']
  }
  '/drives/{drive-id}/root/children': {
    /**
     * Get children from drives
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['drive.root_ListChild']
    /** Create new navigation property to children for drives */
    post: operations['drive.root_CreateChild']
  }
  '/drives/{drive-id}/root/children/{driveItem-id}': {
    /**
     * Get children from drives
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['drive.root_GetChild']
  }
  '/drives/{drive-id}/root/children/{driveItem-id}/content': {
    /**
     * Get content for the navigation property children from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive.root_GetChildrenContent']
    /**
     * Update content for the navigation property children in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive.root_SetChildrenContent']
    /**
     * Delete content for the navigation property children in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive.root_DeleteChildrenContent']
  }
  '/drives/{drive-id}/root/children/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.child_GetCount']
  }
  '/drives/{drive-id}/root/content': {
    /**
     * Get content for the navigation property root from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive_GetRootContent']
    /**
     * Update content for the navigation property root in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive_SetRootContent']
    /**
     * Delete content for the navigation property root in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive_DeleteRootContent']
  }
  '/drives/{drive-id}/root/createdByUser': {
    /**
     * Get createdByUser from drives
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['drive.root_GetCreatedGraphBPreUser']
  }
  '/drives/{drive-id}/root/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.root.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.root.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/root/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.root.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/root/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/root/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from drives
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['drive.root_GetLastModifiedGraphBPreUser']
  }
  '/drives/{drive-id}/root/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.root.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.root.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/root/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.root.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/root/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/root/listItem': {
    /**
     * Get listItem from drives
     * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
     */
    get: operations['drive.root_GetListItem']
    /** Delete navigation property listItem for drives */
    delete: operations['drive.root_DeleteListItem']
    /** Update the navigation property listItem in drives */
    patch: operations['drive.root_UpdateListItem']
  }
  '/drives/{drive-id}/root/listItem/analytics': {
    /**
     * Get analytics from drives
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['drive.root.listItem_GetAnalytic']
  }
  '/drives/{drive-id}/root/listItem/createdByUser': {
    /**
     * Get createdByUser from drives
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['drive.root.listItem_GetCreatedGraphBPreUser']
  }
  '/drives/{drive-id}/root/listItem/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.root.listItem.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.root.listItem.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/root/listItem/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.root.listItem.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/root/listItem/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/root/listItem/documentSetVersions': {
    /**
     * Get documentSetVersions from drives
     * @description Version information for a document set version created by a user.
     */
    get: operations['drive.root.listItem_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for drives */
    post: operations['drive.root.listItem_CreateDocumentSetVersion']
  }
  '/drives/{drive-id}/root/listItem/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from drives
     * @description Version information for a document set version created by a user.
     */
    get: operations['drive.root.listItem_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for drives */
    delete: operations['drive.root.listItem_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in drives */
    patch: operations['drive.root.listItem_UpdateDocumentSetVersion']
  }
  '/drives/{drive-id}/root/listItem/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from drives
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['drive.root.listItem.documentSetVersion_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.root.listItem.documentSetVersion_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.root.listItem.documentSetVersion_UpdateField']
  }
  '/drives/{drive-id}/root/listItem/documentSetVersions/{documentSetVersion-id}/microsoft.graph.restore': {
    /**
     * Invoke action restore
     * @description Restore a document set version.
     */
    post: operations['drive.root.listItem.documentSetVersion_restore']
  }
  '/drives/{drive-id}/root/listItem/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.listItem.documentSetVersion_GetCount']
  }
  '/drives/{drive-id}/root/listItem/driveItem': {
    /**
     * Get driveItem from drives
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['drive.root.listItem_GetDriveItem']
  }
  '/drives/{drive-id}/root/listItem/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive.root.listItem_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive.root.listItem_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive.root.listItem_DeleteDriveItemContent']
  }
  '/drives/{drive-id}/root/listItem/fields': {
    /**
     * Get fields from drives
     * @description The values of the columns set on this list item.
     */
    get: operations['drive.root.listItem_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.root.listItem_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.root.listItem_UpdateField']
  }
  '/drives/{drive-id}/root/listItem/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from drives
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['drive.root.listItem_GetLastModifiedGraphBPreUser']
  }
  '/drives/{drive-id}/root/listItem/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['drive.root.listItem.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['drive.root.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/drives/{drive-id}/root/listItem/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['drive.root.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/drives/{drive-id}/root/listItem/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/drives/{drive-id}/root/listItem/microsoft.graph.createLink': {
    /** Invoke action createLink */
    post: operations['drive.root.listItem_createLink']
  }
  '/drives/{drive-id}/root/listItem/microsoft.graph.getActivitiesByInterval()': {
    /** Invoke function getActivitiesByInterval */
    get: operations['drive.root.listItem_getActivitiesGraphBPreInterval']
  }
  "/drives/{drive-id}/root/listItem/microsoft.graph.getActivitiesByInterval(startDateTime='{startDateTime}',endDateTime='{endDateTime}',interval='{interval}')": {
    /** Invoke function getActivitiesByInterval */
    get: operations['drive.root.listItem_getActivitiesGraphBPreInterval']
  }
  '/drives/{drive-id}/root/listItem/versions': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the list item.
     */
    get: operations['drive.root.listItem_ListVersion']
    /** Create new navigation property to versions for drives */
    post: operations['drive.root.listItem_CreateVersion']
  }
  '/drives/{drive-id}/root/listItem/versions/{listItemVersion-id}': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the list item.
     */
    get: operations['drive.root.listItem_GetVersion']
    /** Delete navigation property versions for drives */
    delete: operations['drive.root.listItem_DeleteVersion']
    /** Update the navigation property versions in drives */
    patch: operations['drive.root.listItem_UpdateVersion']
  }
  '/drives/{drive-id}/root/listItem/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from drives
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['drive.root.listItem.version_GetField']
    /** Delete navigation property fields for drives */
    delete: operations['drive.root.listItem.version_DeleteField']
    /** Update the navigation property fields in drives */
    patch: operations['drive.root.listItem.version_UpdateField']
  }
  '/drives/{drive-id}/root/listItem/versions/{listItemVersion-id}/microsoft.graph.restoreVersion': {
    /**
     * Invoke action restoreVersion
     * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
     */
    post: operations['drive.root.listItem.version_restoreVersion']
  }
  '/drives/{drive-id}/root/listItem/versions/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.listItem.version_GetCount']
  }
  '/drives/{drive-id}/root/microsoft.graph.assignSensitivityLabel': {
    /** Invoke action assignSensitivityLabel */
    post: operations['drive.root_assignSensitivityLabel']
  }
  '/drives/{drive-id}/root/microsoft.graph.checkin': {
    /**
     * Invoke action checkin
     * @description Check in a checked out driveItem resource, which makes the version of the document available to others.
     */
    post: operations['drive.root_checkin']
  }
  '/drives/{drive-id}/root/microsoft.graph.checkout': {
    /**
     * Invoke action checkout
     * @description Check out a driveItem resource to prevent others from editing the document, and prevent your changes from being visible until the documented is checked in.
     */
    post: operations['drive.root_checkout']
  }
  '/drives/{drive-id}/root/microsoft.graph.copy': {
    /**
     * Invoke action copy
     * @description Asynchronously creates a copy of an driveItem (including any children), under a new parent item or with a new name.
     */
    post: operations['drive.root_copy']
  }
  '/drives/{drive-id}/root/microsoft.graph.createLink': {
    /**
     * Invoke action createLink
     * @description You can use createLink action to share a DriveItem via a sharing link. The createLink action will create a new sharing link if the specified link type doesn't already exist for the calling application.
     * If a sharing link of the specified type already exists for the app, the existing sharing link will be returned. DriveItem resources inherit sharing permissions from their ancestors.
     */
    post: operations['drive.root_createLink']
  }
  '/drives/{drive-id}/root/microsoft.graph.createUploadSession': {
    /** Invoke action createUploadSession */
    post: operations['drive.root_createUploadSession']
  }
  '/drives/{drive-id}/root/microsoft.graph.delta()': {
    /**
     * Invoke function delta
     * @description Track changes in a driveItem and its children over time. Your app begins by calling delta without any parameters.
     * The service starts enumerating the drive's hierarchy, returning pages of items and either an @odata.nextLink or an @odata.deltaLink, as described below.
     * Your app should continue calling with the @odata.nextLink until you no longer see an @odata.nextLink returned, or you see a response with an empty set of changes. After you have finished receiving all the changes, you may apply them to your local state.
     * To check for changes in the future, call delta again with the @odata.deltaLink from the previous response. Deleted items are returned with the deleted facet.
     * Items with this property set should be removed from your local state.
     */
    get: operations['drive.root_delta']
  }
  "/drives/{drive-id}/root/microsoft.graph.delta(token='{token}')": {
    /** Invoke function delta */
    get: operations['drive.root_delta']
  }
  '/drives/{drive-id}/root/microsoft.graph.extractSensitivityLabels': {
    /** Invoke action extractSensitivityLabels */
    post: operations['drive.root_extractSensitivityLabel']
  }
  '/drives/{drive-id}/root/microsoft.graph.follow': {
    /**
     * Invoke action follow
     * @description Follow a driveItem.
     */
    post: operations['drive.root_follow']
  }
  '/drives/{drive-id}/root/microsoft.graph.getActivitiesByInterval()': {
    /**
     * Invoke function getActivitiesByInterval
     * @description Get a collection of itemActivityStats resources for the activities that took place on this resource within the specified time interval. Analytics aggregates might not be available for all action types.
     */
    get: operations['drive.root_getActivitiesGraphBPreInterval']
  }
  "/drives/{drive-id}/root/microsoft.graph.getActivitiesByInterval(startDateTime='{startDateTime}',endDateTime='{endDateTime}',interval='{interval}')": {
    /** Invoke function getActivitiesByInterval */
    get: operations['drive.root_getActivitiesGraphBPreInterval']
  }
  '/drives/{drive-id}/root/microsoft.graph.invite': {
    /**
     * Invoke action invite
     * @description Sends a sharing invitation for a driveItem.
     * A sharing invitation provides permissions to the recipients and optionally sends them an email with a sharing link.
     */
    post: operations['drive.root_invite']
  }
  '/drives/{drive-id}/root/microsoft.graph.permanentDelete': {
    /** Invoke action permanentDelete */
    post: operations['drive.root_permanentDelete']
  }
  '/drives/{drive-id}/root/microsoft.graph.preview': {
    /** Invoke action preview */
    post: operations['drive.root_preview']
  }
  '/drives/{drive-id}/root/microsoft.graph.restore': {
    /**
     * Invoke action restore
     * @description Restore a driveItem that has been deleted and is currently in the recycle bin. NOTE: This functionality is currently only available for OneDrive Personal.
     */
    post: operations['drive.root_restore']
  }
  "/drives/{drive-id}/root/microsoft.graph.search(q='{q}')": {
    /**
     * Invoke function search
     * @description Search the hierarchy of items for items matching a query.
     * You can search within a folder hierarchy, a whole drive, or files shared with the current user.
     */
    get: operations['drive.root_search']
  }
  '/drives/{drive-id}/root/microsoft.graph.unfollow': {
    /**
     * Invoke action unfollow
     * @description Unfollow a driveItem.
     */
    post: operations['drive.root_unfollow']
  }
  '/drives/{drive-id}/root/microsoft.graph.validatePermission': {
    /** Invoke action validatePermission */
    post: operations['drive.root_validatePermission']
  }
  '/drives/{drive-id}/root/permissions': {
    /**
     * Get permissions from drives
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['drive.root_ListPermission']
    /** Create new navigation property to permissions for drives */
    post: operations['drive.root_CreatePermission']
  }
  '/drives/{drive-id}/root/permissions/{permission-id}': {
    /**
     * Get permissions from drives
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['drive.root_GetPermission']
    /** Delete navigation property permissions for drives */
    delete: operations['drive.root_DeletePermission']
    /** Update the navigation property permissions in drives */
    patch: operations['drive.root_UpdatePermission']
  }
  '/drives/{drive-id}/root/permissions/{permission-id}/microsoft.graph.grant': {
    /**
     * Invoke action grant
     * @description Grant users access to a link represented by a permission.
     */
    post: operations['drive.root.permission_grant']
  }
  '/drives/{drive-id}/root/permissions/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.permission_GetCount']
  }
  '/drives/{drive-id}/root/retentionLabel': {
    /**
     * Get retentionLabel from drives
     * @description Information about retention label and settings enforced on the driveItem. Read-write.
     */
    get: operations['drive.root_GetRetentionLabel']
    /** Delete navigation property retentionLabel for drives */
    delete: operations['drive.root_DeleteRetentionLabel']
    /** Update the navigation property retentionLabel in drives */
    patch: operations['drive.root_UpdateRetentionLabel']
  }
  '/drives/{drive-id}/root/subscriptions': {
    /**
     * Get subscriptions from drives
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['drive.root_ListSubscription']
    /** Create new navigation property to subscriptions for drives */
    post: operations['drive.root_CreateSubscription']
  }
  '/drives/{drive-id}/root/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from drives
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['drive.root_GetSubscription']
    /** Delete navigation property subscriptions for drives */
    delete: operations['drive.root_DeleteSubscription']
    /** Update the navigation property subscriptions in drives */
    patch: operations['drive.root_UpdateSubscription']
  }
  '/drives/{drive-id}/root/subscriptions/{subscription-id}/microsoft.graph.reauthorize': {
    /**
     * Invoke action reauthorize
     * @description Reauthorize a subscription when you receive a reauthorizationRequired challenge.
     */
    post: operations['drive.root.subscription_reauthorize']
  }
  '/drives/{drive-id}/root/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.subscription_GetCount']
  }
  '/drives/{drive-id}/root/thumbnails': {
    /**
     * Get thumbnails from drives
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['drive.root_ListThumbnail']
    /** Create new navigation property to thumbnails for drives */
    post: operations['drive.root_CreateThumbnail']
  }
  '/drives/{drive-id}/root/thumbnails/{thumbnailSet-id}': {
    /**
     * Get thumbnails from drives
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['drive.root_GetThumbnail']
    /** Delete navigation property thumbnails for drives */
    delete: operations['drive.root_DeleteThumbnail']
    /** Update the navigation property thumbnails in drives */
    patch: operations['drive.root_UpdateThumbnail']
  }
  '/drives/{drive-id}/root/thumbnails/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.thumbnail_GetCount']
  }
  '/drives/{drive-id}/root/versions': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['drive.root_ListVersion']
    /** Create new navigation property to versions for drives */
    post: operations['drive.root_CreateVersion']
  }
  '/drives/{drive-id}/root/versions/{driveItemVersion-id}': {
    /**
     * Get versions from drives
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['drive.root_GetVersion']
    /** Delete navigation property versions for drives */
    delete: operations['drive.root_DeleteVersion']
    /** Update the navigation property versions in drives */
    patch: operations['drive.root_UpdateVersion']
  }
  '/drives/{drive-id}/root/versions/{driveItemVersion-id}/content': {
    /**
     * Get content for the navigation property versions from drives
     * @description The content stream for this version of the item.
     */
    get: operations['drive.root_GetVersionsContent']
    /**
     * Update content for the navigation property versions in drives
     * @description The content stream for this version of the item.
     */
    put: operations['drive.root_SetVersionsContent']
    /**
     * Delete content for the navigation property versions in drives
     * @description The content stream for this version of the item.
     */
    delete: operations['drive.root_DeleteVersionsContent']
  }
  '/drives/{drive-id}/root/versions/{driveItemVersion-id}/microsoft.graph.restoreVersion': {
    /**
     * Invoke action restoreVersion
     * @description Restore a previous version of a DriveItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the file.
     */
    post: operations['drive.root.version_restoreVersion']
  }
  '/drives/{drive-id}/root/versions/$count': {
    /** Get the number of the resource */
    get: operations['drive.root.version_GetCount']
  }
  '/drives/{drive-id}/special': {
    /**
     * Get special from drives
     * @description Collection of common folders available in OneDrive. Read-only. Nullable.
     */
    get: operations['drive_ListSpecial']
  }
  '/drives/{drive-id}/special/{driveItem-id}': {
    /**
     * Get special from drives
     * @description Collection of common folders available in OneDrive. Read-only. Nullable.
     */
    get: operations['drive_GetSpecial']
  }
  '/drives/{drive-id}/special/{driveItem-id}/content': {
    /**
     * Get content for the navigation property special from drives
     * @description The content stream, if the item represents a file.
     */
    get: operations['drive_GetSpecialContent']
    /**
     * Update content for the navigation property special in drives
     * @description The content stream, if the item represents a file.
     */
    put: operations['drive_SetSpecialContent']
    /**
     * Delete content for the navigation property special in drives
     * @description The content stream, if the item represents a file.
     */
    delete: operations['drive_DeleteSpecialContent']
  }
  '/drives/{drive-id}/special/$count': {
    /** Get the number of the resource */
    get: operations['drive.special_GetCount']
  }
  '/groups/{group-id}/drive': {
    /**
     * Get drive from groups
     * @description The group's default drive. Read-only.
     */
    get: operations['group_GetDrive']
  }
  '/groups/{group-id}/drives': {
    /**
     * Get drives from groups
     * @description The group's drives. Read-only.
     */
    get: operations['group_ListDrive']
    /** Create new navigation property to drives for groups */
    post: operations['group_CreateDrive']
  }
  '/groups/{group-id}/drives/{drive-id}': {
    /**
     * Get drives from groups
     * @description The group's drives. Read-only.
     */
    get: operations['group_GetDrive']
    /** Delete navigation property drives for groups */
    delete: operations['group_DeleteDrive']
    /** Update the navigation property drives in groups */
    patch: operations['group_UpdateDrive']
  }
  '/groups/{group-id}/drives/{drive-id}/bundles': {
    /**
     * Get bundles from groups
     * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
     */
    get: operations['group.drive_ListBundle']
    /** Create new navigation property to bundles for groups */
    post: operations['group.drive_CreateBundle']
  }
  '/groups/{group-id}/drives/{drive-id}/bundles/{driveItem-id}': {
    /**
     * Get bundles from groups
     * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
     */
    get: operations['group.drive_GetBundle']
  }
  '/groups/{group-id}/drives/{drive-id}/bundles/{driveItem-id}/content': {
    /**
     * Get content for the navigation property bundles from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive_GetBundlesContent']
    /**
     * Update content for the navigation property bundles in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive_SetBundlesContent']
    /**
     * Delete content for the navigation property bundles in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive_DeleteBundlesContent']
  }
  '/groups/{group-id}/drives/{drive-id}/bundles/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.bundle_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/createdByUser': {
    /**
     * Get createdByUser from groups
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['group.drive_GetCreatedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/following': {
    /**
     * Get following from groups
     * @description The list of items the user is following. Only in OneDrive for Business.
     */
    get: operations['group.drive_ListFollowing']
  }
  '/groups/{group-id}/drives/{drive-id}/following/{driveItem-id}': {
    /**
     * Get following from groups
     * @description The list of items the user is following. Only in OneDrive for Business.
     */
    get: operations['group.drive_GetFollowing']
  }
  '/groups/{group-id}/drives/{drive-id}/following/{driveItem-id}/content': {
    /**
     * Get content for the navigation property following from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive_GetFollowingContent']
    /**
     * Update content for the navigation property following in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive_SetFollowingContent']
    /**
     * Delete content for the navigation property following in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive_DeleteFollowingContent']
  }
  '/groups/{group-id}/drives/{drive-id}/following/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.following_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items': {
    /**
     * Get items from groups
     * @description All items contained in the drive. Read-only. Nullable.
     */
    get: operations['group.drive_ListItem']
    /** Create new navigation property to items for groups */
    post: operations['group.drive_CreateItem']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}': {
    /**
     * Get items from groups
     * @description All items contained in the drive. Read-only. Nullable.
     */
    get: operations['group.drive_GetItem']
    /** Delete navigation property items for groups */
    delete: operations['group.drive_DeleteItem']
    /** Update the navigation property items in groups */
    patch: operations['group.drive_UpdateItem']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics': {
    /**
     * Get analytics from groups
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['group.drive.item_GetAnalytic']
    /** Delete navigation property analytics for groups */
    delete: operations['group.drive.item_DeleteAnalytic']
    /** Update the navigation property analytics in groups */
    patch: operations['group.drive.item_UpdateAnalytic']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/allTime': {
    /** Get allTime from groups */
    get: operations['group.drive.item.analytic_GetAllTime']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats': {
    /** Get itemActivityStats from groups */
    get: operations['group.drive.item.analytic_ListItemActivityStat']
    /** Create new navigation property to itemActivityStats for groups */
    post: operations['group.drive.item.analytic_CreateItemActivityStat']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}': {
    /** Get itemActivityStats from groups */
    get: operations['group.drive.item.analytic_GetItemActivityStat']
    /** Delete navigation property itemActivityStats for groups */
    delete: operations['group.drive.item.analytic_DeleteItemActivityStat']
    /** Update the navigation property itemActivityStats in groups */
    patch: operations['group.drive.item.analytic_UpdateItemActivityStat']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities': {
    /**
     * Get activities from groups
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['group.drive.item.analytic.itemActivityStat_ListActivity']
    /** Create new navigation property to activities for groups */
    post: operations['group.drive.item.analytic.itemActivityStat_CreateActivity']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}': {
    /**
     * Get activities from groups
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['group.drive.item.analytic.itemActivityStat_GetActivity']
    /** Delete navigation property activities for groups */
    delete: operations['group.drive.item.analytic.itemActivityStat_DeleteActivity']
    /** Update the navigation property activities in groups */
    patch: operations['group.drive.item.analytic.itemActivityStat_UpdateActivity']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem': {
    /**
     * Get driveItem from groups
     * @description Exposes the driveItem that was the target of this activity.
     */
    get: operations['group.drive.item.analytic.itemActivityStat.activity_GetDriveItem']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive.item.analytic.itemActivityStat.activity_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive.item.analytic.itemActivityStat.activity_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive.item.analytic.itemActivityStat.activity_DeleteDriveItemContent']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.analytic.itemActivityStat.activity_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.analytic.itemActivityStat_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/analytics/lastSevenDays': {
    /** Get lastSevenDays from groups */
    get: operations['group.drive.item.analytic_GetLastSevenDay']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/children': {
    /**
     * Get children from groups
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['group.drive.item_ListChild']
    /** Create new navigation property to children for groups */
    post: operations['group.drive.item_CreateChild']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/children/{driveItem-id1}': {
    /**
     * Get children from groups
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['group.drive.item_GetChild']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/children/{driveItem-id1}/content': {
    /**
     * Get content for the navigation property children from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive.item_GetChildrenContent']
    /**
     * Update content for the navigation property children in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive.item_SetChildrenContent']
    /**
     * Delete content for the navigation property children in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive.item_DeleteChildrenContent']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/children/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.child_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/content': {
    /**
     * Get content for the navigation property items from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive_GetItemsContent']
    /**
     * Update content for the navigation property items in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive_SetItemsContent']
    /**
     * Delete content for the navigation property items in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive_DeleteItemsContent']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/createdByUser': {
    /**
     * Get createdByUser from groups
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['group.drive.item_GetCreatedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.item.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.item.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.item.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from groups
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['group.drive.item_GetLastModifiedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.item.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.item.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.item.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem': {
    /**
     * Get listItem from groups
     * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
     */
    get: operations['group.drive.item_GetListItem']
    /** Delete navigation property listItem for groups */
    delete: operations['group.drive.item_DeleteListItem']
    /** Update the navigation property listItem in groups */
    patch: operations['group.drive.item_UpdateListItem']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/analytics': {
    /**
     * Get analytics from groups
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['group.drive.item.listItem_GetAnalytic']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser': {
    /**
     * Get createdByUser from groups
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['group.drive.item.listItem_GetCreatedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.item.listItem.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.item.listItem.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.item.listItem.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions': {
    /**
     * Get documentSetVersions from groups
     * @description Version information for a document set version created by a user.
     */
    get: operations['group.drive.item.listItem_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for groups */
    post: operations['group.drive.item.listItem_CreateDocumentSetVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from groups
     * @description Version information for a document set version created by a user.
     */
    get: operations['group.drive.item.listItem_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for groups */
    delete: operations['group.drive.item.listItem_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in groups */
    patch: operations['group.drive.item.listItem_UpdateDocumentSetVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from groups
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['group.drive.item.listItem.documentSetVersion_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.item.listItem.documentSetVersion_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.item.listItem.documentSetVersion_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.listItem.documentSetVersion_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/driveItem': {
    /**
     * Get driveItem from groups
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['group.drive.item.listItem_GetDriveItem']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive.item.listItem_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive.item.listItem_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive.item.listItem_DeleteDriveItemContent']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/fields': {
    /**
     * Get fields from groups
     * @description The values of the columns set on this list item.
     */
    get: operations['group.drive.item.listItem_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.item.listItem_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.item.listItem_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from groups
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['group.drive.item.listItem_GetLastModifiedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.item.listItem.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.item.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.item.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/versions': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the list item.
     */
    get: operations['group.drive.item.listItem_ListVersion']
    /** Create new navigation property to versions for groups */
    post: operations['group.drive.item.listItem_CreateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/versions/{listItemVersion-id}': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the list item.
     */
    get: operations['group.drive.item.listItem_GetVersion']
    /** Delete navigation property versions for groups */
    delete: operations['group.drive.item.listItem_DeleteVersion']
    /** Update the navigation property versions in groups */
    patch: operations['group.drive.item.listItem_UpdateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from groups
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['group.drive.item.listItem.version_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.item.listItem.version_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.item.listItem.version_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/listItem/versions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.listItem.version_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/permissions': {
    /**
     * Get permissions from groups
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['group.drive.item_ListPermission']
    /** Create new navigation property to permissions for groups */
    post: operations['group.drive.item_CreatePermission']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/permissions/{permission-id}': {
    /**
     * Get permissions from groups
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['group.drive.item_GetPermission']
    /** Delete navigation property permissions for groups */
    delete: operations['group.drive.item_DeletePermission']
    /** Update the navigation property permissions in groups */
    patch: operations['group.drive.item_UpdatePermission']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/permissions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.permission_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/retentionLabel': {
    /**
     * Get retentionLabel from groups
     * @description Information about retention label and settings enforced on the driveItem. Read-write.
     */
    get: operations['group.drive.item_GetRetentionLabel']
    /** Delete navigation property retentionLabel for groups */
    delete: operations['group.drive.item_DeleteRetentionLabel']
    /** Update the navigation property retentionLabel in groups */
    patch: operations['group.drive.item_UpdateRetentionLabel']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/subscriptions': {
    /**
     * Get subscriptions from groups
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['group.drive.item_ListSubscription']
    /** Create new navigation property to subscriptions for groups */
    post: operations['group.drive.item_CreateSubscription']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from groups
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['group.drive.item_GetSubscription']
    /** Delete navigation property subscriptions for groups */
    delete: operations['group.drive.item_DeleteSubscription']
    /** Update the navigation property subscriptions in groups */
    patch: operations['group.drive.item_UpdateSubscription']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.subscription_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/thumbnails': {
    /**
     * Get thumbnails from groups
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['group.drive.item_ListThumbnail']
    /** Create new navigation property to thumbnails for groups */
    post: operations['group.drive.item_CreateThumbnail']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/thumbnails/{thumbnailSet-id}': {
    /**
     * Get thumbnails from groups
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['group.drive.item_GetThumbnail']
    /** Delete navigation property thumbnails for groups */
    delete: operations['group.drive.item_DeleteThumbnail']
    /** Update the navigation property thumbnails in groups */
    patch: operations['group.drive.item_UpdateThumbnail']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/thumbnails/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.thumbnail_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/versions': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['group.drive.item_ListVersion']
    /** Create new navigation property to versions for groups */
    post: operations['group.drive.item_CreateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/versions/{driveItemVersion-id}': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['group.drive.item_GetVersion']
    /** Delete navigation property versions for groups */
    delete: operations['group.drive.item_DeleteVersion']
    /** Update the navigation property versions in groups */
    patch: operations['group.drive.item_UpdateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/versions/{driveItemVersion-id}/content': {
    /**
     * Get content for the navigation property versions from groups
     * @description The content stream for this version of the item.
     */
    get: operations['group.drive.item_GetVersionsContent']
    /**
     * Update content for the navigation property versions in groups
     * @description The content stream for this version of the item.
     */
    put: operations['group.drive.item_SetVersionsContent']
    /**
     * Delete content for the navigation property versions in groups
     * @description The content stream for this version of the item.
     */
    delete: operations['group.drive.item_DeleteVersionsContent']
  }
  '/groups/{group-id}/drives/{drive-id}/items/{driveItem-id}/versions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item.version_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/items/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.item_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from groups
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['group.drive_GetLastModifiedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list': {
    /**
     * Get list from groups
     * @description For drives in SharePoint, the underlying document library list. Read-only. Nullable.
     */
    get: operations['group.drive_GetList']
    /** Delete navigation property list for groups */
    delete: operations['group.drive_DeleteList']
    /** Update the navigation property list in groups */
    patch: operations['group.drive_UpdateList']
  }
  '/groups/{group-id}/drives/{drive-id}/list/columns': {
    /**
     * Get columns from groups
     * @description The collection of field definitions for this list.
     */
    get: operations['group.drive.list_ListColumn']
    /** Create new navigation property to columns for groups */
    post: operations['group.drive.list_CreateColumn']
  }
  '/groups/{group-id}/drives/{drive-id}/list/columns/{columnDefinition-id}': {
    /**
     * Get columns from groups
     * @description The collection of field definitions for this list.
     */
    get: operations['group.drive.list_GetColumn']
    /** Delete navigation property columns for groups */
    delete: operations['group.drive.list_DeleteColumn']
    /** Update the navigation property columns in groups */
    patch: operations['group.drive.list_UpdateColumn']
  }
  '/groups/{group-id}/drives/{drive-id}/list/columns/{columnDefinition-id}/sourceColumn': {
    /**
     * Get sourceColumn from groups
     * @description The source column for the content type column.
     */
    get: operations['group.drive.list.column_GetSourceColumn']
  }
  '/groups/{group-id}/drives/{drive-id}/list/columns/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.column_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes': {
    /**
     * Get contentTypes from groups
     * @description The collection of content types present in this list.
     */
    get: operations['group.drive.list_ListContentType']
    /** Create new navigation property to contentTypes for groups */
    post: operations['group.drive.list_CreateContentType']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}': {
    /**
     * Get contentTypes from groups
     * @description The collection of content types present in this list.
     */
    get: operations['group.drive.list_GetContentType']
    /** Delete navigation property contentTypes for groups */
    delete: operations['group.drive.list_DeleteContentType']
    /** Update the navigation property contentTypes in groups */
    patch: operations['group.drive.list_UpdateContentType']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/base': {
    /**
     * Get base from groups
     * @description Parent contentType from which this content type is derived.
     */
    get: operations['group.drive.list.contentType_GetBase']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes': {
    /**
     * Get baseTypes from groups
     * @description The collection of content types that are ancestors of this content type.
     */
    get: operations['group.drive.list.contentType_ListBaseType']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes/{contentType-id1}': {
    /**
     * Get baseTypes from groups
     * @description The collection of content types that are ancestors of this content type.
     */
    get: operations['group.drive.list.contentType_GetBaseType']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.contentType.baseType_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks': {
    /**
     * Get columnLinks from groups
     * @description The collection of columns that are required by this content type.
     */
    get: operations['group.drive.list.contentType_ListColumnLink']
    /** Create new navigation property to columnLinks for groups */
    post: operations['group.drive.list.contentType_CreateColumnLink']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks/{columnLink-id}': {
    /**
     * Get columnLinks from groups
     * @description The collection of columns that are required by this content type.
     */
    get: operations['group.drive.list.contentType_GetColumnLink']
    /** Delete navigation property columnLinks for groups */
    delete: operations['group.drive.list.contentType_DeleteColumnLink']
    /** Update the navigation property columnLinks in groups */
    patch: operations['group.drive.list.contentType_UpdateColumnLink']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.contentType.columnLink_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions': {
    /**
     * Get columnPositions from groups
     * @description Column order information in a content type.
     */
    get: operations['group.drive.list.contentType_ListColumnPosition']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}': {
    /**
     * Get columnPositions from groups
     * @description Column order information in a content type.
     */
    get: operations['group.drive.list.contentType_GetColumnPosition']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.contentType.columnPosition_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columns': {
    /**
     * Get columns from groups
     * @description The collection of column definitions for this content type.
     */
    get: operations['group.drive.list.contentType_ListColumn']
    /** Create new navigation property to columns for groups */
    post: operations['group.drive.list.contentType_CreateColumn']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/{columnDefinition-id}': {
    /**
     * Get columns from groups
     * @description The collection of column definitions for this content type.
     */
    get: operations['group.drive.list.contentType_GetColumn']
    /** Delete navigation property columns for groups */
    delete: operations['group.drive.list.contentType_DeleteColumn']
    /** Update the navigation property columns in groups */
    patch: operations['group.drive.list.contentType_UpdateColumn']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn': {
    /**
     * Get sourceColumn from groups
     * @description The source column for the content type column.
     */
    get: operations['group.drive.list.contentType.column_GetSourceColumn']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.contentType.column_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/contentTypes/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.contentType_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/createdByUser': {
    /**
     * Get createdByUser from groups
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['group.drive.list_GetCreatedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/list/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.list.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.list.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/list/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.list.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/list/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/drive': {
    /**
     * Get drive from groups
     * @description Allows access to the list as a drive resource with driveItems. Only present on document libraries.
     */
    get: operations['group.drive.list_GetDrive']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items': {
    /**
     * Get items from groups
     * @description All items contained in the list.
     */
    get: operations['group.drive.list_ListItem']
    /** Create new navigation property to items for groups */
    post: operations['group.drive.list_CreateItem']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}': {
    /**
     * Get items from groups
     * @description All items contained in the list.
     */
    get: operations['group.drive.list_GetItem']
    /** Delete navigation property items for groups */
    delete: operations['group.drive.list_DeleteItem']
    /** Update the navigation property items in groups */
    patch: operations['group.drive.list_UpdateItem']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/analytics': {
    /**
     * Get analytics from groups
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['group.drive.list.item_GetAnalytic']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/createdByUser': {
    /**
     * Get createdByUser from groups
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['group.drive.list.item_GetCreatedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.list.item.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.list.item.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.list.item.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.item.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions': {
    /**
     * Get documentSetVersions from groups
     * @description Version information for a document set version created by a user.
     */
    get: operations['group.drive.list.item_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for groups */
    post: operations['group.drive.list.item_CreateDocumentSetVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from groups
     * @description Version information for a document set version created by a user.
     */
    get: operations['group.drive.list.item_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for groups */
    delete: operations['group.drive.list.item_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in groups */
    patch: operations['group.drive.list.item_UpdateDocumentSetVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from groups
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['group.drive.list.item.documentSetVersion_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.list.item.documentSetVersion_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.list.item.documentSetVersion_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.item.documentSetVersion_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/driveItem': {
    /**
     * Get driveItem from groups
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['group.drive.list.item_GetDriveItem']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive.list.item_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive.list.item_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive.list.item_DeleteDriveItemContent']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/fields': {
    /**
     * Get fields from groups
     * @description The values of the columns set on this list item.
     */
    get: operations['group.drive.list.item_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.list.item_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.list.item_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from groups
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['group.drive.list.item_GetLastModifiedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.list.item.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.list.item.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.list.item.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/versions': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the list item.
     */
    get: operations['group.drive.list.item_ListVersion']
    /** Create new navigation property to versions for groups */
    post: operations['group.drive.list.item_CreateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/versions/{listItemVersion-id}': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the list item.
     */
    get: operations['group.drive.list.item_GetVersion']
    /** Delete navigation property versions for groups */
    delete: operations['group.drive.list.item_DeleteVersion']
    /** Update the navigation property versions in groups */
    patch: operations['group.drive.list.item_UpdateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from groups
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['group.drive.list.item.version_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.list.item.version_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.list.item.version_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/list/items/{listItem-id}/versions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.item.version_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from groups
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['group.drive.list_GetLastModifiedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/list/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.list.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.list.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/list/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.list.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/list/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/operations': {
    /**
     * Get operations from groups
     * @description The collection of long-running operations on the list.
     */
    get: operations['group.drive.list_ListOperation']
    /** Create new navigation property to operations for groups */
    post: operations['group.drive.list_CreateOperation']
  }
  '/groups/{group-id}/drives/{drive-id}/list/operations/{richLongRunningOperation-id}': {
    /**
     * Get operations from groups
     * @description The collection of long-running operations on the list.
     */
    get: operations['group.drive.list_GetOperation']
    /** Delete navigation property operations for groups */
    delete: operations['group.drive.list_DeleteOperation']
    /** Update the navigation property operations in groups */
    patch: operations['group.drive.list_UpdateOperation']
  }
  '/groups/{group-id}/drives/{drive-id}/list/operations/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.operation_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/list/subscriptions': {
    /**
     * Get subscriptions from groups
     * @description The set of subscriptions on the list.
     */
    get: operations['group.drive.list_ListSubscription']
    /** Create new navigation property to subscriptions for groups */
    post: operations['group.drive.list_CreateSubscription']
  }
  '/groups/{group-id}/drives/{drive-id}/list/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from groups
     * @description The set of subscriptions on the list.
     */
    get: operations['group.drive.list_GetSubscription']
    /** Delete navigation property subscriptions for groups */
    delete: operations['group.drive.list_DeleteSubscription']
    /** Update the navigation property subscriptions in groups */
    patch: operations['group.drive.list_UpdateSubscription']
  }
  '/groups/{group-id}/drives/{drive-id}/list/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.list.subscription_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root': {
    /**
     * Get root from groups
     * @description The root folder of the drive. Read-only.
     */
    get: operations['group.drive_GetRoot']
    /** Delete navigation property root for groups */
    delete: operations['group.drive_DeleteRoot']
    /** Update the navigation property root in groups */
    patch: operations['group.drive_UpdateRoot']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics': {
    /**
     * Get analytics from groups
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['group.drive.root_GetAnalytic']
    /** Delete navigation property analytics for groups */
    delete: operations['group.drive.root_DeleteAnalytic']
    /** Update the navigation property analytics in groups */
    patch: operations['group.drive.root_UpdateAnalytic']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/allTime': {
    /** Get allTime from groups */
    get: operations['group.drive.root.analytic_GetAllTime']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/itemActivityStats': {
    /** Get itemActivityStats from groups */
    get: operations['group.drive.root.analytic_ListItemActivityStat']
    /** Create new navigation property to itemActivityStats for groups */
    post: operations['group.drive.root.analytic_CreateItemActivityStat']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}': {
    /** Get itemActivityStats from groups */
    get: operations['group.drive.root.analytic_GetItemActivityStat']
    /** Delete navigation property itemActivityStats for groups */
    delete: operations['group.drive.root.analytic_DeleteItemActivityStat']
    /** Update the navigation property itemActivityStats in groups */
    patch: operations['group.drive.root.analytic_UpdateItemActivityStat']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities': {
    /**
     * Get activities from groups
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['group.drive.root.analytic.itemActivityStat_ListActivity']
    /** Create new navigation property to activities for groups */
    post: operations['group.drive.root.analytic.itemActivityStat_CreateActivity']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}': {
    /**
     * Get activities from groups
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['group.drive.root.analytic.itemActivityStat_GetActivity']
    /** Delete navigation property activities for groups */
    delete: operations['group.drive.root.analytic.itemActivityStat_DeleteActivity']
    /** Update the navigation property activities in groups */
    patch: operations['group.drive.root.analytic.itemActivityStat_UpdateActivity']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem': {
    /**
     * Get driveItem from groups
     * @description Exposes the driveItem that was the target of this activity.
     */
    get: operations['group.drive.root.analytic.itemActivityStat.activity_GetDriveItem']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive.root.analytic.itemActivityStat.activity_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive.root.analytic.itemActivityStat.activity_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive.root.analytic.itemActivityStat.activity_DeleteDriveItemContent']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.analytic.itemActivityStat.activity_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/itemActivityStats/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.analytic.itemActivityStat_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/analytics/lastSevenDays': {
    /** Get lastSevenDays from groups */
    get: operations['group.drive.root.analytic_GetLastSevenDay']
  }
  '/groups/{group-id}/drives/{drive-id}/root/children': {
    /**
     * Get children from groups
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['group.drive.root_ListChild']
    /** Create new navigation property to children for groups */
    post: operations['group.drive.root_CreateChild']
  }
  '/groups/{group-id}/drives/{drive-id}/root/children/{driveItem-id}': {
    /**
     * Get children from groups
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['group.drive.root_GetChild']
  }
  '/groups/{group-id}/drives/{drive-id}/root/children/{driveItem-id}/content': {
    /**
     * Get content for the navigation property children from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive.root_GetChildrenContent']
    /**
     * Update content for the navigation property children in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive.root_SetChildrenContent']
    /**
     * Delete content for the navigation property children in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive.root_DeleteChildrenContent']
  }
  '/groups/{group-id}/drives/{drive-id}/root/children/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.child_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/content': {
    /**
     * Get content for the navigation property root from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive_GetRootContent']
    /**
     * Update content for the navigation property root in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive_SetRootContent']
    /**
     * Delete content for the navigation property root in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive_DeleteRootContent']
  }
  '/groups/{group-id}/drives/{drive-id}/root/createdByUser': {
    /**
     * Get createdByUser from groups
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['group.drive.root_GetCreatedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/root/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.root.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.root.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/root/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.root.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/root/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from groups
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['group.drive.root_GetLastModifiedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/root/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.root.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.root.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/root/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.root.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/root/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem': {
    /**
     * Get listItem from groups
     * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
     */
    get: operations['group.drive.root_GetListItem']
    /** Delete navigation property listItem for groups */
    delete: operations['group.drive.root_DeleteListItem']
    /** Update the navigation property listItem in groups */
    patch: operations['group.drive.root_UpdateListItem']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/analytics': {
    /**
     * Get analytics from groups
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['group.drive.root.listItem_GetAnalytic']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/createdByUser': {
    /**
     * Get createdByUser from groups
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['group.drive.root.listItem_GetCreatedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.root.listItem.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.root.listItem.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.root.listItem.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/documentSetVersions': {
    /**
     * Get documentSetVersions from groups
     * @description Version information for a document set version created by a user.
     */
    get: operations['group.drive.root.listItem_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for groups */
    post: operations['group.drive.root.listItem_CreateDocumentSetVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from groups
     * @description Version information for a document set version created by a user.
     */
    get: operations['group.drive.root.listItem_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for groups */
    delete: operations['group.drive.root.listItem_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in groups */
    patch: operations['group.drive.root.listItem_UpdateDocumentSetVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from groups
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['group.drive.root.listItem.documentSetVersion_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.root.listItem.documentSetVersion_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.root.listItem.documentSetVersion_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.listItem.documentSetVersion_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/driveItem': {
    /**
     * Get driveItem from groups
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['group.drive.root.listItem_GetDriveItem']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive.root.listItem_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive.root.listItem_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive.root.listItem_DeleteDriveItemContent']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/fields': {
    /**
     * Get fields from groups
     * @description The values of the columns set on this list item.
     */
    get: operations['group.drive.root.listItem_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.root.listItem_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.root.listItem_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from groups
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['group.drive.root.listItem_GetLastModifiedGraphBPreUser']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['group.drive.root.listItem.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['group.drive.root.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['group.drive.root.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/versions': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the list item.
     */
    get: operations['group.drive.root.listItem_ListVersion']
    /** Create new navigation property to versions for groups */
    post: operations['group.drive.root.listItem_CreateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/versions/{listItemVersion-id}': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the list item.
     */
    get: operations['group.drive.root.listItem_GetVersion']
    /** Delete navigation property versions for groups */
    delete: operations['group.drive.root.listItem_DeleteVersion']
    /** Update the navigation property versions in groups */
    patch: operations['group.drive.root.listItem_UpdateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from groups
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['group.drive.root.listItem.version_GetField']
    /** Delete navigation property fields for groups */
    delete: operations['group.drive.root.listItem.version_DeleteField']
    /** Update the navigation property fields in groups */
    patch: operations['group.drive.root.listItem.version_UpdateField']
  }
  '/groups/{group-id}/drives/{drive-id}/root/listItem/versions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.listItem.version_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/permissions': {
    /**
     * Get permissions from groups
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['group.drive.root_ListPermission']
    /** Create new navigation property to permissions for groups */
    post: operations['group.drive.root_CreatePermission']
  }
  '/groups/{group-id}/drives/{drive-id}/root/permissions/{permission-id}': {
    /**
     * Get permissions from groups
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['group.drive.root_GetPermission']
    /** Delete navigation property permissions for groups */
    delete: operations['group.drive.root_DeletePermission']
    /** Update the navigation property permissions in groups */
    patch: operations['group.drive.root_UpdatePermission']
  }
  '/groups/{group-id}/drives/{drive-id}/root/permissions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.permission_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/retentionLabel': {
    /**
     * Get retentionLabel from groups
     * @description Information about retention label and settings enforced on the driveItem. Read-write.
     */
    get: operations['group.drive.root_GetRetentionLabel']
    /** Delete navigation property retentionLabel for groups */
    delete: operations['group.drive.root_DeleteRetentionLabel']
    /** Update the navigation property retentionLabel in groups */
    patch: operations['group.drive.root_UpdateRetentionLabel']
  }
  '/groups/{group-id}/drives/{drive-id}/root/subscriptions': {
    /**
     * Get subscriptions from groups
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['group.drive.root_ListSubscription']
    /** Create new navigation property to subscriptions for groups */
    post: operations['group.drive.root_CreateSubscription']
  }
  '/groups/{group-id}/drives/{drive-id}/root/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from groups
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['group.drive.root_GetSubscription']
    /** Delete navigation property subscriptions for groups */
    delete: operations['group.drive.root_DeleteSubscription']
    /** Update the navigation property subscriptions in groups */
    patch: operations['group.drive.root_UpdateSubscription']
  }
  '/groups/{group-id}/drives/{drive-id}/root/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.subscription_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/thumbnails': {
    /**
     * Get thumbnails from groups
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['group.drive.root_ListThumbnail']
    /** Create new navigation property to thumbnails for groups */
    post: operations['group.drive.root_CreateThumbnail']
  }
  '/groups/{group-id}/drives/{drive-id}/root/thumbnails/{thumbnailSet-id}': {
    /**
     * Get thumbnails from groups
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['group.drive.root_GetThumbnail']
    /** Delete navigation property thumbnails for groups */
    delete: operations['group.drive.root_DeleteThumbnail']
    /** Update the navigation property thumbnails in groups */
    patch: operations['group.drive.root_UpdateThumbnail']
  }
  '/groups/{group-id}/drives/{drive-id}/root/thumbnails/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.thumbnail_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/root/versions': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['group.drive.root_ListVersion']
    /** Create new navigation property to versions for groups */
    post: operations['group.drive.root_CreateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/root/versions/{driveItemVersion-id}': {
    /**
     * Get versions from groups
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['group.drive.root_GetVersion']
    /** Delete navigation property versions for groups */
    delete: operations['group.drive.root_DeleteVersion']
    /** Update the navigation property versions in groups */
    patch: operations['group.drive.root_UpdateVersion']
  }
  '/groups/{group-id}/drives/{drive-id}/root/versions/{driveItemVersion-id}/content': {
    /**
     * Get content for the navigation property versions from groups
     * @description The content stream for this version of the item.
     */
    get: operations['group.drive.root_GetVersionsContent']
    /**
     * Update content for the navigation property versions in groups
     * @description The content stream for this version of the item.
     */
    put: operations['group.drive.root_SetVersionsContent']
    /**
     * Delete content for the navigation property versions in groups
     * @description The content stream for this version of the item.
     */
    delete: operations['group.drive.root_DeleteVersionsContent']
  }
  '/groups/{group-id}/drives/{drive-id}/root/versions/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.root.version_GetCount']
  }
  '/groups/{group-id}/drives/{drive-id}/special': {
    /**
     * Get special from groups
     * @description Collection of common folders available in OneDrive. Read-only. Nullable.
     */
    get: operations['group.drive_ListSpecial']
  }
  '/groups/{group-id}/drives/{drive-id}/special/{driveItem-id}': {
    /**
     * Get special from groups
     * @description Collection of common folders available in OneDrive. Read-only. Nullable.
     */
    get: operations['group.drive_GetSpecial']
  }
  '/groups/{group-id}/drives/{drive-id}/special/{driveItem-id}/content': {
    /**
     * Get content for the navigation property special from groups
     * @description The content stream, if the item represents a file.
     */
    get: operations['group.drive_GetSpecialContent']
    /**
     * Update content for the navigation property special in groups
     * @description The content stream, if the item represents a file.
     */
    put: operations['group.drive_SetSpecialContent']
    /**
     * Delete content for the navigation property special in groups
     * @description The content stream, if the item represents a file.
     */
    delete: operations['group.drive_DeleteSpecialContent']
  }
  '/groups/{group-id}/drives/{drive-id}/special/$count': {
    /** Get the number of the resource */
    get: operations['group.drive.special_GetCount']
  }
  '/groups/{group-id}/drives/$count': {
    /** Get the number of the resource */
    get: operations['group.drive_GetCount']
  }
  '/shares': {
    /**
     * Accessing shared DriveItems
     * @description Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
     */
    get: operations['share.sharedDriveItem_ListSharedDriveItem']
    /** Add new entity to shares */
    post: operations['share.sharedDriveItem_CreateSharedDriveItem']
  }
  '/shares/{sharedDriveItem-id}': {
    /**
     * Accessing shared DriveItems
     * @description Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
     */
    get: operations['share.sharedDriveItem_GetSharedDriveItem']
    /** Delete entity from shares */
    delete: operations['share.sharedDriveItem_DeleteSharedDriveItem']
    /** Update entity in shares */
    patch: operations['share.sharedDriveItem_UpdateSharedDriveItem']
  }
  '/shares/{sharedDriveItem-id}/createdByUser': {
    /**
     * Get createdByUser from shares
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['share_GetCreatedGraphBPreUser']
  }
  '/shares/{sharedDriveItem-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['share.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['share.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/shares/{sharedDriveItem-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['share.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/shares/{sharedDriveItem-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['share.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/shares/{sharedDriveItem-id}/driveItem': {
    /**
     * Accessing shared DriveItems
     * @description Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
     */
    get: operations['share_GetDriveItem']
  }
  '/shares/{sharedDriveItem-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from shares
     * @description The content stream, if the item represents a file.
     */
    get: operations['share_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in shares
     * @description The content stream, if the item represents a file.
     */
    put: operations['share_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in shares
     * @description The content stream, if the item represents a file.
     */
    delete: operations['share_DeleteDriveItemContent']
  }
  '/shares/{sharedDriveItem-id}/items': {
    /**
     * Get items from shares
     * @description All driveItems contained in the sharing root. This collection cannot be enumerated.
     */
    get: operations['share_ListItem']
  }
  '/shares/{sharedDriveItem-id}/items/{driveItem-id}': {
    /**
     * Get items from shares
     * @description All driveItems contained in the sharing root. This collection cannot be enumerated.
     */
    get: operations['share_GetItem']
  }
  '/shares/{sharedDriveItem-id}/items/{driveItem-id}/content': {
    /**
     * Get content for the navigation property items from shares
     * @description The content stream, if the item represents a file.
     */
    get: operations['share_GetItemsContent']
    /**
     * Update content for the navigation property items in shares
     * @description The content stream, if the item represents a file.
     */
    put: operations['share_SetItemsContent']
    /**
     * Delete content for the navigation property items in shares
     * @description The content stream, if the item represents a file.
     */
    delete: operations['share_DeleteItemsContent']
  }
  '/shares/{sharedDriveItem-id}/items/$count': {
    /** Get the number of the resource */
    get: operations['share.item_GetCount']
  }
  '/shares/{sharedDriveItem-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from shares
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['share_GetLastModifiedGraphBPreUser']
  }
  '/shares/{sharedDriveItem-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['share.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['share.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/shares/{sharedDriveItem-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['share.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/shares/{sharedDriveItem-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['share.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list': {
    /**
     * Get list from shares
     * @description Used to access the underlying list
     */
    get: operations['share_GetList']
    /** Delete navigation property list for shares */
    delete: operations['share_DeleteList']
    /** Update the navigation property list in shares */
    patch: operations['share_UpdateList']
  }
  '/shares/{sharedDriveItem-id}/list/columns': {
    /**
     * Get columns from shares
     * @description The collection of field definitions for this list.
     */
    get: operations['share.list_ListColumn']
    /** Create new navigation property to columns for shares */
    post: operations['share.list_CreateColumn']
  }
  '/shares/{sharedDriveItem-id}/list/columns/{columnDefinition-id}': {
    /**
     * Get columns from shares
     * @description The collection of field definitions for this list.
     */
    get: operations['share.list_GetColumn']
    /** Delete navigation property columns for shares */
    delete: operations['share.list_DeleteColumn']
    /** Update the navigation property columns in shares */
    patch: operations['share.list_UpdateColumn']
  }
  '/shares/{sharedDriveItem-id}/list/columns/{columnDefinition-id}/sourceColumn': {
    /**
     * Get sourceColumn from shares
     * @description The source column for the content type column.
     */
    get: operations['share.list.column_GetSourceColumn']
  }
  '/shares/{sharedDriveItem-id}/list/columns/$count': {
    /** Get the number of the resource */
    get: operations['share.list.column_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes': {
    /**
     * Get contentTypes from shares
     * @description The collection of content types present in this list.
     */
    get: operations['share.list_ListContentType']
    /** Create new navigation property to contentTypes for shares */
    post: operations['share.list_CreateContentType']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}': {
    /**
     * Get contentTypes from shares
     * @description The collection of content types present in this list.
     */
    get: operations['share.list_GetContentType']
    /** Delete navigation property contentTypes for shares */
    delete: operations['share.list_DeleteContentType']
    /** Update the navigation property contentTypes in shares */
    patch: operations['share.list_UpdateContentType']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/base': {
    /**
     * Get base from shares
     * @description Parent contentType from which this content type is derived.
     */
    get: operations['share.list.contentType_GetBase']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/baseTypes': {
    /**
     * Get baseTypes from shares
     * @description The collection of content types that are ancestors of this content type.
     */
    get: operations['share.list.contentType_ListBaseType']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/baseTypes/{contentType-id1}': {
    /**
     * Get baseTypes from shares
     * @description The collection of content types that are ancestors of this content type.
     */
    get: operations['share.list.contentType_GetBaseType']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/baseTypes/$count': {
    /** Get the number of the resource */
    get: operations['share.list.contentType.baseType_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columnLinks': {
    /**
     * Get columnLinks from shares
     * @description The collection of columns that are required by this content type.
     */
    get: operations['share.list.contentType_ListColumnLink']
    /** Create new navigation property to columnLinks for shares */
    post: operations['share.list.contentType_CreateColumnLink']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columnLinks/{columnLink-id}': {
    /**
     * Get columnLinks from shares
     * @description The collection of columns that are required by this content type.
     */
    get: operations['share.list.contentType_GetColumnLink']
    /** Delete navigation property columnLinks for shares */
    delete: operations['share.list.contentType_DeleteColumnLink']
    /** Update the navigation property columnLinks in shares */
    patch: operations['share.list.contentType_UpdateColumnLink']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columnLinks/$count': {
    /** Get the number of the resource */
    get: operations['share.list.contentType.columnLink_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columnPositions': {
    /**
     * Get columnPositions from shares
     * @description Column order information in a content type.
     */
    get: operations['share.list.contentType_ListColumnPosition']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}': {
    /**
     * Get columnPositions from shares
     * @description Column order information in a content type.
     */
    get: operations['share.list.contentType_GetColumnPosition']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columnPositions/$count': {
    /** Get the number of the resource */
    get: operations['share.list.contentType.columnPosition_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columns': {
    /**
     * Get columns from shares
     * @description The collection of column definitions for this content type.
     */
    get: operations['share.list.contentType_ListColumn']
    /** Create new navigation property to columns for shares */
    post: operations['share.list.contentType_CreateColumn']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columns/{columnDefinition-id}': {
    /**
     * Get columns from shares
     * @description The collection of column definitions for this content type.
     */
    get: operations['share.list.contentType_GetColumn']
    /** Delete navigation property columns for shares */
    delete: operations['share.list.contentType_DeleteColumn']
    /** Update the navigation property columns in shares */
    patch: operations['share.list.contentType_UpdateColumn']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn': {
    /**
     * Get sourceColumn from shares
     * @description The source column for the content type column.
     */
    get: operations['share.list.contentType.column_GetSourceColumn']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/columns/$count': {
    /** Get the number of the resource */
    get: operations['share.list.contentType.column_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/microsoft.graph.associateWithHubSites': {
    /**
     * Invoke action associateWithHubSites
     * @description Associate a published content type present in a content type hub with a list of hub sites.
     */
    post: operations['share.list.contentType_associateGraphWPreHubSite']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/microsoft.graph.copyToDefaultContentLocation': {
    /**
     * Invoke action copyToDefaultContentLocation
     * @description Copy a file to a default content location in a content type. The file can then be added as a default file or template via a POST operation.
     */
    post: operations['share.list.contentType_copyToDefaultContentLocation']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/microsoft.graph.isPublished()': {
    /**
     * Invoke function isPublished
     * @description Check the publishing status of a contentType in a content type hub site.
     */
    get: operations['share.list.contentType_isPublished']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/microsoft.graph.publish': {
    /**
     * Invoke action publish
     * @description Publishes a contentType present in the content type hub site.
     */
    post: operations['share.list.contentType_publish']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/{contentType-id}/microsoft.graph.unpublish': {
    /**
     * Invoke action unpublish
     * @description Unpublish a contentType from a content type hub site.
     */
    post: operations['share.list.contentType_unpublish']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/$count': {
    /** Get the number of the resource */
    get: operations['share.list.contentType_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/microsoft.graph.addCopy': {
    /**
     * Invoke action addCopy
     * @description Add a copy of a content type from a site to a list.
     */
    post: operations['share.list.contentType_addCopy']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/microsoft.graph.addCopyFromContentTypeHub': {
    /**
     * Invoke action addCopyFromContentTypeHub
     * @description Add or sync a copy of a published content type from the content type hub to a target site or a list. This method is part of the content type publishing changes to optimize the syncing of published content types to sites and lists, effectively switching from a 'push everywhere' to 'pull as needed' approach. The method allows users to pull content types directly from the content type hub to a site or list. For more information, see contentType: getCompatibleHubContentTypes and the blog post Syntex Product Updates – August 2021.
     */
    post: operations['share.list.contentType_addCopyFromContentTypeHub']
  }
  '/shares/{sharedDriveItem-id}/list/contentTypes/microsoft.graph.getCompatibleHubContentTypes()': {
    /**
     * Invoke function getCompatibleHubContentTypes
     * @description Get a list of compatible content types from the content type hub that can be added to a target site or a list. This method is part of the content type publishing changes to optimize the syncing of published content types to sites and lists, effectively switching from a 'push everywhere' to 'pull as needed' approach. The method allows users to pull content types directly from the content type hub to a site or list. For more information, see contentType: addCopyFromContentTypeHub and the blog post Syntex Product Updates – August 2021.
     */
    get: operations['share.list.contentType_getCompatibleHubContentType']
  }
  '/shares/{sharedDriveItem-id}/list/createdByUser': {
    /**
     * Get createdByUser from shares
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['share.list_GetCreatedGraphBPreUser']
  }
  '/shares/{sharedDriveItem-id}/list/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['share.list.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['share.list.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/shares/{sharedDriveItem-id}/list/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['share.list.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/shares/{sharedDriveItem-id}/list/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['share.list.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/drive': {
    /**
     * Get drive from shares
     * @description Allows access to the list as a drive resource with driveItems. Only present on document libraries.
     */
    get: operations['share.list_GetDrive']
  }
  '/shares/{sharedDriveItem-id}/list/items': {
    /**
     * Get items from shares
     * @description All items contained in the list.
     */
    get: operations['share.list_ListItem']
    /** Create new navigation property to items for shares */
    post: operations['share.list_CreateItem']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}': {
    /**
     * Get items from shares
     * @description All items contained in the list.
     */
    get: operations['share.list_GetItem']
    /** Delete navigation property items for shares */
    delete: operations['share.list_DeleteItem']
    /** Update the navigation property items in shares */
    patch: operations['share.list_UpdateItem']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/analytics': {
    /**
     * Get analytics from shares
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['share.list.item_GetAnalytic']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/createdByUser': {
    /**
     * Get createdByUser from shares
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['share.list.item_GetCreatedGraphBPreUser']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['share.list.item.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['share.list.item.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['share.list.item.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['share.list.item.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/documentSetVersions': {
    /**
     * Get documentSetVersions from shares
     * @description Version information for a document set version created by a user.
     */
    get: operations['share.list.item_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for shares */
    post: operations['share.list.item_CreateDocumentSetVersion']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from shares
     * @description Version information for a document set version created by a user.
     */
    get: operations['share.list.item_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for shares */
    delete: operations['share.list.item_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in shares */
    patch: operations['share.list.item_UpdateDocumentSetVersion']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from shares
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['share.list.item.documentSetVersion_GetField']
    /** Delete navigation property fields for shares */
    delete: operations['share.list.item.documentSetVersion_DeleteField']
    /** Update the navigation property fields in shares */
    patch: operations['share.list.item.documentSetVersion_UpdateField']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}/microsoft.graph.restore': {
    /**
     * Invoke action restore
     * @description Restore a document set version.
     */
    post: operations['share.list.item.documentSetVersion_restore']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['share.list.item.documentSetVersion_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/driveItem': {
    /**
     * Get driveItem from shares
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['share.list.item_GetDriveItem']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from shares
     * @description The content stream, if the item represents a file.
     */
    get: operations['share.list.item_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in shares
     * @description The content stream, if the item represents a file.
     */
    put: operations['share.list.item_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in shares
     * @description The content stream, if the item represents a file.
     */
    delete: operations['share.list.item_DeleteDriveItemContent']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/fields': {
    /**
     * Get fields from shares
     * @description The values of the columns set on this list item.
     */
    get: operations['share.list.item_GetField']
    /** Delete navigation property fields for shares */
    delete: operations['share.list.item_DeleteField']
    /** Update the navigation property fields in shares */
    patch: operations['share.list.item_UpdateField']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from shares
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['share.list.item_GetLastModifiedGraphBPreUser']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['share.list.item.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['share.list.item.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['share.list.item.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['share.list.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/microsoft.graph.createLink': {
    /** Invoke action createLink */
    post: operations['share.list.item_createLink']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/microsoft.graph.getActivitiesByInterval()': {
    /** Invoke function getActivitiesByInterval */
    get: operations['share.list.item_getActivitiesGraphBPreInterval']
  }
  "/shares/{sharedDriveItem-id}/list/items/{listItem-id}/microsoft.graph.getActivitiesByInterval(startDateTime='{startDateTime}',endDateTime='{endDateTime}',interval='{interval}')": {
    /** Invoke function getActivitiesByInterval */
    get: operations['share.list.item_getActivitiesGraphBPreInterval']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/versions': {
    /**
     * Get versions from shares
     * @description The list of previous versions of the list item.
     */
    get: operations['share.list.item_ListVersion']
    /** Create new navigation property to versions for shares */
    post: operations['share.list.item_CreateVersion']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/versions/{listItemVersion-id}': {
    /**
     * Get versions from shares
     * @description The list of previous versions of the list item.
     */
    get: operations['share.list.item_GetVersion']
    /** Delete navigation property versions for shares */
    delete: operations['share.list.item_DeleteVersion']
    /** Update the navigation property versions in shares */
    patch: operations['share.list.item_UpdateVersion']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from shares
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['share.list.item.version_GetField']
    /** Delete navigation property fields for shares */
    delete: operations['share.list.item.version_DeleteField']
    /** Update the navigation property fields in shares */
    patch: operations['share.list.item.version_UpdateField']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/versions/{listItemVersion-id}/microsoft.graph.restoreVersion': {
    /**
     * Invoke action restoreVersion
     * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
     */
    post: operations['share.list.item.version_restoreVersion']
  }
  '/shares/{sharedDriveItem-id}/list/items/{listItem-id}/versions/$count': {
    /** Get the number of the resource */
    get: operations['share.list.item.version_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/items/microsoft.graph.delta()': {
    /**
     * Invoke function delta
     * @description Get newly created, updated, or deleted list items without having to perform a full read of the entire items collection. Your app begins by calling delta without any parameters.
     * The service starts enumerating the hierarchy of the list, returning pages of items, and either an @odata.nextLink or an @odata.deltaLink.
     * Your app should continue calling with the @odata.nextLink until you see an @odata.deltaLink returned. After you received all the changes, you can apply them to your local state.
     * To check for changes in the future, call delta again with the @odata.deltaLink from the previous response. The delta feed shows the latest state for each item, not each change. If an item was renamed twice, it only shows up once, with its latest name.
     * The same item might appear more than once in a delta feed, for various reasons. You should use the last occurrence you see. Items with this property should be removed from your local state.
     */
    get: operations['share.list.item_delta']
  }
  "/shares/{sharedDriveItem-id}/list/items/microsoft.graph.delta(token='{token}')": {
    /** Invoke function delta */
    get: operations['share.list.item_delta']
  }
  '/shares/{sharedDriveItem-id}/list/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from shares
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['share.list_GetLastModifiedGraphBPreUser']
  }
  '/shares/{sharedDriveItem-id}/list/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['share.list.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['share.list.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/shares/{sharedDriveItem-id}/list/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['share.list.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/shares/{sharedDriveItem-id}/list/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['share.list.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/operations': {
    /**
     * Get operations from shares
     * @description The collection of long-running operations on the list.
     */
    get: operations['share.list_ListOperation']
    /** Create new navigation property to operations for shares */
    post: operations['share.list_CreateOperation']
  }
  '/shares/{sharedDriveItem-id}/list/operations/{richLongRunningOperation-id}': {
    /**
     * Get operations from shares
     * @description The collection of long-running operations on the list.
     */
    get: operations['share.list_GetOperation']
    /** Delete navigation property operations for shares */
    delete: operations['share.list_DeleteOperation']
    /** Update the navigation property operations in shares */
    patch: operations['share.list_UpdateOperation']
  }
  '/shares/{sharedDriveItem-id}/list/operations/$count': {
    /** Get the number of the resource */
    get: operations['share.list.operation_GetCount']
  }
  '/shares/{sharedDriveItem-id}/list/subscriptions': {
    /**
     * Get subscriptions from shares
     * @description The set of subscriptions on the list.
     */
    get: operations['share.list_ListSubscription']
    /** Create new navigation property to subscriptions for shares */
    post: operations['share.list_CreateSubscription']
  }
  '/shares/{sharedDriveItem-id}/list/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from shares
     * @description The set of subscriptions on the list.
     */
    get: operations['share.list_GetSubscription']
    /** Delete navigation property subscriptions for shares */
    delete: operations['share.list_DeleteSubscription']
    /** Update the navigation property subscriptions in shares */
    patch: operations['share.list_UpdateSubscription']
  }
  '/shares/{sharedDriveItem-id}/list/subscriptions/{subscription-id}/microsoft.graph.reauthorize': {
    /**
     * Invoke action reauthorize
     * @description Reauthorize a subscription when you receive a reauthorizationRequired challenge.
     */
    post: operations['share.list.subscription_reauthorize']
  }
  '/shares/{sharedDriveItem-id}/list/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['share.list.subscription_GetCount']
  }
  '/shares/{sharedDriveItem-id}/listItem': {
    /**
     * Get listItem from shares
     * @description Used to access the underlying listItem
     */
    get: operations['share_GetListItem']
    /** Delete navigation property listItem for shares */
    delete: operations['share_DeleteListItem']
    /** Update the navigation property listItem in shares */
    patch: operations['share_UpdateListItem']
  }
  '/shares/{sharedDriveItem-id}/listItem/analytics': {
    /**
     * Get analytics from shares
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['share.listItem_GetAnalytic']
  }
  '/shares/{sharedDriveItem-id}/listItem/createdByUser': {
    /**
     * Get createdByUser from shares
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['share.listItem_GetCreatedGraphBPreUser']
  }
  '/shares/{sharedDriveItem-id}/listItem/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['share.listItem.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['share.listItem.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/shares/{sharedDriveItem-id}/listItem/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['share.listItem.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/shares/{sharedDriveItem-id}/listItem/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['share.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/shares/{sharedDriveItem-id}/listItem/documentSetVersions': {
    /**
     * Get documentSetVersions from shares
     * @description Version information for a document set version created by a user.
     */
    get: operations['share.listItem_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for shares */
    post: operations['share.listItem_CreateDocumentSetVersion']
  }
  '/shares/{sharedDriveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from shares
     * @description Version information for a document set version created by a user.
     */
    get: operations['share.listItem_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for shares */
    delete: operations['share.listItem_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in shares */
    patch: operations['share.listItem_UpdateDocumentSetVersion']
  }
  '/shares/{sharedDriveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from shares
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['share.listItem.documentSetVersion_GetField']
    /** Delete navigation property fields for shares */
    delete: operations['share.listItem.documentSetVersion_DeleteField']
    /** Update the navigation property fields in shares */
    patch: operations['share.listItem.documentSetVersion_UpdateField']
  }
  '/shares/{sharedDriveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}/microsoft.graph.restore': {
    /**
     * Invoke action restore
     * @description Restore a document set version.
     */
    post: operations['share.listItem.documentSetVersion_restore']
  }
  '/shares/{sharedDriveItem-id}/listItem/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['share.listItem.documentSetVersion_GetCount']
  }
  '/shares/{sharedDriveItem-id}/listItem/driveItem': {
    /**
     * Get driveItem from shares
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['share.listItem_GetDriveItem']
  }
  '/shares/{sharedDriveItem-id}/listItem/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from shares
     * @description The content stream, if the item represents a file.
     */
    get: operations['share.listItem_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in shares
     * @description The content stream, if the item represents a file.
     */
    put: operations['share.listItem_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in shares
     * @description The content stream, if the item represents a file.
     */
    delete: operations['share.listItem_DeleteDriveItemContent']
  }
  '/shares/{sharedDriveItem-id}/listItem/fields': {
    /**
     * Get fields from shares
     * @description The values of the columns set on this list item.
     */
    get: operations['share.listItem_GetField']
    /** Delete navigation property fields for shares */
    delete: operations['share.listItem_DeleteField']
    /** Update the navigation property fields in shares */
    patch: operations['share.listItem_UpdateField']
  }
  '/shares/{sharedDriveItem-id}/listItem/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from shares
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['share.listItem_GetLastModifiedGraphBPreUser']
  }
  '/shares/{sharedDriveItem-id}/listItem/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['share.listItem.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['share.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/shares/{sharedDriveItem-id}/listItem/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['share.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/shares/{sharedDriveItem-id}/listItem/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['share.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/shares/{sharedDriveItem-id}/listItem/microsoft.graph.createLink': {
    /** Invoke action createLink */
    post: operations['share.listItem_createLink']
  }
  '/shares/{sharedDriveItem-id}/listItem/microsoft.graph.getActivitiesByInterval()': {
    /** Invoke function getActivitiesByInterval */
    get: operations['share.listItem_getActivitiesGraphBPreInterval']
  }
  "/shares/{sharedDriveItem-id}/listItem/microsoft.graph.getActivitiesByInterval(startDateTime='{startDateTime}',endDateTime='{endDateTime}',interval='{interval}')": {
    /** Invoke function getActivitiesByInterval */
    get: operations['share.listItem_getActivitiesGraphBPreInterval']
  }
  '/shares/{sharedDriveItem-id}/listItem/versions': {
    /**
     * Get versions from shares
     * @description The list of previous versions of the list item.
     */
    get: operations['share.listItem_ListVersion']
    /** Create new navigation property to versions for shares */
    post: operations['share.listItem_CreateVersion']
  }
  '/shares/{sharedDriveItem-id}/listItem/versions/{listItemVersion-id}': {
    /**
     * Get versions from shares
     * @description The list of previous versions of the list item.
     */
    get: operations['share.listItem_GetVersion']
    /** Delete navigation property versions for shares */
    delete: operations['share.listItem_DeleteVersion']
    /** Update the navigation property versions in shares */
    patch: operations['share.listItem_UpdateVersion']
  }
  '/shares/{sharedDriveItem-id}/listItem/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from shares
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['share.listItem.version_GetField']
    /** Delete navigation property fields for shares */
    delete: operations['share.listItem.version_DeleteField']
    /** Update the navigation property fields in shares */
    patch: operations['share.listItem.version_UpdateField']
  }
  '/shares/{sharedDriveItem-id}/listItem/versions/{listItemVersion-id}/microsoft.graph.restoreVersion': {
    /**
     * Invoke action restoreVersion
     * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
     */
    post: operations['share.listItem.version_restoreVersion']
  }
  '/shares/{sharedDriveItem-id}/listItem/versions/$count': {
    /** Get the number of the resource */
    get: operations['share.listItem.version_GetCount']
  }
  '/shares/{sharedDriveItem-id}/permission': {
    /**
     * Get permission from shares
     * @description Used to access the permission representing the underlying sharing link
     */
    get: operations['share_GetPermission']
    /** Delete navigation property permission for shares */
    delete: operations['share_DeletePermission']
    /** Update the navigation property permission in shares */
    patch: operations['share_UpdatePermission']
  }
  '/shares/{sharedDriveItem-id}/permission/microsoft.graph.grant': {
    /**
     * Invoke action grant
     * @description Grant users access to a link represented by a permission.
     */
    post: operations['share.permission_grant']
  }
  '/shares/{sharedDriveItem-id}/root': {
    /**
     * Get root from shares
     * @description Used to access the underlying driveItem. Deprecated -- use driveItem instead.
     */
    get: operations['share_GetRoot']
  }
  '/shares/{sharedDriveItem-id}/root/content': {
    /**
     * Get content for the navigation property root from shares
     * @description The content stream, if the item represents a file.
     */
    get: operations['share_GetRootContent']
    /**
     * Update content for the navigation property root in shares
     * @description The content stream, if the item represents a file.
     */
    put: operations['share_SetRootContent']
    /**
     * Delete content for the navigation property root in shares
     * @description The content stream, if the item represents a file.
     */
    delete: operations['share_DeleteRootContent']
  }
  '/shares/{sharedDriveItem-id}/site': {
    /**
     * Get site from shares
     * @description Used to access the underlying site
     */
    get: operations['share_GetSite']
  }
  '/shares/$count': {
    /** Get the number of the resource */
    get: operations['share_GetCount']
  }
  '/users/{user-id}/drive': {
    /**
     * Get drive from users
     * @description The user's OneDrive. Read-only.
     */
    get: operations['user_GetDrive']
  }
  '/users/{user-id}/drives': {
    /**
     * Get drives from users
     * @description A collection of drives available for this user. Read-only.
     */
    get: operations['user_ListDrive']
    /** Create new navigation property to drives for users */
    post: operations['user_CreateDrive']
  }
  '/users/{user-id}/drives/{drive-id}': {
    /**
     * Get drives from users
     * @description A collection of drives available for this user. Read-only.
     */
    get: operations['user_GetDrive']
    /** Delete navigation property drives for users */
    delete: operations['user_DeleteDrive']
    /** Update the navigation property drives in users */
    patch: operations['user_UpdateDrive']
  }
  '/users/{user-id}/drives/{drive-id}/bundles': {
    /**
     * Get bundles from users
     * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
     */
    get: operations['user.drive_ListBundle']
    /** Create new navigation property to bundles for users */
    post: operations['user.drive_CreateBundle']
  }
  '/users/{user-id}/drives/{drive-id}/bundles/{driveItem-id}': {
    /**
     * Get bundles from users
     * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
     */
    get: operations['user.drive_GetBundle']
  }
  '/users/{user-id}/drives/{drive-id}/bundles/{driveItem-id}/content': {
    /**
     * Get content for the navigation property bundles from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive_GetBundlesContent']
    /**
     * Update content for the navigation property bundles in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive_SetBundlesContent']
    /**
     * Delete content for the navigation property bundles in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive_DeleteBundlesContent']
  }
  '/users/{user-id}/drives/{drive-id}/bundles/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.bundle_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/createdByUser': {
    /**
     * Get createdByUser from users
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['user.drive_GetCreatedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/following': {
    /**
     * Get following from users
     * @description The list of items the user is following. Only in OneDrive for Business.
     */
    get: operations['user.drive_ListFollowing']
  }
  '/users/{user-id}/drives/{drive-id}/following/{driveItem-id}': {
    /**
     * Get following from users
     * @description The list of items the user is following. Only in OneDrive for Business.
     */
    get: operations['user.drive_GetFollowing']
  }
  '/users/{user-id}/drives/{drive-id}/following/{driveItem-id}/content': {
    /**
     * Get content for the navigation property following from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive_GetFollowingContent']
    /**
     * Update content for the navigation property following in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive_SetFollowingContent']
    /**
     * Delete content for the navigation property following in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive_DeleteFollowingContent']
  }
  '/users/{user-id}/drives/{drive-id}/following/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.following_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items': {
    /**
     * Get items from users
     * @description All items contained in the drive. Read-only. Nullable.
     */
    get: operations['user.drive_ListItem']
    /** Create new navigation property to items for users */
    post: operations['user.drive_CreateItem']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}': {
    /**
     * Get items from users
     * @description All items contained in the drive. Read-only. Nullable.
     */
    get: operations['user.drive_GetItem']
    /** Delete navigation property items for users */
    delete: operations['user.drive_DeleteItem']
    /** Update the navigation property items in users */
    patch: operations['user.drive_UpdateItem']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics': {
    /**
     * Get analytics from users
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['user.drive.item_GetAnalytic']
    /** Delete navigation property analytics for users */
    delete: operations['user.drive.item_DeleteAnalytic']
    /** Update the navigation property analytics in users */
    patch: operations['user.drive.item_UpdateAnalytic']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/allTime': {
    /** Get allTime from users */
    get: operations['user.drive.item.analytic_GetAllTime']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats': {
    /** Get itemActivityStats from users */
    get: operations['user.drive.item.analytic_ListItemActivityStat']
    /** Create new navigation property to itemActivityStats for users */
    post: operations['user.drive.item.analytic_CreateItemActivityStat']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}': {
    /** Get itemActivityStats from users */
    get: operations['user.drive.item.analytic_GetItemActivityStat']
    /** Delete navigation property itemActivityStats for users */
    delete: operations['user.drive.item.analytic_DeleteItemActivityStat']
    /** Update the navigation property itemActivityStats in users */
    patch: operations['user.drive.item.analytic_UpdateItemActivityStat']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities': {
    /**
     * Get activities from users
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['user.drive.item.analytic.itemActivityStat_ListActivity']
    /** Create new navigation property to activities for users */
    post: operations['user.drive.item.analytic.itemActivityStat_CreateActivity']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}': {
    /**
     * Get activities from users
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['user.drive.item.analytic.itemActivityStat_GetActivity']
    /** Delete navigation property activities for users */
    delete: operations['user.drive.item.analytic.itemActivityStat_DeleteActivity']
    /** Update the navigation property activities in users */
    patch: operations['user.drive.item.analytic.itemActivityStat_UpdateActivity']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem': {
    /**
     * Get driveItem from users
     * @description Exposes the driveItem that was the target of this activity.
     */
    get: operations['user.drive.item.analytic.itemActivityStat.activity_GetDriveItem']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive.item.analytic.itemActivityStat.activity_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive.item.analytic.itemActivityStat.activity_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive.item.analytic.itemActivityStat.activity_DeleteDriveItemContent']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/{itemActivityStat-id}/activities/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.analytic.itemActivityStat.activity_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/itemActivityStats/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.analytic.itemActivityStat_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/analytics/lastSevenDays': {
    /** Get lastSevenDays from users */
    get: operations['user.drive.item.analytic_GetLastSevenDay']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/children': {
    /**
     * Get children from users
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['user.drive.item_ListChild']
    /** Create new navigation property to children for users */
    post: operations['user.drive.item_CreateChild']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/children/{driveItem-id1}': {
    /**
     * Get children from users
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['user.drive.item_GetChild']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/children/{driveItem-id1}/content': {
    /**
     * Get content for the navigation property children from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive.item_GetChildrenContent']
    /**
     * Update content for the navigation property children in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive.item_SetChildrenContent']
    /**
     * Delete content for the navigation property children in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive.item_DeleteChildrenContent']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/children/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.child_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/content': {
    /**
     * Get content for the navigation property items from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive_GetItemsContent']
    /**
     * Update content for the navigation property items in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive_SetItemsContent']
    /**
     * Delete content for the navigation property items in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive_DeleteItemsContent']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/createdByUser': {
    /**
     * Get createdByUser from users
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['user.drive.item_GetCreatedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.item.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.item.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.item.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from users
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['user.drive.item_GetLastModifiedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.item.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.item.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.item.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem': {
    /**
     * Get listItem from users
     * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
     */
    get: operations['user.drive.item_GetListItem']
    /** Delete navigation property listItem for users */
    delete: operations['user.drive.item_DeleteListItem']
    /** Update the navigation property listItem in users */
    patch: operations['user.drive.item_UpdateListItem']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/analytics': {
    /**
     * Get analytics from users
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['user.drive.item.listItem_GetAnalytic']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser': {
    /**
     * Get createdByUser from users
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['user.drive.item.listItem_GetCreatedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.item.listItem.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.item.listItem.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.item.listItem.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions': {
    /**
     * Get documentSetVersions from users
     * @description Version information for a document set version created by a user.
     */
    get: operations['user.drive.item.listItem_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for users */
    post: operations['user.drive.item.listItem_CreateDocumentSetVersion']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from users
     * @description Version information for a document set version created by a user.
     */
    get: operations['user.drive.item.listItem_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for users */
    delete: operations['user.drive.item.listItem_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in users */
    patch: operations['user.drive.item.listItem_UpdateDocumentSetVersion']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from users
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['user.drive.item.listItem.documentSetVersion_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.item.listItem.documentSetVersion_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.item.listItem.documentSetVersion_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.listItem.documentSetVersion_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/driveItem': {
    /**
     * Get driveItem from users
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['user.drive.item.listItem_GetDriveItem']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive.item.listItem_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive.item.listItem_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive.item.listItem_DeleteDriveItemContent']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/fields': {
    /**
     * Get fields from users
     * @description The values of the columns set on this list item.
     */
    get: operations['user.drive.item.listItem_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.item.listItem_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.item.listItem_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from users
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['user.drive.item.listItem_GetLastModifiedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.item.listItem.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.item.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.item.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/versions': {
    /**
     * Get versions from users
     * @description The list of previous versions of the list item.
     */
    get: operations['user.drive.item.listItem_ListVersion']
    /** Create new navigation property to versions for users */
    post: operations['user.drive.item.listItem_CreateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/versions/{listItemVersion-id}': {
    /**
     * Get versions from users
     * @description The list of previous versions of the list item.
     */
    get: operations['user.drive.item.listItem_GetVersion']
    /** Delete navigation property versions for users */
    delete: operations['user.drive.item.listItem_DeleteVersion']
    /** Update the navigation property versions in users */
    patch: operations['user.drive.item.listItem_UpdateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from users
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['user.drive.item.listItem.version_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.item.listItem.version_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.item.listItem.version_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/listItem/versions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.listItem.version_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/permissions': {
    /**
     * Get permissions from users
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['user.drive.item_ListPermission']
    /** Create new navigation property to permissions for users */
    post: operations['user.drive.item_CreatePermission']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/permissions/{permission-id}': {
    /**
     * Get permissions from users
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['user.drive.item_GetPermission']
    /** Delete navigation property permissions for users */
    delete: operations['user.drive.item_DeletePermission']
    /** Update the navigation property permissions in users */
    patch: operations['user.drive.item_UpdatePermission']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/permissions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.permission_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/retentionLabel': {
    /**
     * Get retentionLabel from users
     * @description Information about retention label and settings enforced on the driveItem. Read-write.
     */
    get: operations['user.drive.item_GetRetentionLabel']
    /** Delete navigation property retentionLabel for users */
    delete: operations['user.drive.item_DeleteRetentionLabel']
    /** Update the navigation property retentionLabel in users */
    patch: operations['user.drive.item_UpdateRetentionLabel']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/subscriptions': {
    /**
     * Get subscriptions from users
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['user.drive.item_ListSubscription']
    /** Create new navigation property to subscriptions for users */
    post: operations['user.drive.item_CreateSubscription']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from users
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['user.drive.item_GetSubscription']
    /** Delete navigation property subscriptions for users */
    delete: operations['user.drive.item_DeleteSubscription']
    /** Update the navigation property subscriptions in users */
    patch: operations['user.drive.item_UpdateSubscription']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.subscription_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/thumbnails': {
    /**
     * Get thumbnails from users
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['user.drive.item_ListThumbnail']
    /** Create new navigation property to thumbnails for users */
    post: operations['user.drive.item_CreateThumbnail']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/thumbnails/{thumbnailSet-id}': {
    /**
     * Get thumbnails from users
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['user.drive.item_GetThumbnail']
    /** Delete navigation property thumbnails for users */
    delete: operations['user.drive.item_DeleteThumbnail']
    /** Update the navigation property thumbnails in users */
    patch: operations['user.drive.item_UpdateThumbnail']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/thumbnails/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.thumbnail_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/versions': {
    /**
     * Get versions from users
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['user.drive.item_ListVersion']
    /** Create new navigation property to versions for users */
    post: operations['user.drive.item_CreateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/versions/{driveItemVersion-id}': {
    /**
     * Get versions from users
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['user.drive.item_GetVersion']
    /** Delete navigation property versions for users */
    delete: operations['user.drive.item_DeleteVersion']
    /** Update the navigation property versions in users */
    patch: operations['user.drive.item_UpdateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/versions/{driveItemVersion-id}/content': {
    /**
     * Get content for the navigation property versions from users
     * @description The content stream for this version of the item.
     */
    get: operations['user.drive.item_GetVersionsContent']
    /**
     * Update content for the navigation property versions in users
     * @description The content stream for this version of the item.
     */
    put: operations['user.drive.item_SetVersionsContent']
    /**
     * Delete content for the navigation property versions in users
     * @description The content stream for this version of the item.
     */
    delete: operations['user.drive.item_DeleteVersionsContent']
  }
  '/users/{user-id}/drives/{drive-id}/items/{driveItem-id}/versions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item.version_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/items/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.item_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from users
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['user.drive_GetLastModifiedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list': {
    /**
     * Get list from users
     * @description For drives in SharePoint, the underlying document library list. Read-only. Nullable.
     */
    get: operations['user.drive_GetList']
    /** Delete navigation property list for users */
    delete: operations['user.drive_DeleteList']
    /** Update the navigation property list in users */
    patch: operations['user.drive_UpdateList']
  }
  '/users/{user-id}/drives/{drive-id}/list/columns': {
    /**
     * Get columns from users
     * @description The collection of field definitions for this list.
     */
    get: operations['user.drive.list_ListColumn']
    /** Create new navigation property to columns for users */
    post: operations['user.drive.list_CreateColumn']
  }
  '/users/{user-id}/drives/{drive-id}/list/columns/{columnDefinition-id}': {
    /**
     * Get columns from users
     * @description The collection of field definitions for this list.
     */
    get: operations['user.drive.list_GetColumn']
    /** Delete navigation property columns for users */
    delete: operations['user.drive.list_DeleteColumn']
    /** Update the navigation property columns in users */
    patch: operations['user.drive.list_UpdateColumn']
  }
  '/users/{user-id}/drives/{drive-id}/list/columns/{columnDefinition-id}/sourceColumn': {
    /**
     * Get sourceColumn from users
     * @description The source column for the content type column.
     */
    get: operations['user.drive.list.column_GetSourceColumn']
  }
  '/users/{user-id}/drives/{drive-id}/list/columns/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.column_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes': {
    /**
     * Get contentTypes from users
     * @description The collection of content types present in this list.
     */
    get: operations['user.drive.list_ListContentType']
    /** Create new navigation property to contentTypes for users */
    post: operations['user.drive.list_CreateContentType']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}': {
    /**
     * Get contentTypes from users
     * @description The collection of content types present in this list.
     */
    get: operations['user.drive.list_GetContentType']
    /** Delete navigation property contentTypes for users */
    delete: operations['user.drive.list_DeleteContentType']
    /** Update the navigation property contentTypes in users */
    patch: operations['user.drive.list_UpdateContentType']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/base': {
    /**
     * Get base from users
     * @description Parent contentType from which this content type is derived.
     */
    get: operations['user.drive.list.contentType_GetBase']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes': {
    /**
     * Get baseTypes from users
     * @description The collection of content types that are ancestors of this content type.
     */
    get: operations['user.drive.list.contentType_ListBaseType']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes/{contentType-id1}': {
    /**
     * Get baseTypes from users
     * @description The collection of content types that are ancestors of this content type.
     */
    get: operations['user.drive.list.contentType_GetBaseType']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/baseTypes/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.contentType.baseType_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks': {
    /**
     * Get columnLinks from users
     * @description The collection of columns that are required by this content type.
     */
    get: operations['user.drive.list.contentType_ListColumnLink']
    /** Create new navigation property to columnLinks for users */
    post: operations['user.drive.list.contentType_CreateColumnLink']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks/{columnLink-id}': {
    /**
     * Get columnLinks from users
     * @description The collection of columns that are required by this content type.
     */
    get: operations['user.drive.list.contentType_GetColumnLink']
    /** Delete navigation property columnLinks for users */
    delete: operations['user.drive.list.contentType_DeleteColumnLink']
    /** Update the navigation property columnLinks in users */
    patch: operations['user.drive.list.contentType_UpdateColumnLink']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnLinks/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.contentType.columnLink_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions': {
    /**
     * Get columnPositions from users
     * @description Column order information in a content type.
     */
    get: operations['user.drive.list.contentType_ListColumnPosition']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions/{columnDefinition-id}': {
    /**
     * Get columnPositions from users
     * @description Column order information in a content type.
     */
    get: operations['user.drive.list.contentType_GetColumnPosition']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columnPositions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.contentType.columnPosition_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columns': {
    /**
     * Get columns from users
     * @description The collection of column definitions for this content type.
     */
    get: operations['user.drive.list.contentType_ListColumn']
    /** Create new navigation property to columns for users */
    post: operations['user.drive.list.contentType_CreateColumn']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/{columnDefinition-id}': {
    /**
     * Get columns from users
     * @description The collection of column definitions for this content type.
     */
    get: operations['user.drive.list.contentType_GetColumn']
    /** Delete navigation property columns for users */
    delete: operations['user.drive.list.contentType_DeleteColumn']
    /** Update the navigation property columns in users */
    patch: operations['user.drive.list.contentType_UpdateColumn']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/{columnDefinition-id}/sourceColumn': {
    /**
     * Get sourceColumn from users
     * @description The source column for the content type column.
     */
    get: operations['user.drive.list.contentType.column_GetSourceColumn']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/{contentType-id}/columns/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.contentType.column_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/contentTypes/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.contentType_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/createdByUser': {
    /**
     * Get createdByUser from users
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['user.drive.list_GetCreatedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/list/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.list.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.list.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/list/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.list.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/list/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/drive': {
    /**
     * Get drive from users
     * @description Allows access to the list as a drive resource with driveItems. Only present on document libraries.
     */
    get: operations['user.drive.list_GetDrive']
  }
  '/users/{user-id}/drives/{drive-id}/list/items': {
    /**
     * Get items from users
     * @description All items contained in the list.
     */
    get: operations['user.drive.list_ListItem']
    /** Create new navigation property to items for users */
    post: operations['user.drive.list_CreateItem']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}': {
    /**
     * Get items from users
     * @description All items contained in the list.
     */
    get: operations['user.drive.list_GetItem']
    /** Delete navigation property items for users */
    delete: operations['user.drive.list_DeleteItem']
    /** Update the navigation property items in users */
    patch: operations['user.drive.list_UpdateItem']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/analytics': {
    /**
     * Get analytics from users
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['user.drive.list.item_GetAnalytic']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/createdByUser': {
    /**
     * Get createdByUser from users
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['user.drive.list.item_GetCreatedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.list.item.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.list.item.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.list.item.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.item.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions': {
    /**
     * Get documentSetVersions from users
     * @description Version information for a document set version created by a user.
     */
    get: operations['user.drive.list.item_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for users */
    post: operations['user.drive.list.item_CreateDocumentSetVersion']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from users
     * @description Version information for a document set version created by a user.
     */
    get: operations['user.drive.list.item_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for users */
    delete: operations['user.drive.list.item_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in users */
    patch: operations['user.drive.list.item_UpdateDocumentSetVersion']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from users
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['user.drive.list.item.documentSetVersion_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.list.item.documentSetVersion_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.list.item.documentSetVersion_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.item.documentSetVersion_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/driveItem': {
    /**
     * Get driveItem from users
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['user.drive.list.item_GetDriveItem']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive.list.item_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive.list.item_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive.list.item_DeleteDriveItemContent']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/fields': {
    /**
     * Get fields from users
     * @description The values of the columns set on this list item.
     */
    get: operations['user.drive.list.item_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.list.item_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.list.item_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from users
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['user.drive.list.item_GetLastModifiedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.list.item.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.list.item.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.list.item.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/versions': {
    /**
     * Get versions from users
     * @description The list of previous versions of the list item.
     */
    get: operations['user.drive.list.item_ListVersion']
    /** Create new navigation property to versions for users */
    post: operations['user.drive.list.item_CreateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/versions/{listItemVersion-id}': {
    /**
     * Get versions from users
     * @description The list of previous versions of the list item.
     */
    get: operations['user.drive.list.item_GetVersion']
    /** Delete navigation property versions for users */
    delete: operations['user.drive.list.item_DeleteVersion']
    /** Update the navigation property versions in users */
    patch: operations['user.drive.list.item_UpdateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from users
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['user.drive.list.item.version_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.list.item.version_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.list.item.version_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/list/items/{listItem-id}/versions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.item.version_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from users
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['user.drive.list_GetLastModifiedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/list/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.list.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.list.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/list/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.list.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/list/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/operations': {
    /**
     * Get operations from users
     * @description The collection of long-running operations on the list.
     */
    get: operations['user.drive.list_ListOperation']
    /** Create new navigation property to operations for users */
    post: operations['user.drive.list_CreateOperation']
  }
  '/users/{user-id}/drives/{drive-id}/list/operations/{richLongRunningOperation-id}': {
    /**
     * Get operations from users
     * @description The collection of long-running operations on the list.
     */
    get: operations['user.drive.list_GetOperation']
    /** Delete navigation property operations for users */
    delete: operations['user.drive.list_DeleteOperation']
    /** Update the navigation property operations in users */
    patch: operations['user.drive.list_UpdateOperation']
  }
  '/users/{user-id}/drives/{drive-id}/list/operations/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.operation_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/list/subscriptions': {
    /**
     * Get subscriptions from users
     * @description The set of subscriptions on the list.
     */
    get: operations['user.drive.list_ListSubscription']
    /** Create new navigation property to subscriptions for users */
    post: operations['user.drive.list_CreateSubscription']
  }
  '/users/{user-id}/drives/{drive-id}/list/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from users
     * @description The set of subscriptions on the list.
     */
    get: operations['user.drive.list_GetSubscription']
    /** Delete navigation property subscriptions for users */
    delete: operations['user.drive.list_DeleteSubscription']
    /** Update the navigation property subscriptions in users */
    patch: operations['user.drive.list_UpdateSubscription']
  }
  '/users/{user-id}/drives/{drive-id}/list/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.list.subscription_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root': {
    /**
     * Get root from users
     * @description The root folder of the drive. Read-only.
     */
    get: operations['user.drive_GetRoot']
    /** Delete navigation property root for users */
    delete: operations['user.drive_DeleteRoot']
    /** Update the navigation property root in users */
    patch: operations['user.drive_UpdateRoot']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics': {
    /**
     * Get analytics from users
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['user.drive.root_GetAnalytic']
    /** Delete navigation property analytics for users */
    delete: operations['user.drive.root_DeleteAnalytic']
    /** Update the navigation property analytics in users */
    patch: operations['user.drive.root_UpdateAnalytic']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/allTime': {
    /** Get allTime from users */
    get: operations['user.drive.root.analytic_GetAllTime']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/itemActivityStats': {
    /** Get itemActivityStats from users */
    get: operations['user.drive.root.analytic_ListItemActivityStat']
    /** Create new navigation property to itemActivityStats for users */
    post: operations['user.drive.root.analytic_CreateItemActivityStat']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}': {
    /** Get itemActivityStats from users */
    get: operations['user.drive.root.analytic_GetItemActivityStat']
    /** Delete navigation property itemActivityStats for users */
    delete: operations['user.drive.root.analytic_DeleteItemActivityStat']
    /** Update the navigation property itemActivityStats in users */
    patch: operations['user.drive.root.analytic_UpdateItemActivityStat']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities': {
    /**
     * Get activities from users
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['user.drive.root.analytic.itemActivityStat_ListActivity']
    /** Create new navigation property to activities for users */
    post: operations['user.drive.root.analytic.itemActivityStat_CreateActivity']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}': {
    /**
     * Get activities from users
     * @description Exposes the itemActivities represented in this itemActivityStat resource.
     */
    get: operations['user.drive.root.analytic.itemActivityStat_GetActivity']
    /** Delete navigation property activities for users */
    delete: operations['user.drive.root.analytic.itemActivityStat_DeleteActivity']
    /** Update the navigation property activities in users */
    patch: operations['user.drive.root.analytic.itemActivityStat_UpdateActivity']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem': {
    /**
     * Get driveItem from users
     * @description Exposes the driveItem that was the target of this activity.
     */
    get: operations['user.drive.root.analytic.itemActivityStat.activity_GetDriveItem']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/{itemActivity-id}/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive.root.analytic.itemActivityStat.activity_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive.root.analytic.itemActivityStat.activity_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive.root.analytic.itemActivityStat.activity_DeleteDriveItemContent']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/itemActivityStats/{itemActivityStat-id}/activities/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.analytic.itemActivityStat.activity_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/itemActivityStats/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.analytic.itemActivityStat_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/analytics/lastSevenDays': {
    /** Get lastSevenDays from users */
    get: operations['user.drive.root.analytic_GetLastSevenDay']
  }
  '/users/{user-id}/drives/{drive-id}/root/children': {
    /**
     * Get children from users
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['user.drive.root_ListChild']
    /** Create new navigation property to children for users */
    post: operations['user.drive.root_CreateChild']
  }
  '/users/{user-id}/drives/{drive-id}/root/children/{driveItem-id}': {
    /**
     * Get children from users
     * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
     */
    get: operations['user.drive.root_GetChild']
  }
  '/users/{user-id}/drives/{drive-id}/root/children/{driveItem-id}/content': {
    /**
     * Get content for the navigation property children from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive.root_GetChildrenContent']
    /**
     * Update content for the navigation property children in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive.root_SetChildrenContent']
    /**
     * Delete content for the navigation property children in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive.root_DeleteChildrenContent']
  }
  '/users/{user-id}/drives/{drive-id}/root/children/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.child_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/content': {
    /**
     * Get content for the navigation property root from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive_GetRootContent']
    /**
     * Update content for the navigation property root in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive_SetRootContent']
    /**
     * Delete content for the navigation property root in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive_DeleteRootContent']
  }
  '/users/{user-id}/drives/{drive-id}/root/createdByUser': {
    /**
     * Get createdByUser from users
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['user.drive.root_GetCreatedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/root/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.root.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.root.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/root/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.root.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/root/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from users
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['user.drive.root_GetLastModifiedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/root/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.root.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.root.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/root/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.root.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/root/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem': {
    /**
     * Get listItem from users
     * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
     */
    get: operations['user.drive.root_GetListItem']
    /** Delete navigation property listItem for users */
    delete: operations['user.drive.root_DeleteListItem']
    /** Update the navigation property listItem in users */
    patch: operations['user.drive.root_UpdateListItem']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/analytics': {
    /**
     * Get analytics from users
     * @description Analytics about the view activities that took place on this item.
     */
    get: operations['user.drive.root.listItem_GetAnalytic']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/createdByUser': {
    /**
     * Get createdByUser from users
     * @description Identity of the user who created the item. Read-only.
     */
    get: operations['user.drive.root.listItem_GetCreatedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/createdByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.root.listItem.createdGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.root.listItem.createdGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/createdByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.root.listItem.createdGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/createdByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/documentSetVersions': {
    /**
     * Get documentSetVersions from users
     * @description Version information for a document set version created by a user.
     */
    get: operations['user.drive.root.listItem_ListDocumentSetVersion']
    /** Create new navigation property to documentSetVersions for users */
    post: operations['user.drive.root.listItem_CreateDocumentSetVersion']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/documentSetVersions/{documentSetVersion-id}': {
    /**
     * Get documentSetVersions from users
     * @description Version information for a document set version created by a user.
     */
    get: operations['user.drive.root.listItem_GetDocumentSetVersion']
    /** Delete navigation property documentSetVersions for users */
    delete: operations['user.drive.root.listItem_DeleteDocumentSetVersion']
    /** Update the navigation property documentSetVersions in users */
    patch: operations['user.drive.root.listItem_UpdateDocumentSetVersion']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/documentSetVersions/{documentSetVersion-id}/fields': {
    /**
     * Get fields from users
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['user.drive.root.listItem.documentSetVersion_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.root.listItem.documentSetVersion_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.root.listItem.documentSetVersion_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/documentSetVersions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.listItem.documentSetVersion_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/driveItem': {
    /**
     * Get driveItem from users
     * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
     */
    get: operations['user.drive.root.listItem_GetDriveItem']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/driveItem/content': {
    /**
     * Get content for the navigation property driveItem from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive.root.listItem_GetDriveItemContent']
    /**
     * Update content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive.root.listItem_SetDriveItemContent']
    /**
     * Delete content for the navigation property driveItem in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive.root.listItem_DeleteDriveItemContent']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/fields': {
    /**
     * Get fields from users
     * @description The values of the columns set on this list item.
     */
    get: operations['user.drive.root.listItem_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.root.listItem_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.root.listItem_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/lastModifiedByUser': {
    /**
     * Get lastModifiedByUser from users
     * @description Identity of the user who last modified the item. Read-only.
     */
    get: operations['user.drive.root.listItem_GetLastModifiedGraphBPreUser']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/lastModifiedByUser/mailboxSettings': {
    /**
     * Get mailboxSettings property value
     * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
     */
    get: operations['user.drive.root.listItem.lastModifiedGraphBPreUser_GetMailboxSetting']
    /** Update property mailboxSettings value. */
    patch: operations['user.drive.root.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/lastModifiedByUser/serviceProvisioningErrors': {
    /**
     * Get serviceProvisioningErrors property value
     * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
     */
    get: operations['user.drive.root.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/lastModifiedByUser/serviceProvisioningErrors/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/versions': {
    /**
     * Get versions from users
     * @description The list of previous versions of the list item.
     */
    get: operations['user.drive.root.listItem_ListVersion']
    /** Create new navigation property to versions for users */
    post: operations['user.drive.root.listItem_CreateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/versions/{listItemVersion-id}': {
    /**
     * Get versions from users
     * @description The list of previous versions of the list item.
     */
    get: operations['user.drive.root.listItem_GetVersion']
    /** Delete navigation property versions for users */
    delete: operations['user.drive.root.listItem_DeleteVersion']
    /** Update the navigation property versions in users */
    patch: operations['user.drive.root.listItem_UpdateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/versions/{listItemVersion-id}/fields': {
    /**
     * Get fields from users
     * @description A collection of the fields and values for this version of the list item.
     */
    get: operations['user.drive.root.listItem.version_GetField']
    /** Delete navigation property fields for users */
    delete: operations['user.drive.root.listItem.version_DeleteField']
    /** Update the navigation property fields in users */
    patch: operations['user.drive.root.listItem.version_UpdateField']
  }
  '/users/{user-id}/drives/{drive-id}/root/listItem/versions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.listItem.version_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/permissions': {
    /**
     * Get permissions from users
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['user.drive.root_ListPermission']
    /** Create new navigation property to permissions for users */
    post: operations['user.drive.root_CreatePermission']
  }
  '/users/{user-id}/drives/{drive-id}/root/permissions/{permission-id}': {
    /**
     * Get permissions from users
     * @description The set of permissions for the item. Read-only. Nullable.
     */
    get: operations['user.drive.root_GetPermission']
    /** Delete navigation property permissions for users */
    delete: operations['user.drive.root_DeletePermission']
    /** Update the navigation property permissions in users */
    patch: operations['user.drive.root_UpdatePermission']
  }
  '/users/{user-id}/drives/{drive-id}/root/permissions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.permission_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/retentionLabel': {
    /**
     * Get retentionLabel from users
     * @description Information about retention label and settings enforced on the driveItem. Read-write.
     */
    get: operations['user.drive.root_GetRetentionLabel']
    /** Delete navigation property retentionLabel for users */
    delete: operations['user.drive.root_DeleteRetentionLabel']
    /** Update the navigation property retentionLabel in users */
    patch: operations['user.drive.root_UpdateRetentionLabel']
  }
  '/users/{user-id}/drives/{drive-id}/root/subscriptions': {
    /**
     * Get subscriptions from users
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['user.drive.root_ListSubscription']
    /** Create new navigation property to subscriptions for users */
    post: operations['user.drive.root_CreateSubscription']
  }
  '/users/{user-id}/drives/{drive-id}/root/subscriptions/{subscription-id}': {
    /**
     * Get subscriptions from users
     * @description The set of subscriptions on the item. Only supported on the root of a drive.
     */
    get: operations['user.drive.root_GetSubscription']
    /** Delete navigation property subscriptions for users */
    delete: operations['user.drive.root_DeleteSubscription']
    /** Update the navigation property subscriptions in users */
    patch: operations['user.drive.root_UpdateSubscription']
  }
  '/users/{user-id}/drives/{drive-id}/root/subscriptions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.subscription_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/thumbnails': {
    /**
     * Get thumbnails from users
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['user.drive.root_ListThumbnail']
    /** Create new navigation property to thumbnails for users */
    post: operations['user.drive.root_CreateThumbnail']
  }
  '/users/{user-id}/drives/{drive-id}/root/thumbnails/{thumbnailSet-id}': {
    /**
     * Get thumbnails from users
     * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
     */
    get: operations['user.drive.root_GetThumbnail']
    /** Delete navigation property thumbnails for users */
    delete: operations['user.drive.root_DeleteThumbnail']
    /** Update the navigation property thumbnails in users */
    patch: operations['user.drive.root_UpdateThumbnail']
  }
  '/users/{user-id}/drives/{drive-id}/root/thumbnails/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.thumbnail_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/root/versions': {
    /**
     * Get versions from users
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['user.drive.root_ListVersion']
    /** Create new navigation property to versions for users */
    post: operations['user.drive.root_CreateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/root/versions/{driveItemVersion-id}': {
    /**
     * Get versions from users
     * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
     */
    get: operations['user.drive.root_GetVersion']
    /** Delete navigation property versions for users */
    delete: operations['user.drive.root_DeleteVersion']
    /** Update the navigation property versions in users */
    patch: operations['user.drive.root_UpdateVersion']
  }
  '/users/{user-id}/drives/{drive-id}/root/versions/{driveItemVersion-id}/content': {
    /**
     * Get content for the navigation property versions from users
     * @description The content stream for this version of the item.
     */
    get: operations['user.drive.root_GetVersionsContent']
    /**
     * Update content for the navigation property versions in users
     * @description The content stream for this version of the item.
     */
    put: operations['user.drive.root_SetVersionsContent']
    /**
     * Delete content for the navigation property versions in users
     * @description The content stream for this version of the item.
     */
    delete: operations['user.drive.root_DeleteVersionsContent']
  }
  '/users/{user-id}/drives/{drive-id}/root/versions/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.root.version_GetCount']
  }
  '/users/{user-id}/drives/{drive-id}/special': {
    /**
     * Get special from users
     * @description Collection of common folders available in OneDrive. Read-only. Nullable.
     */
    get: operations['user.drive_ListSpecial']
  }
  '/users/{user-id}/drives/{drive-id}/special/{driveItem-id}': {
    /**
     * Get special from users
     * @description Collection of common folders available in OneDrive. Read-only. Nullable.
     */
    get: operations['user.drive_GetSpecial']
  }
  '/users/{user-id}/drives/{drive-id}/special/{driveItem-id}/content': {
    /**
     * Get content for the navigation property special from users
     * @description The content stream, if the item represents a file.
     */
    get: operations['user.drive_GetSpecialContent']
    /**
     * Update content for the navigation property special in users
     * @description The content stream, if the item represents a file.
     */
    put: operations['user.drive_SetSpecialContent']
    /**
     * Delete content for the navigation property special in users
     * @description The content stream, if the item represents a file.
     */
    delete: operations['user.drive_DeleteSpecialContent']
  }
  '/users/{user-id}/drives/{drive-id}/special/$count': {
    /** Get the number of the resource */
    get: operations['user.drive.special_GetCount']
  }
  '/users/{user-id}/drives/$count': {
    /** Get the number of the resource */
    get: operations['user.drive_GetCount']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    'microsoft.graph.drive': components['schemas']['microsoft.graph.baseItem'] & {
      /** @description Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only. */
      driveType?: string | null
      owner?: components['schemas']['microsoft.graph.identitySet']
      quota?: components['schemas']['microsoft.graph.quota']
      sharePointIds?: components['schemas']['microsoft.graph.sharepointIds']
      system?: components['schemas']['microsoft.graph.systemFacet']
      /** @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive. */
      bundles?: components['schemas']['microsoft.graph.driveItem'][]
      /** @description The list of items the user is following. Only in OneDrive for Business. */
      following?: components['schemas']['microsoft.graph.driveItem'][]
      /** @description All items contained in the drive. Read-only. Nullable. */
      items?: components['schemas']['microsoft.graph.driveItem'][]
      list?: components['schemas']['microsoft.graph.list']
      root?: components['schemas']['microsoft.graph.driveItem']
      /** @description Collection of common folders available in OneDrive. Read-only. Nullable. */
      special?: components['schemas']['microsoft.graph.driveItem'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.driveItem': components['schemas']['microsoft.graph.baseItem'] & {
      audio?: components['schemas']['microsoft.graph.audio']
      bundle?: components['schemas']['microsoft.graph.bundle']
      /**
       * Format: base64url
       * @description The content stream, if the item represents a file.
       */
      content?: string | null
      /** @description An eTag for the content of the item. This eTag isn't changed if only the metadata is changed. Note This property isn't returned if the item is a folder. Read-only. */
      cTag?: string | null
      deleted?: components['schemas']['microsoft.graph.deleted']
      file?: components['schemas']['microsoft.graph.file']
      fileSystemInfo?: components['schemas']['microsoft.graph.fileSystemInfo']
      folder?: components['schemas']['microsoft.graph.folder']
      image?: components['schemas']['microsoft.graph.image']
      location?: components['schemas']['microsoft.graph.geoCoordinates']
      malware?: components['schemas']['microsoft.graph.malware']
      package?: components['schemas']['microsoft.graph.package']
      pendingOperations?: components['schemas']['microsoft.graph.pendingOperations']
      photo?: components['schemas']['microsoft.graph.photo']
      publication?: components['schemas']['microsoft.graph.publicationFacet']
      remoteItem?: components['schemas']['microsoft.graph.remoteItem']
      root?: components['schemas']['microsoft.graph.root']
      searchResult?: components['schemas']['microsoft.graph.searchResult']
      shared?: components['schemas']['microsoft.graph.shared']
      sharepointIds?: components['schemas']['microsoft.graph.sharepointIds']
      /**
       * Format: int64
       * @description Size of the item in bytes. Read-only.
       */
      size?: number | null
      specialFolder?: components['schemas']['microsoft.graph.specialFolder']
      video?: components['schemas']['microsoft.graph.video']
      /** @description WebDAV compatible URL for the item. */
      webDavUrl?: string | null
      analytics?: components['schemas']['microsoft.graph.itemAnalytics']
      /** @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable. */
      children?: components['schemas']['microsoft.graph.driveItem'][]
      listItem?: components['schemas']['microsoft.graph.listItem']
      /** @description The set of permissions for the item. Read-only. Nullable. */
      permissions?: components['schemas']['microsoft.graph.permission'][]
      retentionLabel?: components['schemas']['microsoft.graph.itemRetentionLabel']
      /** @description The set of subscriptions on the item. Only supported on the root of a drive. */
      subscriptions?: components['schemas']['microsoft.graph.subscription'][]
      /** @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable. */
      thumbnails?: components['schemas']['microsoft.graph.thumbnailSet'][]
      /** @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable. */
      versions?: components['schemas']['microsoft.graph.driveItemVersion'][]
      workbook?: components['schemas']['microsoft.graph.workbook']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.user': components['schemas']['microsoft.graph.directoryObject'] & {
      /** @description A freeform text entry field for the user to describe themselves. Returned only on $select. */
      aboutMe?: string | null
      /** @description true if the account is enabled; otherwise, false. This property is required when a user is created. Returned only on $select. Supports $filter (eq, ne, not, and in). */
      accountEnabled?: boolean | null
      /** @description Sets the age group of the user. Allowed values: null, Minor, NotAdult, and Adult. For more information, see legal age group property definitions. Returned only on $select. Supports $filter (eq, ne, not, and in). */
      ageGroup?: string | null
      /** @description The licenses that are assigned to the user, including inherited (group-based) licenses. This property doesn't differentiate between directly assigned and inherited licenses. Use the licenseAssignmentStates property to identify the directly assigned and inherited licenses. Not nullable. Returned only on $select. Supports $filter (eq, not, /$count eq 0, /$count ne 0). */
      assignedLicenses?: components['schemas']['microsoft.graph.assignedLicense'][]
      /** @description The plans that are assigned to the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq and not). */
      assignedPlans?: components['schemas']['microsoft.graph.assignedPlan'][]
      authorizationInfo?: components['schemas']['microsoft.graph.authorizationInfo']
      /**
       * Format: date-time
       * @description The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z. Returned only on $select.
       */
      birthday?: string
      /** @description The telephone numbers for the user. NOTE: Although it's a string collection, only one number can be set for this property. Read-only for users synced from the on-premises directory. Returned by default. Supports $filter (eq, not, ge, le, startsWith). */
      businessPhones?: string[]
      /** @description The city where the user is located. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      city?: string | null
      /** @description The name of the company that the user is associated with. This property can be useful for describing the company that a guest comes from. The maximum length is 64 characters.Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      companyName?: string | null
      /** @description Sets whether consent was obtained for minors. Allowed values: null, Granted, Denied, and NotRequired. For more information, see legal age group property definitions. Returned only on $select. Supports $filter (eq, ne, not, and in). */
      consentProvidedForMinor?: string | null
      /** @description The country/region where the user is located; for example, US or UK. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      country?: string | null
      /**
       * Format: date-time
       * @description The date and time the user was created, in ISO 8601 format and UTC. The value can't be modified and is automatically populated when the entity is created. Nullable. For on-premises users, the value represents when they were first created in Microsoft Entra ID. Property is null for some users created before June 2018 and on-premises users that were synced to Microsoft Entra ID before June 2018. Read-only. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
       */
      createdDateTime?: string | null
      /** @description Indicates whether the user account was created through one of the following methods:  As a regular school or work account (null). As an external account (Invitation). As a local account for an Azure Active Directory B2C tenant (LocalAccount). Through self-service sign-up by an internal user using email verification (EmailVerified). Through self-service sign-up by a guest signing up through a link that is part of a user flow (SelfServiceSignUp). Read-only.Returned only on $select. Supports $filter (eq, ne, not, in). */
      creationType?: string | null
      customSecurityAttributes?: components['schemas']['microsoft.graph.customSecurityAttributeValue']
      /** @description The name of the department in which the user works. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, and eq on null values). */
      department?: string | null
      /**
       * Format: int32
       * @description The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
       */
      deviceEnrollmentLimit?: number
      /** @description The name displayed in the address book for the user. This value is usually the combination of the user's first name, middle initial, and family name. This property is required when a user is created and it can't be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values), $orderby, and $search. */
      displayName?: string | null
      /**
       * Format: date-time
       * @description The date and time when the user was hired or will start work in a future hire. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in).
       */
      employeeHireDate?: string | null
      /** @description The employee identifier assigned to the user by the organization. The maximum length is 16 characters. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values). */
      employeeId?: string | null
      /**
       * Format: date-time
       * @description The date and time when the user left or will leave the organization. To read this property, the calling app must be assigned the User-LifeCycleInfo.Read.All permission. To write this property, the calling app must be assigned the User.Read.All and User-LifeCycleInfo.ReadWrite.All permissions. To read this property in delegated scenarios, the admin needs at least one of the following Microsoft Entra roles: Lifecycle Workflows Administrator, Global Reader. To write this property in delegated scenarios, the admin needs the Global Administrator role. Supports $filter (eq, ne, not , ge, le, in). For more information, see Configure the employeeLeaveDateTime property for a user.
       */
      employeeLeaveDateTime?: string | null
      employeeOrgData?: components['schemas']['microsoft.graph.employeeOrgData']
      /** @description Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith). */
      employeeType?: string | null
      /** @description For a guest invited to the tenant using the invitation API, this property represents the invited user's invitation status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Returned only on $select. Supports $filter (eq, ne, not , in). */
      externalUserState?: string | null
      /**
       * Format: date-time
       * @description Shows the timestamp for the latest change to the externalUserState property. Returned only on $select. Supports $filter (eq, ne, not , in).
       */
      externalUserStateChangeDateTime?: string | null
      /** @description The fax number of the user. Returned only on $select. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values). */
      faxNumber?: string | null
      /** @description The given name (first name) of the user. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values). */
      givenName?: string | null
      /**
       * Format: date-time
       * @description The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z. Returned only on $select.  Note: This property is specific to SharePoint in Microsoft 365. We recommend using the native employeeHireDate property to set and update hire date values using Microsoft Graph APIs.
       */
      hireDate?: string
      /** @description Represents the identities that can be used to sign in to this user account. Microsoft (also known as a local account), organizations, or social identity providers such as Facebook, Google, and Microsoft can provide identity and tie it to a user account. It might contain multiple items with the same signInType value. Returned only on $select.  Supports $filter (eq) with limitations. */
      identities?: components['schemas']['microsoft.graph.objectIdentity'][]
      /** @description The instant message voice-over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith). */
      imAddresses?: (string | null)[]
      /** @description A list for the user to describe their interests. Returned only on $select. */
      interests?: (string | null)[]
      isManagementRestricted?: boolean | null
      /** @description Don't use – reserved for future use. */
      isResourceAccount?: boolean | null
      /** @description The user's job title. Maximum length is 128 characters. Returned by default. Supports $filter (eq, ne, not , ge, le, in, startsWith, and eq on null values). */
      jobTitle?: string | null
      /**
       * Format: date-time
       * @description The time when this Microsoft Entra user last changed their password or when their password was created, whichever date the latest action was performed. The date and time information uses ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select.
       */
      lastPasswordChangeDateTime?: string | null
      /** @description Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, MinorWithOutParentalConsent, MinorWithParentalConsent, MinorNoParentalConsentRequired, NotAdult, and Adult. For more information, see legal age group property definitions. Returned only on $select. */
      legalAgeGroupClassification?: string | null
      /** @description State of license assignments for this user. Also indicates licenses that are directly assigned or the user inherited through group memberships. Read-only. Returned only on $select. */
      licenseAssignmentStates?: components['schemas']['microsoft.graph.licenseAssignmentState'][]
      /** @description The SMTP address for the user, for example, jeff@contoso.com. Changes to this property update the user's proxyAddresses collection to include the value as an SMTP address. This property can't contain accent characters.  NOTE: We don't recommend updating this property for Azure AD B2C user profiles. Use the otherMails property instead. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith, and eq on null values). */
      mail?: string | null
      mailboxSettings?: components['schemas']['microsoft.graph.mailboxSettings']
      /** @description The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      mailNickname?: string | null
      /** @description The primary cellular telephone number for the user. Read-only for users synced from the on-premises directory. Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values) and $search. */
      mobilePhone?: string | null
      /** @description The URL for the user's site. Returned only on $select. */
      mySite?: string | null
      /** @description The office location in the user's place of business. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      officeLocation?: string | null
      /** @description Contains the on-premises Active Directory distinguished name or DN. The property is only populated for customers who are synchronizing their on-premises directory to Microsoft Entra ID via Microsoft Entra Connect. Read-only. Returned only on $select. */
      onPremisesDistinguishedName?: string | null
      /** @description Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Microsoft Entra ID via Microsoft Entra Connect. Read-only. Returned only on $select. */
      onPremisesDomainName?: string | null
      onPremisesExtensionAttributes?: components['schemas']['microsoft.graph.onPremisesExtensionAttributes']
      /** @description This property is used to associate an on-premises Active Directory user account to their Microsoft Entra user object. This property must be specified when creating a new user account in the Graph if you're using a federated domain for the user's userPrincipalName (UPN) property. NOTE: The $ and _ characters can't be used when specifying this property. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in). */
      onPremisesImmutableId?: string | null
      /**
       * Format: date-time
       * @description Indicates the last time at which the object was synced with the on-premises directory; for example: 2013-02-16T03:04:54Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in).
       */
      onPremisesLastSyncDateTime?: string | null
      /** @description Errors when using Microsoft synchronization product during provisioning. Returned only on $select. Supports $filter (eq, not, ge, le). */
      onPremisesProvisioningErrors?: components['schemas']['microsoft.graph.onPremisesProvisioningError'][]
      /** @description Contains the on-premises samAccountName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Microsoft Entra ID via Microsoft Entra Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith). */
      onPremisesSamAccountName?: string | null
      /** @description Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only. Returned only on $select. Supports $filter (eq including on null values). */
      onPremisesSecurityIdentifier?: string | null
      /** @description true if this user object is currently being synced from an on-premises Active Directory (AD); otherwise the user isn't being synced and can be managed in Microsoft Entra ID. Read-only. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values). */
      onPremisesSyncEnabled?: boolean | null
      /** @description Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Microsoft Entra ID via Microsoft Entra Connect. Read-only. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith). */
      onPremisesUserPrincipalName?: string | null
      /** @description A list of other email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com']. NOTE: This property can't contain accent characters. Returned only on $select. Supports $filter (eq, not, ge, le, in, startsWith, endsWith, /$count eq 0, /$count ne 0). */
      otherMails?: string[]
      /** @description Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword, which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified. The two might be specified together; for example: DisablePasswordExpiration, DisableStrongPassword. Returned only on $select. For more information on the default password policies, see Microsoft Entra password policies. Supports $filter (ne, not, and eq on null values). */
      passwordPolicies?: string | null
      passwordProfile?: components['schemas']['microsoft.graph.passwordProfile']
      /** @description A list for the user to enumerate their past projects. Returned only on $select. */
      pastProjects?: (string | null)[]
      /** @description The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      postalCode?: string | null
      /** @description The preferred data location for the user. For more information, see OneDrive Online Multi-Geo. */
      preferredDataLocation?: string | null
      /** @description The preferred language for the user. The preferred language format is based on RFC 4646. The name is a combination of an ISO 639 two-letter lowercase culture code associated with the language, and an ISO 3166 two-letter uppercase subculture code associated with the country or region. Example: 'en-US', or 'es-ES'. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values) */
      preferredLanguage?: string | null
      /** @description The preferred name for the user. Not Supported. This attribute returns an empty string.Returned only on $select. */
      preferredName?: string | null
      print?: components['schemas']['microsoft.graph.userPrint']
      /** @description The plans that are provisioned for the user. Read-only. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le). */
      provisionedPlans?: components['schemas']['microsoft.graph.provisionedPlan'][]
      /** @description For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Changes to the mail property update this collection to include the value as an SMTP address. For more information, see mail and proxyAddresses properties. The proxy address prefixed with SMTP (capitalized) is the primary proxy address, while those addresses prefixed with smtp are the secondary proxy addresses. For Azure AD B2C accounts, this property has a limit of 10 unique addresses. Read-only in Microsoft Graph; you can update this property only through the Microsoft 365 admin center. Not nullable. Returned only on $select. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0). */
      proxyAddresses?: string[]
      /** @description A list for the user to enumerate their responsibilities. Returned only on $select. */
      responsibilities?: (string | null)[]
      /** @description A list for the user to enumerate the schools they attended. Returned only on $select. */
      schools?: (string | null)[]
      /** @description Security identifier (SID) of the user, used in Windows scenarios. Read-only. Returned by default. Supports $select and $filter (eq, not, ge, le, startsWith). */
      securityIdentifier?: string | null
      /** @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance). */
      serviceProvisioningErrors?: components['schemas']['microsoft.graph.serviceProvisioningError'][]
      /** @description Do not use in Microsoft Graph. Manage this property through the Microsoft 365 admin center instead. Represents whether the user should be included in the Outlook global address list. See Known issue. */
      showInAddressList?: boolean | null
      signInActivity?: components['schemas']['microsoft.graph.signInActivity']
      /**
       * Format: date-time
       * @description Any refresh tokens or session tokens (session cookies) issued before this time are invalid. Applications get an error when using an invalid refresh or session token to acquire a delegated access token (to access APIs such as Microsoft Graph). If this happens, the application needs to acquire a new refresh token by requesting the authorized endpoint. Read-only. Use revokeSignInSessions to reset. Returned only on $select.
       */
      signInSessionsValidFromDateTime?: string | null
      /** @description A list for the user to enumerate their skills. Returned only on $select. */
      skills?: (string | null)[]
      /** @description The state or province in the user's address. Maximum length is 128 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      state?: string | null
      /** @description The street address of the user's place of business. Maximum length is 1,024 characters. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      streetAddress?: string | null
      /** @description The user's surname (family name or last name). Maximum length is 64 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      surname?: string | null
      /** @description A two-letter country code (ISO standard 3166). Required for users that are assigned licenses due to legal requirements to check for availability of services in countries. Examples include: US, JP, and GB. Not nullable. Returned only on $select. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      usageLocation?: string | null
      /** @description The user principal name (UPN) of the user. The UPN is an Internet-style sign-in name for the user based on the Internet standard RFC 822. By convention, this value should map to the user's email name. The general format is alias@domain, where the domain must be present in the tenant's collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: This property can't contain accent characters. Only the following characters are allowed A - Z, a - z, 0 - 9, ' . - _ ! # ^ ~. For the complete list of allowed characters, see username policies. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, endsWith) and $orderby. */
      userPrincipalName?: string | null
      /** @description A string value that can be used to classify user types in your directory. The possible values are Member and Guest. Returned only on $select. Supports $filter (eq, ne, not, in, and eq on null values). NOTE: For more information about the permissions for members and guests, see What are the default user permissions in Microsoft Entra ID? */
      userType?: string | null
      /** @description The user's activities across devices. Read-only. Nullable. */
      activities?: components['schemas']['microsoft.graph.userActivity'][]
      /** @description The user's terms of use acceptance statuses. Read-only. Nullable. */
      agreementAcceptances?: components['schemas']['microsoft.graph.agreementAcceptance'][]
      /** @description Represents the app roles a user is granted for an application. Supports $expand. */
      appRoleAssignments?: components['schemas']['microsoft.graph.appRoleAssignment'][]
      authentication?: components['schemas']['microsoft.graph.authentication']
      calendar?: components['schemas']['microsoft.graph.calendar']
      /** @description The user's calendar groups. Read-only. Nullable. */
      calendarGroups?: components['schemas']['microsoft.graph.calendarGroup'][]
      /** @description The user's calendars. Read-only. Nullable. */
      calendars?: components['schemas']['microsoft.graph.calendar'][]
      /** @description The calendar view for the calendar. Read-only. Nullable. */
      calendarView?: components['schemas']['microsoft.graph.event'][]
      chats?: components['schemas']['microsoft.graph.chat'][]
      cloudClipboard?: components['schemas']['microsoft.graph.cloudClipboardRoot']
      /** @description The user's contacts folders. Read-only. Nullable. */
      contactFolders?: components['schemas']['microsoft.graph.contactFolder'][]
      /** @description The user's contacts. Read-only. Nullable. */
      contacts?: components['schemas']['microsoft.graph.contact'][]
      /** @description Directory objects that the user created. Read-only. Nullable. */
      createdObjects?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description The list of troubleshooting events for this user. */
      deviceManagementTroubleshootingEvents?: components['schemas']['microsoft.graph.deviceManagementTroubleshootingEvent'][]
      /** @description The users and contacts that report to the user. (The users and contacts that have their manager property set to this user.) Read-only. Nullable. Supports $expand. */
      directReports?: components['schemas']['microsoft.graph.directoryObject'][]
      drive?: components['schemas']['microsoft.graph.drive']
      /** @description A collection of drives available for this user. Read-only. */
      drives?: components['schemas']['microsoft.graph.drive'][]
      employeeExperience?: components['schemas']['microsoft.graph.employeeExperienceUser']
      /** @description The user's events. Default is to show Events under the Default Calendar. Read-only. Nullable. */
      events?: components['schemas']['microsoft.graph.event'][]
      /** @description The collection of open extensions defined for the user. Read-only. Supports $expand. Nullable. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      followedSites?: components['schemas']['microsoft.graph.site'][]
      inferenceClassification?: components['schemas']['microsoft.graph.inferenceClassification']
      insights?: components['schemas']['microsoft.graph.itemInsights']
      joinedTeams?: components['schemas']['microsoft.graph.team'][]
      /** @description A collection of this user's license details. Read-only. */
      licenseDetails?: components['schemas']['microsoft.graph.licenseDetails'][]
      /** @description The user's mail folders. Read-only. Nullable. */
      mailFolders?: components['schemas']['microsoft.graph.mailFolder'][]
      /** @description Zero or more managed app registrations that belong to the user. */
      managedAppRegistrations?: components['schemas']['microsoft.graph.managedAppRegistration'][]
      /** @description The managed devices associated with the user. */
      managedDevices?: components['schemas']['microsoft.graph.managedDevice'][]
      manager?: components['schemas']['microsoft.graph.directoryObject']
      /** @description The groups and directory roles that the user is a member of. Read-only. Nullable. Supports $expand. */
      memberOf?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description The messages in a mailbox or folder. Read-only. Nullable. */
      messages?: components['schemas']['microsoft.graph.message'][]
      oauth2PermissionGrants?: components['schemas']['microsoft.graph.oAuth2PermissionGrant'][]
      onenote?: components['schemas']['microsoft.graph.onenote']
      /** @description Information about a meeting, including the URL used to join a meeting, the attendees list, and the description. */
      onlineMeetings?: components['schemas']['microsoft.graph.onlineMeeting'][]
      outlook?: components['schemas']['microsoft.graph.outlookUser']
      /** @description Devices the user owns. Read-only. Nullable. Supports $expand and $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1). */
      ownedDevices?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description Directory objects the user owns. Read-only. Nullable. Supports $expand, $select nested in $expand, and $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1). */
      ownedObjects?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description People that are relevant to the user. Read-only. Nullable. */
      people?: components['schemas']['microsoft.graph.person'][]
      /** @description List all resource-specific permission grants of a user. */
      permissionGrants?: components['schemas']['microsoft.graph.resourceSpecificPermissionGrant'][]
      photo?: components['schemas']['microsoft.graph.profilePhoto']
      /** @description The collection of the user's profile photos in different sizes. Read-only. */
      photos?: components['schemas']['microsoft.graph.profilePhoto'][]
      planner?: components['schemas']['microsoft.graph.plannerUser']
      presence?: components['schemas']['microsoft.graph.presence']
      /** @description Devices that are registered for the user. Read-only. Nullable. Supports $expand and returns up to 100 objects. */
      registeredDevices?: components['schemas']['microsoft.graph.directoryObject'][]
      scopedRoleMemberOf?: components['schemas']['microsoft.graph.scopedRoleMembership'][]
      settings?: components['schemas']['microsoft.graph.userSettings']
      solutions?: components['schemas']['microsoft.graph.userSolutionRoot']
      /** @description The users and groups responsible for this guest's privileges in the tenant and keeping the guest's information and access updated. (HTTP Methods: GET, POST, DELETE.). Supports $expand. */
      sponsors?: components['schemas']['microsoft.graph.directoryObject'][]
      teamwork?: components['schemas']['microsoft.graph.userTeamwork']
      todo?: components['schemas']['microsoft.graph.todo']
      /** @description The groups, including nested groups, and directory roles that a user is a member of. Nullable. */
      transitiveMemberOf?: components['schemas']['microsoft.graph.directoryObject'][]
      [key: string]: Record<string, never> | undefined
    }
    /** mailboxSettings */
    'microsoft.graph.mailboxSettings': {
      /** @description Folder ID of an archive folder for the user. */
      archiveFolder?: string | null
      automaticRepliesSetting?: components['schemas']['microsoft.graph.automaticRepliesSetting']
      /** @description The date format for the user's mailbox. */
      dateFormat?: string | null
      delegateMeetingMessageDeliveryOptions?: components['schemas']['microsoft.graph.delegateMeetingMessageDeliveryOptions']
      language?: components['schemas']['microsoft.graph.localeInfo']
      /** @description The time format for the user's mailbox. */
      timeFormat?: string | null
      /** @description The default time zone for the user's mailbox. */
      timeZone?: string | null
      userPurpose?: components['schemas']['microsoft.graph.userPurpose']
      workingHours?: components['schemas']['microsoft.graph.workingHours']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.itemAnalytics': components['schemas']['microsoft.graph.entity'] & {
      allTime?: components['schemas']['microsoft.graph.itemActivityStat']
      itemActivityStats?: components['schemas']['microsoft.graph.itemActivityStat'][]
      lastSevenDays?: components['schemas']['microsoft.graph.itemActivityStat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.itemActivityStat': components['schemas']['microsoft.graph.entity'] & {
      access?: components['schemas']['microsoft.graph.itemActionStat']
      create?: components['schemas']['microsoft.graph.itemActionStat']
      delete?: components['schemas']['microsoft.graph.itemActionStat']
      edit?: components['schemas']['microsoft.graph.itemActionStat']
      /**
       * Format: date-time
       * @description When the interval ends. Read-only.
       */
      endDateTime?: string | null
      incompleteData?: components['schemas']['microsoft.graph.incompleteData']
      /** @description Indicates whether the item is 'trending.' Read-only. */
      isTrending?: boolean | null
      move?: components['schemas']['microsoft.graph.itemActionStat']
      /**
       * Format: date-time
       * @description When the interval starts. Read-only.
       */
      startDateTime?: string | null
      /** @description Exposes the itemActivities represented in this itemActivityStat resource. */
      activities?: components['schemas']['microsoft.graph.itemActivity'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.itemActivity': components['schemas']['microsoft.graph.entity'] & {
      access?: components['schemas']['microsoft.graph.accessAction']
      /**
       * Format: date-time
       * @description Details about when the activity took place. Read-only.
       */
      activityDateTime?: string | null
      actor?: components['schemas']['microsoft.graph.identitySet']
      driveItem?: components['schemas']['microsoft.graph.driveItem']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.listItem': components['schemas']['microsoft.graph.baseItem'] & {
      contentType?: components['schemas']['microsoft.graph.contentTypeInfo']
      sharepointIds?: components['schemas']['microsoft.graph.sharepointIds']
      analytics?: components['schemas']['microsoft.graph.itemAnalytics']
      /** @description Version information for a document set version created by a user. */
      documentSetVersions?: components['schemas']['microsoft.graph.documentSetVersion'][]
      driveItem?: components['schemas']['microsoft.graph.driveItem']
      fields?: components['schemas']['microsoft.graph.fieldValueSet']
      /** @description The list of previous versions of the list item. */
      versions?: components['schemas']['microsoft.graph.listItemVersion'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.documentSetVersion': components['schemas']['microsoft.graph.listItemVersion'] & {
      /** @description Comment about the captured version. */
      comment?: string | null
      createdBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Date and time when this version was created.
       */
      createdDateTime?: string | null
      /** @description Items within the document set that are captured as part of this version. */
      items?: components['schemas']['microsoft.graph.documentSetVersionItem'][]
      /** @description If true, minor versions of items are also captured; otherwise, only major versions are captured. The default value is false. */
      shouldCaptureMinorVersion?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.fieldValueSet': components['schemas']['microsoft.graph.entity'] & {
      [key: string]: Record<string, never>
    }
    /** driveRecipient */
    'microsoft.graph.driveRecipient': {
      /** @description The alias of the domain object, for cases where an email address is unavailable (e.g. security groups). */
      alias?: string | null
      /** @description The email address for the recipient, if the recipient has an associated email address. */
      email?: string | null
      /** @description The unique identifier for the recipient in the directory. */
      objectId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.permission': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there's no expiration set for this permission. Optional.
       */
      expirationDateTime?: string | null
      grantedTo?: components['schemas']['microsoft.graph.identitySet']
      /** @description For type permissions, the details of the users to whom permission was granted. Read-only. */
      grantedToIdentities?: components['schemas']['microsoft.graph.identitySet'][]
      /** @description For link type permissions, the details of the users to whom permission was granted. Read-only. */
      grantedToIdentitiesV2?: components['schemas']['microsoft.graph.sharePointIdentitySet'][]
      grantedToV2?: components['schemas']['microsoft.graph.sharePointIdentitySet']
      /** @description Indicates whether the password is set for this permission. This property only appears in the response. Optional. Read-only. For OneDrive Personal only.. */
      hasPassword?: boolean | null
      inheritedFrom?: components['schemas']['microsoft.graph.itemReference']
      invitation?: components['schemas']['microsoft.graph.sharingInvitation']
      link?: components['schemas']['microsoft.graph.sharingLink']
      /** @description The type of permission, for example, read. See below for the full list of roles. Read-only. */
      roles?: (string | null)[]
      /** @description A unique token that can be used to access this shared item via the shares API. Read-only. */
      shareId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.listItemVersion': components['schemas']['microsoft.graph.baseItemVersion'] & {
      fields?: components['schemas']['microsoft.graph.fieldValueSet']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * sensitivityLabelAssignmentMethod
     * @enum {string}
     */
    'microsoft.graph.sensitivityLabelAssignmentMethod':
      | 'standard'
      | 'privileged'
      | 'auto'
      | 'unknownFutureValue'
    /** itemReference */
    'microsoft.graph.itemReference': {
      /** @description Unique identifier of the drive instance that contains the driveItem. Only returned if the item is located in a drive. Read-only. */
      driveId?: string | null
      /** @description Identifies the type of drive. Only returned if the item is located in a drive. See drive resource for values. */
      driveType?: string | null
      /** @description Unique identifier of the driveItem in the drive or a listItem in a list. Read-only. */
      id?: string | null
      /** @description The name of the item being referenced. Read-only. */
      name?: string | null
      /** @description Percent-encoded path that can be used to navigate to the item. Read-only. */
      path?: string | null
      /** @description A unique identifier for a shared resource that can be accessed via the Shares API. */
      shareId?: string | null
      sharepointIds?: components['schemas']['microsoft.graph.sharepointIds']
      /** @description For OneDrive for Business and SharePoint, this property represents the ID of the site that contains the parent document library of the driveItem resource or the parent list of the listItem resource. The value is the same as the id property of that site resource. It is an opaque string that consists of three identifiers of the site. For OneDrive, this property is not populated. */
      siteId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** driveItemUploadableProperties */
    'microsoft.graph.driveItemUploadableProperties': {
      /** @description Provides a user-visible description of the item. Read-write. Only on OneDrive Personal. */
      description?: string | null
      driveItemSource?: components['schemas']['microsoft.graph.driveItemSource']
      /**
       * Format: int64
       * @description Provides an expected file size to perform a quota check before uploading. Only on OneDrive Personal.
       */
      fileSize?: number | null
      fileSystemInfo?: components['schemas']['microsoft.graph.fileSystemInfo']
      mediaSource?: components['schemas']['microsoft.graph.mediaSource']
      /** @description The name of the item (filename and extension). Read-write. */
      name?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** uploadSession */
    'microsoft.graph.uploadSession': {
      /**
       * Format: date-time
       * @description The date and time in UTC that the upload session will expire. The complete file must be uploaded before this expiration time is reached.
       */
      expirationDateTime?: string | null
      /** @description A collection of byte ranges that the server is missing for the file. These ranges are zero indexed and of the format 'start-end' (for example '0-26' to indicate the first 27 bytes of the file). When uploading files as Outlook attachments, instead of a collection of ranges, this property always indicates a single value '{start}', the location in the file where the next upload should begin. */
      nextExpectedRanges?: (string | null)[]
      /** @description The URL endpoint that accepts PUT requests for byte ranges of the file. */
      uploadUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** extractSensitivityLabelsResult */
    'microsoft.graph.extractSensitivityLabelsResult': {
      /** @description List of sensitivity labels assigned to a file. */
      labels?: components['schemas']['microsoft.graph.sensitivityLabelAssignment'][]
      [key: string]: Record<string, never> | undefined
    }
    /** @enum {unknown} */
    ReferenceNumeric: '-INF' | 'INF' | 'NaN'
    /** itemPreviewInfo */
    'microsoft.graph.itemPreviewInfo': {
      getUrl?: string | null
      postParameters?: string | null
      postUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.itemRetentionLabel': components['schemas']['microsoft.graph.entity'] & {
      /** @description Specifies whether the label is applied explicitly on the item. True indicates that the label is applied explicitly; otherwise, the label is inherited from its parent. Read-only. */
      isLabelAppliedExplicitly?: boolean | null
      labelAppliedBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description The date and time when the label was applied on the item. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      labelAppliedDateTime?: string | null
      /** @description The retention label on the document. Read-write. */
      name?: string | null
      retentionSettings?: components['schemas']['microsoft.graph.retentionLabelSettings']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.subscription': components['schemas']['microsoft.graph.entity'] & {
      /** @description Optional. Identifier of the application used to create the subscription. Read-only. */
      applicationId?: string | null
      /** @description Required. Indicates the type of change in the subscribed resource that raises a change notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list. Note:  Drive root item and list change notifications support only the updated changeType. User and group change notifications support updated and deleted changeType. Use updated to receive notifications when user or group is created, updated, or soft deleted. Use deleted to receive notifications when user or group is permanently deleted. */
      changeType?: string
      /** @description Optional. Specifies the value of the clientState property sent by the service in each change notification. The maximum length is 128 characters. The client can check that the change notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each change notification. */
      clientState?: string | null
      /** @description Optional. Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the ID of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the ID of the service principal corresponding to the app. Read-only. */
      creatorId?: string | null
      /** @description Optional. A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications. Optional but required when includeResourceData is true. */
      encryptionCertificate?: string | null
      /** @description Optional. A custom app-provided identifier to help identify the certificate needed to decrypt resource data. */
      encryptionCertificateId?: string | null
      /**
       * Format: date-time
       * @description Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. For the maximum supported subscription length of time, see Subscription lifetime.
       */
      expirationDateTime?: string
      /** @description Optional. When set to true, change notifications include resource data (such as content of a chat message). */
      includeResourceData?: boolean | null
      /** @description Optional. Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The possible values are: v10, v11, v12, v13. For subscribers whose notification endpoint supports a version lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2. */
      latestSupportedTlsVersion?: string | null
      /** @description Required for Teams resources if  the expirationDateTime value is more than 1 hour from now; optional otherwise. The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved, reauthorizationRequired, and missed notifications. This URL must make use of the HTTPS protocol. For more information, see Reduce missing subscriptions and change notifications. */
      lifecycleNotificationUrl?: string | null
      /** @description Optional. OData query options for specifying value for the targeting resource. Clients receive notifications when resource reaches the state matching the query options provided here. With this new property in the subscription creation payload along with all existing properties, Webhooks deliver notifications whenever a resource reaches the desired state mentioned in the notificationQueryOptions property. For example, when the print job is completed or when a print job resource isFetchable property value becomes true etc.  Supported only for Universal Print Service. For more information, see Subscribe to change notifications from cloud printing APIs using Microsoft Graph. */
      notificationQueryOptions?: string | null
      /** @description Required. The URL of the endpoint that receives the change notifications. This URL must make use of the HTTPS protocol. Any query string parameter included in the notificationUrl property is included in the HTTP POST request when Microsoft Graph sends the change notifications. */
      notificationUrl?: string
      /** @description Optional. The app ID that the subscription service can use to generate the validation token. The value allows the client to validate the authenticity of the notification received. */
      notificationUrlAppId?: string | null
      /** @description Required. Specifies the resource that is monitored for changes. Don't include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path values for each supported resource. */
      resource?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.thumbnailSet': components['schemas']['microsoft.graph.entity'] & {
      large?: components['schemas']['microsoft.graph.thumbnail']
      medium?: components['schemas']['microsoft.graph.thumbnail']
      small?: components['schemas']['microsoft.graph.thumbnail']
      source?: components['schemas']['microsoft.graph.thumbnail']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.driveItemVersion': components['schemas']['microsoft.graph.baseItemVersion'] & {
      /**
       * Format: base64url
       * @description The content stream for this version of the item.
       */
      content?: string | null
      /**
       * Format: int64
       * @description Indicates the size of the content stream for this version of the item.
       */
      size?: number | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.list': components['schemas']['microsoft.graph.baseItem'] & {
      /** @description The displayable title of the list. */
      displayName?: string | null
      list?: components['schemas']['microsoft.graph.listInfo']
      sharepointIds?: components['schemas']['microsoft.graph.sharepointIds']
      system?: components['schemas']['microsoft.graph.systemFacet']
      /** @description The collection of field definitions for this list. */
      columns?: components['schemas']['microsoft.graph.columnDefinition'][]
      /** @description The collection of content types present in this list. */
      contentTypes?: components['schemas']['microsoft.graph.contentType'][]
      drive?: components['schemas']['microsoft.graph.drive']
      /** @description All items contained in the list. */
      items?: components['schemas']['microsoft.graph.listItem'][]
      /** @description The collection of long-running operations on the list. */
      operations?: components['schemas']['microsoft.graph.richLongRunningOperation'][]
      /** @description The set of subscriptions on the list. */
      subscriptions?: components['schemas']['microsoft.graph.subscription'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.columnDefinition': components['schemas']['microsoft.graph.entity'] & {
      boolean?: components['schemas']['microsoft.graph.booleanColumn']
      calculated?: components['schemas']['microsoft.graph.calculatedColumn']
      choice?: components['schemas']['microsoft.graph.choiceColumn']
      /** @description For site columns, the name of the group this column belongs to. Helps organize related columns. */
      columnGroup?: string | null
      contentApprovalStatus?: components['schemas']['microsoft.graph.contentApprovalStatusColumn']
      currency?: components['schemas']['microsoft.graph.currencyColumn']
      dateTime?: components['schemas']['microsoft.graph.dateTimeColumn']
      defaultValue?: components['schemas']['microsoft.graph.defaultColumnValue']
      /** @description The user-facing description of the column. */
      description?: string | null
      /** @description The user-facing name of the column. */
      displayName?: string | null
      /** @description If true, no two list items may have the same value for this column. */
      enforceUniqueValues?: boolean | null
      geolocation?: components['schemas']['microsoft.graph.geolocationColumn']
      /** @description Specifies whether the column is displayed in the user interface. */
      hidden?: boolean | null
      hyperlinkOrPicture?: components['schemas']['microsoft.graph.hyperlinkOrPictureColumn']
      /** @description Specifies whether the column values can be used for sorting and searching. */
      indexed?: boolean | null
      /** @description Indicates whether this column can be deleted. */
      isDeletable?: boolean | null
      /** @description Indicates whether values in the column can be reordered. Read-only. */
      isReorderable?: boolean | null
      /** @description Specifies whether the column can be changed. */
      isSealed?: boolean | null
      lookup?: components['schemas']['microsoft.graph.lookupColumn']
      /** @description The API-facing name of the column as it appears in the fields on a listItem. For the user-facing name, see displayName. */
      name?: string | null
      number?: components['schemas']['microsoft.graph.numberColumn']
      personOrGroup?: components['schemas']['microsoft.graph.personOrGroupColumn']
      /** @description If 'true', changes to this column will be propagated to lists that implement the column. */
      propagateChanges?: boolean | null
      /** @description Specifies whether the column values can be modified. */
      readOnly?: boolean | null
      /** @description Specifies whether the column value isn't optional. */
      required?: boolean | null
      sourceContentType?: components['schemas']['microsoft.graph.contentTypeInfo']
      term?: components['schemas']['microsoft.graph.termColumn']
      text?: components['schemas']['microsoft.graph.textColumn']
      thumbnail?: components['schemas']['microsoft.graph.thumbnailColumn']
      type?: components['schemas']['microsoft.graph.columnTypes']
      validation?: components['schemas']['microsoft.graph.columnValidation']
      sourceColumn?: components['schemas']['microsoft.graph.columnDefinition']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.contentType': components['schemas']['microsoft.graph.entity'] & {
      /** @description List of canonical URLs for hub sites with which this content type is associated to. This will contain all hub sites where this content type is queued to be enforced or is already enforced. Enforcing a content type means that the content type is applied to the lists in the enforced sites. */
      associatedHubsUrls?: (string | null)[]
      /** @description The descriptive text for the item. */
      description?: string | null
      documentSet?: components['schemas']['microsoft.graph.documentSet']
      documentTemplate?: components['schemas']['microsoft.graph.documentSetContent']
      /** @description The name of the group this content type belongs to. Helps organize related content types. */
      group?: string | null
      /** @description Indicates whether the content type is hidden in the list's 'New' menu. */
      hidden?: boolean | null
      inheritedFrom?: components['schemas']['microsoft.graph.itemReference']
      /** @description Specifies if a content type is a built-in content type. */
      isBuiltIn?: boolean | null
      /** @description The name of the content type. */
      name?: string | null
      order?: components['schemas']['microsoft.graph.contentTypeOrder']
      /** @description The unique identifier of the content type. */
      parentId?: string | null
      /** @description If true, any changes made to the content type are pushed to inherited content types and lists that implement the content type. */
      propagateChanges?: boolean | null
      /** @description If true, the content type can't be modified unless this value is first set to false. */
      readOnly?: boolean | null
      /** @description If true, the content type can't be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types. */
      sealed?: boolean | null
      base?: components['schemas']['microsoft.graph.contentType']
      /** @description The collection of content types that are ancestors of this content type. */
      baseTypes?: components['schemas']['microsoft.graph.contentType'][]
      /** @description The collection of columns that are required by this content type. */
      columnLinks?: components['schemas']['microsoft.graph.columnLink'][]
      /** @description Column order information in a content type. */
      columnPositions?: components['schemas']['microsoft.graph.columnDefinition'][]
      /** @description The collection of column definitions for this content type. */
      columns?: components['schemas']['microsoft.graph.columnDefinition'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.columnLink': components['schemas']['microsoft.graph.entity'] & {
      /** @description The name of the column  in this content type. */
      name?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.richLongRunningOperation': components['schemas']['microsoft.graph.longRunningOperation'] & {
      error?: components['schemas']['microsoft.graph.publicError']
      /**
       * Format: int32
       * @description A value between 0 and 100 that indicates the progress of the operation.
       */
      percentageComplete?: number | null
      /** @description The unique identifier for the result. */
      resourceId?: string | null
      /** @description The type of the operation. */
      type?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.sharedDriveItem': components['schemas']['microsoft.graph.baseItem'] & {
      owner?: components['schemas']['microsoft.graph.identitySet']
      driveItem?: components['schemas']['microsoft.graph.driveItem']
      /** @description All driveItems contained in the sharing root. This collection cannot be enumerated. */
      items?: components['schemas']['microsoft.graph.driveItem'][]
      list?: components['schemas']['microsoft.graph.list']
      listItem?: components['schemas']['microsoft.graph.listItem']
      permission?: components['schemas']['microsoft.graph.permission']
      root?: components['schemas']['microsoft.graph.driveItem']
      site?: components['schemas']['microsoft.graph.site']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.site': components['schemas']['microsoft.graph.baseItem'] & {
      /** @description The full title for the site. Read-only. */
      displayName?: string | null
      error?: components['schemas']['microsoft.graph.publicError']
      /** @description Identifies whether the site is personal or not. Read-only. */
      isPersonalSite?: boolean | null
      root?: components['schemas']['microsoft.graph.root']
      sharepointIds?: components['schemas']['microsoft.graph.sharepointIds']
      siteCollection?: components['schemas']['microsoft.graph.siteCollection']
      analytics?: components['schemas']['microsoft.graph.itemAnalytics']
      /** @description The collection of column definitions reusable across lists under this site. */
      columns?: components['schemas']['microsoft.graph.columnDefinition'][]
      /** @description The collection of content types defined for this site. */
      contentTypes?: components['schemas']['microsoft.graph.contentType'][]
      drive?: components['schemas']['microsoft.graph.drive']
      /** @description The collection of drives (document libraries) under this site. */
      drives?: components['schemas']['microsoft.graph.drive'][]
      externalColumns?: components['schemas']['microsoft.graph.columnDefinition'][]
      /** @description Used to address any item contained in this site. This collection can't be enumerated. */
      items?: components['schemas']['microsoft.graph.baseItem'][]
      /** @description The collection of lists under this site. */
      lists?: components['schemas']['microsoft.graph.list'][]
      onenote?: components['schemas']['microsoft.graph.onenote']
      /** @description The collection of long-running operations on the site. */
      operations?: components['schemas']['microsoft.graph.richLongRunningOperation'][]
      /** @description The collection of pages in the baseSitePages list in this site. */
      pages?: components['schemas']['microsoft.graph.baseSitePage'][]
      /** @description The permissions associated with the site. Nullable. */
      permissions?: components['schemas']['microsoft.graph.permission'][]
      /** @description The collection of the sub-sites under this site. */
      sites?: components['schemas']['microsoft.graph.site'][]
      termStore?: components['schemas']['microsoft.graph.termStore.store']
      /** @description The collection of termStores under this site. */
      termStores?: components['schemas']['microsoft.graph.termStore.store'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.baseItem': components['schemas']['microsoft.graph.entity'] & {
      createdBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Date and time of item creation. Read-only.
       */
      createdDateTime?: string
      /** @description Provides a user-visible description of the item. Optional. */
      description?: string | null
      /** @description ETag for the item. Read-only. */
      eTag?: string | null
      lastModifiedBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Date and time the item was last modified. Read-only.
       */
      lastModifiedDateTime?: string
      /** @description The name of the item. Read-write. */
      name?: string | null
      parentReference?: components['schemas']['microsoft.graph.itemReference']
      /** @description URL that either displays the resource in the browser (for Office file formats), or is a direct link to the file (for other formats). Read-only. */
      webUrl?: string | null
      createdByUser?: components['schemas']['microsoft.graph.user']
      lastModifiedByUser?: components['schemas']['microsoft.graph.user']
      [key: string]: Record<string, never> | undefined
    }
    /** identitySet */
    'microsoft.graph.identitySet': {
      application?: components['schemas']['microsoft.graph.identity']
      device?: components['schemas']['microsoft.graph.identity']
      user?: components['schemas']['microsoft.graph.identity']
      [key: string]: Record<string, never> | undefined
    }
    /** quota */
    'microsoft.graph.quota': {
      /**
       * Format: int64
       * @description Total space consumed by files in the recycle bin, in bytes. Read-only.
       */
      deleted?: number | null
      /**
       * Format: int64
       * @description Total space remaining before reaching the quota limit, in bytes. Read-only.
       */
      remaining?: number | null
      /** @description Enumeration value that indicates the state of the storage space. Read-only. */
      state?: string | null
      storagePlanInformation?: components['schemas']['microsoft.graph.storagePlanInformation']
      /**
       * Format: int64
       * @description Total allowed storage space, in bytes. Read-only.
       */
      total?: number | null
      /**
       * Format: int64
       * @description Total space used, in bytes. Read-only.
       */
      used?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** sharepointIds */
    'microsoft.graph.sharepointIds': {
      /** @description The unique identifier (guid) for the item's list in SharePoint. */
      listId?: string | null
      /** @description An integer identifier for the item within the containing list. */
      listItemId?: string | null
      /** @description The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site. */
      listItemUniqueId?: string | null
      /** @description The unique identifier (guid) for the item's site collection (SPSite). */
      siteId?: string | null
      /** @description The SharePoint URL for the site that contains the item. */
      siteUrl?: string | null
      /** @description The unique identifier (guid) for the tenancy. */
      tenantId?: string | null
      /** @description The unique identifier (guid) for the item's site (SPWeb). */
      webId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** systemFacet */
    'microsoft.graph.systemFacet': {
      [key: string]: Record<string, never>
    }
    /** audio */
    'microsoft.graph.audio': {
      /** @description The title of the album for this audio file. */
      album?: string | null
      /** @description The artist named on the album for the audio file. */
      albumArtist?: string | null
      /** @description The performing artist for the audio file. */
      artist?: string | null
      /**
       * Format: int64
       * @description Bitrate expressed in kbps.
       */
      bitrate?: number | null
      /** @description The name of the composer of the audio file. */
      composers?: string | null
      /** @description Copyright information for the audio file. */
      copyright?: string | null
      /**
       * Format: int16
       * @description The number of the disc this audio file came from.
       */
      disc?: number | null
      /**
       * Format: int16
       * @description The total number of discs in this album.
       */
      discCount?: number | null
      /**
       * Format: int64
       * @description Duration of the audio file, expressed in milliseconds
       */
      duration?: number | null
      /** @description The genre of this audio file. */
      genre?: string | null
      /** @description Indicates if the file is protected with digital rights management. */
      hasDrm?: boolean | null
      /** @description Indicates if the file is encoded with a variable bitrate. */
      isVariableBitrate?: boolean | null
      /** @description The title of the audio file. */
      title?: string | null
      /**
       * Format: int32
       * @description The number of the track on the original disc for this audio file.
       */
      track?: number | null
      /**
       * Format: int32
       * @description The total number of tracks on the original disc for this audio file.
       */
      trackCount?: number | null
      /**
       * Format: int32
       * @description The year the audio file was recorded.
       */
      year?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** bundle */
    'microsoft.graph.bundle': {
      album?: components['schemas']['microsoft.graph.album']
      /**
       * Format: int32
       * @description Number of children contained immediately within this container.
       */
      childCount?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** deleted */
    'microsoft.graph.deleted': {
      /** @description Represents the state of the deleted item. */
      state?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** file */
    'microsoft.graph.file': {
      hashes?: components['schemas']['microsoft.graph.hashes']
      /** @description The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only. */
      mimeType?: string | null
      processingMetadata?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** fileSystemInfo */
    'microsoft.graph.fileSystemInfo': {
      /**
       * Format: date-time
       * @description The UTC date and time the file was created on a client.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description The UTC date and time the file was last accessed. Available for the recent file list only.
       */
      lastAccessedDateTime?: string | null
      /**
       * Format: date-time
       * @description The UTC date and time the file was last modified on a client.
       */
      lastModifiedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** folder */
    'microsoft.graph.folder': {
      /**
       * Format: int32
       * @description Number of children contained immediately within this container.
       */
      childCount?: number | null
      view?: components['schemas']['microsoft.graph.folderView']
      [key: string]: Record<string, never> | undefined
    }
    /** image */
    'microsoft.graph.image': {
      /**
       * Format: int32
       * @description Optional. Height of the image, in pixels. Read-only.
       */
      height?: number | null
      /**
       * Format: int32
       * @description Optional. Width of the image, in pixels. Read-only.
       */
      width?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** geoCoordinates */
    'microsoft.graph.geoCoordinates': {
      /**
       * Format: double
       * @description Optional. The altitude (height), in feet,  above sea level for the item. Read-only.
       */
      altitude?: number | null
      /**
       * Format: double
       * @description Optional. The latitude, in decimal, for the item. Read-only.
       */
      latitude?: number | null
      /**
       * Format: double
       * @description Optional. The longitude, in decimal, for the item. Read-only.
       */
      longitude?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** malware */
    'microsoft.graph.malware': {
      /** @description Contains the virus details for the malware facet. */
      description?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** package */
    'microsoft.graph.package': {
      /** @description A string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly. */
      type?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** pendingOperations */
    'microsoft.graph.pendingOperations': {
      pendingContentUpdate?: components['schemas']['microsoft.graph.pendingContentUpdate']
      [key: string]: Record<string, never> | undefined
    }
    /** photo */
    'microsoft.graph.photo': {
      /** @description Camera manufacturer. Read-only. */
      cameraMake?: string | null
      /** @description Camera model. Read-only. */
      cameraModel?: string | null
      /**
       * Format: double
       * @description The denominator for the exposure time fraction from the camera. Read-only.
       */
      exposureDenominator?: number | null
      /**
       * Format: double
       * @description The numerator for the exposure time fraction from the camera. Read-only.
       */
      exposureNumerator?: number | null
      /**
       * Format: double
       * @description The F-stop value from the camera. Read-only.
       */
      fNumber?: number | null
      /**
       * Format: double
       * @description The focal length from the camera. Read-only.
       */
      focalLength?: number | null
      /**
       * Format: int32
       * @description The ISO value from the camera. Read-only.
       */
      iso?: number | null
      /**
       * Format: int16
       * @description The orientation value from the camera. Writable on OneDrive Personal.
       */
      orientation?: number | null
      /**
       * Format: date-time
       * @description Represents the date and time the photo was taken. Read-only.
       */
      takenDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** publicationFacet */
    'microsoft.graph.publicationFacet': {
      checkedOutBy?: components['schemas']['microsoft.graph.identitySet']
      /** @description The state of publication for this document. Either published or checkout. Read-only. */
      level?: string | null
      /** @description The unique identifier for the version that is visible to the current caller. Read-only. */
      versionId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** remoteItem */
    'microsoft.graph.remoteItem': {
      createdBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Date and time of item creation. Read-only.
       */
      createdDateTime?: string | null
      file?: components['schemas']['microsoft.graph.file']
      fileSystemInfo?: components['schemas']['microsoft.graph.fileSystemInfo']
      folder?: components['schemas']['microsoft.graph.folder']
      /** @description Unique identifier for the remote item in its drive. Read-only. */
      id?: string | null
      image?: components['schemas']['microsoft.graph.image']
      lastModifiedBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Date and time the item was last modified. Read-only.
       */
      lastModifiedDateTime?: string | null
      /** @description Optional. Filename of the remote item. Read-only. */
      name?: string | null
      package?: components['schemas']['microsoft.graph.package']
      parentReference?: components['schemas']['microsoft.graph.itemReference']
      shared?: components['schemas']['microsoft.graph.shared']
      sharepointIds?: components['schemas']['microsoft.graph.sharepointIds']
      /**
       * Format: int64
       * @description Size of the remote item. Read-only.
       */
      size?: number | null
      specialFolder?: components['schemas']['microsoft.graph.specialFolder']
      video?: components['schemas']['microsoft.graph.video']
      /** @description DAV compatible URL for the item. */
      webDavUrl?: string | null
      /** @description URL that displays the resource in the browser. Read-only. */
      webUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** root */
    'microsoft.graph.root': {
      [key: string]: Record<string, never>
    }
    /** searchResult */
    'microsoft.graph.searchResult': {
      /** @description A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results. */
      onClickTelemetryUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** shared */
    'microsoft.graph.shared': {
      owner?: components['schemas']['microsoft.graph.identitySet']
      /** @description Indicates the scope of how the item is shared. The possible values are: anonymous, organization, or users. Read-only. */
      scope?: string | null
      sharedBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description The UTC date and time when the item was shared. Read-only.
       */
      sharedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** specialFolder */
    'microsoft.graph.specialFolder': {
      /** @description The unique identifier for this item in the /drive/special collection */
      name?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** video */
    'microsoft.graph.video': {
      /**
       * Format: int32
       * @description Number of audio bits per sample.
       */
      audioBitsPerSample?: number | null
      /**
       * Format: int32
       * @description Number of audio channels.
       */
      audioChannels?: number | null
      /** @description Name of the audio format (AAC, MP3, etc.). */
      audioFormat?: string | null
      /**
       * Format: int32
       * @description Number of audio samples per second.
       */
      audioSamplesPerSecond?: number | null
      /**
       * Format: int32
       * @description Bit rate of the video in bits per second.
       */
      bitrate?: number | null
      /**
       * Format: int64
       * @description Duration of the file in milliseconds.
       */
      duration?: number | null
      /** @description 'Four character code' name of the video format. */
      fourCC?: string | null
      /**
       * Format: double
       * @description Frame rate of the video.
       */
      frameRate?: number | null
      /**
       * Format: int32
       * @description Height of the video, in pixels.
       */
      height?: number | null
      /**
       * Format: int32
       * @description Width of the video, in pixels.
       */
      width?: number | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbook': components['schemas']['microsoft.graph.entity'] & {
      application?: components['schemas']['microsoft.graph.workbookApplication']
      /** @description Represents a collection of comments in a workbook. */
      comments?: components['schemas']['microsoft.graph.workbookComment'][]
      functions?: components['schemas']['microsoft.graph.workbookFunctions']
      /** @description Represents a collection of workbooks scoped named items (named ranges and constants). Read-only. */
      names?: components['schemas']['microsoft.graph.workbookNamedItem'][]
      /** @description The status of workbook operations. Getting an operation collection is not supported, but you can get the status of a long-running operation if the Location header is returned in the response. Read-only. */
      operations?: components['schemas']['microsoft.graph.workbookOperation'][]
      /** @description Represents a collection of tables associated with the workbook. Read-only. */
      tables?: components['schemas']['microsoft.graph.workbookTable'][]
      /** @description Represents a collection of worksheets associated with the workbook. Read-only. */
      worksheets?: components['schemas']['microsoft.graph.workbookWorksheet'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.directoryObject': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description Date and time when this object was deleted. Always null when the object hasn't been deleted.
       */
      deletedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** assignedLicense */
    'microsoft.graph.assignedLicense': {
      /** @description A collection of the unique identifiers for plans that have been disabled. IDs are available in servicePlans > servicePlanId in the tenant's subscribedSkus or serviceStatus > servicePlanId in the tenant's companySubscription. */
      disabledPlans?: string[]
      /**
       * Format: uuid
       * @description The unique identifier for the SKU. Corresponds to the skuId from subscribedSkus or companySubscription.
       */
      skuId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** assignedPlan */
    'microsoft.graph.assignedPlan': {
      /**
       * Format: date-time
       * @description The date and time at which the plan was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      assignedDateTime?: string | null
      /** @description Condition of the capability assignment. The possible values are Enabled, Warning, Suspended, Deleted, LockedOut. See a detailed description of each value. */
      capabilityStatus?: string | null
      /** @description The name of the service; for example, exchange. */
      service?: string | null
      /**
       * Format: uuid
       * @description A GUID that identifies the service plan. For a complete list of GUIDs and their equivalent friendly service names, see Product names and service plan identifiers for licensing.
       */
      servicePlanId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** authorizationInfo */
    'microsoft.graph.authorizationInfo': {
      certificateUserIds?: (string | null)[]
      [key: string]: Record<string, never> | undefined
    }
    /** customSecurityAttributeValue */
    'microsoft.graph.customSecurityAttributeValue': {
      [key: string]: Record<string, never>
    }
    /** employeeOrgData */
    'microsoft.graph.employeeOrgData': {
      /** @description The cost center associated with the user. Returned only on $select. Supports $filter. */
      costCenter?: string | null
      /** @description The name of the division in which the user works. Returned only on $select. Supports $filter. */
      division?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** objectIdentity */
    'microsoft.graph.objectIdentity': {
      /** @description Specifies the issuer of the identity, for example facebook.com. 512 character limit. For local accounts (where signInType isn't federated), this property is the local default domain name for the tenant, for example contoso.com.  For guests from other Microsoft Entra organizations, this is the domain of the federated organization, for example contoso.com. For more information about filtering behavior for this property, see Filtering on the identities property of a user. */
      issuer?: string | null
      /** @description Specifies the unique identifier assigned to the user by the issuer. 64 character limit. The combination of issuer and issuerAssignedId must be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or userName (also known as local accounts).When signInType is set to: emailAddress (or a custom string that starts with emailAddress like emailAddress1), issuerAssignedId must be a valid email addressuserName, issuerAssignedId must begin with an alphabetical character or number, and can only contain alphanumeric characters and the following symbols: - or _  For more information about filtering behavior for this property, see Filtering on the identities property of a user. */
      issuerAssignedId?: string | null
      /** @description Specifies the user sign-in types in your directory, such as emailAddress, userName, federated, or userPrincipalName. federated represents a unique identifier for a user from an issuer that can be in any format chosen by the issuer. Setting or updating a userPrincipalName identity updates the value of the userPrincipalName property on the user object. The validations performed on the userPrincipalName property on the user object, for example, verified domains and acceptable characters, are performed when setting or updating a userPrincipalName identity. Extra validation is enforced on issuerAssignedId when the sign-in type is set to emailAddress or userName. This property can also be set to any custom string.  For more information about filtering behavior for this property, see Filtering on the identities property of a user. */
      signInType?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** licenseAssignmentState */
    'microsoft.graph.licenseAssignmentState': {
      assignedByGroup?: string | null
      disabledPlans?: (string | null)[]
      error?: string | null
      /** Format: date-time */
      lastUpdatedDateTime?: string | null
      /** Format: uuid */
      skuId?: string | null
      state?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** onPremisesExtensionAttributes */
    'microsoft.graph.onPremisesExtensionAttributes': {
      /** @description First customizable extension attribute. */
      extensionAttribute1?: string | null
      /** @description Tenth customizable extension attribute. */
      extensionAttribute10?: string | null
      /** @description Eleventh customizable extension attribute. */
      extensionAttribute11?: string | null
      /** @description Twelfth customizable extension attribute. */
      extensionAttribute12?: string | null
      /** @description Thirteenth customizable extension attribute. */
      extensionAttribute13?: string | null
      /** @description Fourteenth customizable extension attribute. */
      extensionAttribute14?: string | null
      /** @description Fifteenth customizable extension attribute. */
      extensionAttribute15?: string | null
      /** @description Second customizable extension attribute. */
      extensionAttribute2?: string | null
      /** @description Third customizable extension attribute. */
      extensionAttribute3?: string | null
      /** @description Fourth customizable extension attribute. */
      extensionAttribute4?: string | null
      /** @description Fifth customizable extension attribute. */
      extensionAttribute5?: string | null
      /** @description Sixth customizable extension attribute. */
      extensionAttribute6?: string | null
      /** @description Seventh customizable extension attribute. */
      extensionAttribute7?: string | null
      /** @description Eighth customizable extension attribute. */
      extensionAttribute8?: string | null
      /** @description Ninth customizable extension attribute. */
      extensionAttribute9?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** onPremisesProvisioningError */
    'microsoft.graph.onPremisesProvisioningError': {
      /** @description Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property. */
      category?: string | null
      /**
       * Format: date-time
       * @description The date and time at which the error occurred.
       */
      occurredDateTime?: string | null
      /** @description Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress */
      propertyCausingError?: string | null
      /** @description Value of the property causing the error. */
      value?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** passwordProfile */
    'microsoft.graph.passwordProfile': {
      /** @description true if the user must change their password on the next sign-in; otherwise false. */
      forceChangePasswordNextSignIn?: boolean | null
      /** @description If true, at next sign-in, the user must perform a multifactor authentication (MFA) before being forced to change their password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform a multifactor authentication before password change. After a password change, this property will be automatically reset to false. If not set, default is false. */
      forceChangePasswordNextSignInWithMfa?: boolean | null
      /** @description The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next sign-in. The password must satisfy minimum requirements as specified by the user's passwordPolicies property. By default, a strong password is required. */
      password?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** userPrint */
    'microsoft.graph.userPrint': {
      recentPrinterShares?: components['schemas']['microsoft.graph.printerShare'][]
      [key: string]: Record<string, never> | undefined
    }
    /** provisionedPlan */
    'microsoft.graph.provisionedPlan': {
      /** @description For example, 'Enabled'. */
      capabilityStatus?: string | null
      /** @description For example, 'Success'. */
      provisioningStatus?: string | null
      /** @description The name of the service; for example, 'AccessControlS2S' */
      service?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** serviceProvisioningError */
    'microsoft.graph.serviceProvisioningError': {
      /**
       * Format: date-time
       * @description The date and time at which the error occurred.
       */
      createdDateTime?: string | null
      /** @description Indicates whether the error has been attended to. */
      isResolved?: boolean | null
      /** @description Qualified service instance (for example, 'SharePoint/Dublin') that published the service error information. */
      serviceInstance?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** signInActivity */
    'microsoft.graph.signInActivity': {
      /**
       * Format: date-time
       * @description The last non-interactive sign-in date for a specific user. You can use this field to calculate the last time a client attempted (either successfully or unsuccessfully) to sign in to the directory on behalf of a user. Because some users may use clients to access tenant resources rather than signing into your tenant directly, you can use the non-interactive sign-in date to along with lastSignInDateTime to identify inactive users. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Microsoft Entra ID maintains non-interactive sign-ins going back to May 2020. For more information about using the value of this property, see Manage inactive user accounts in Microsoft Entra ID.
       */
      lastNonInteractiveSignInDateTime?: string | null
      /** @description Request identifier of the last non-interactive sign-in performed by this user. */
      lastNonInteractiveSignInRequestId?: string | null
      /**
       * Format: date-time
       * @description The last interactive sign-in date and time for a specific user. You can use this field to calculate the last time a user attempted (either successfully or unsuccessfully) to sign in to the directory with an interactive authentication method. This field can be used to build reports, such as inactive users. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Microsoft Entra ID maintains interactive sign-ins going back to April 2020. For more information about using the value of this property, see Manage inactive user accounts in Microsoft Entra ID.
       */
      lastSignInDateTime?: string | null
      /** @description Request identifier of the last interactive sign-in performed by this user. */
      lastSignInRequestId?: string | null
      /**
       * Format: date-time
       * @description The date and time of the user's most recent successful sign-in activity. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      lastSuccessfulSignInDateTime?: string | null
      /** @description The request ID of the last successful sign-in. */
      lastSuccessfulSignInRequestId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.userActivity': components['schemas']['microsoft.graph.entity'] & {
      /** @description Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based app if no native app exists. */
      activationUrl?: string
      /** @description Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint. */
      activitySourceHost?: string
      /** @description Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter. */
      appActivityId?: string
      /** @description Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed on the user’s local device. */
      appDisplayName?: string | null
      contentInfo?: components['schemas']['microsoft.graph.Json']
      /** @description Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example, a pointer to an item in an RSS feed). */
      contentUrl?: string | null
      /**
       * Format: date-time
       * @description Set by the server. DateTime in UTC when the object was created on the server.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description Set by the server. DateTime in UTC when the object expired on the server.
       */
      expirationDateTime?: string | null
      /** @description Optional. URL used to launch the activity in a web-based app, if available. */
      fallbackUrl?: string | null
      /**
       * Format: date-time
       * @description Set by the server. DateTime in UTC when the object was modified on the server.
       */
      lastModifiedDateTime?: string | null
      status?: components['schemas']['microsoft.graph.status']
      /** @description Optional. The timezone in which the user's device used to generate the activity was located at activity creation time; values supplied as Olson IDs in order to support cross-platform representation. */
      userTimezone?: string | null
      visualElements?: components['schemas']['microsoft.graph.visualInfo']
      /** @description Optional. NavigationProperty/Containment; navigation property to the activity's historyItems. */
      historyItems?: components['schemas']['microsoft.graph.activityHistoryItem'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.agreementAcceptance': components['schemas']['microsoft.graph.entity'] & {
      /** @description The identifier of the agreement file accepted by the user. */
      agreementFileId?: string | null
      /** @description The identifier of the agreement. */
      agreementId?: string | null
      /** @description The display name of the device used for accepting the agreement. */
      deviceDisplayName?: string | null
      /** @description The unique identifier of the device used for accepting the agreement. Supports $filter (eq) and eq for null values. */
      deviceId?: string | null
      /** @description The operating system used to accept the agreement. */
      deviceOSType?: string | null
      /** @description The operating system version of the device used to accept the agreement. */
      deviceOSVersion?: string | null
      /**
       * Format: date-time
       * @description The expiration date time of the acceptance. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $filter (eq, ge, le) and eq for null values.
       */
      expirationDateTime?: string | null
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      recordedDateTime?: string | null
      state?: components['schemas']['microsoft.graph.agreementAcceptanceState']
      /** @description Display name of the user when the acceptance was recorded. */
      userDisplayName?: string | null
      /** @description Email of the user when the acceptance was recorded. */
      userEmail?: string | null
      /** @description The identifier of the user who accepted the agreement. Supports $filter (eq). */
      userId?: string | null
      /** @description UPN of the user when the acceptance was recorded. */
      userPrincipalName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.appRoleAssignment': components['schemas']['microsoft.graph.directoryObject'] & {
      /**
       * Format: uuid
       * @description The identifier (id) for the app role that's assigned to the principal. This app role must be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource application hasn't declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be specified to signal that the principal is assigned to the resource app without any specific app roles. Required on create.
       */
      appRoleId?: string
      /**
       * Format: date-time
       * @description The time when the app role assignment was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      createdDateTime?: string | null
      /** @description The display name of the user, group, or service principal that was granted the app role assignment. Read-only. Supports $filter (eq and startswith). */
      principalDisplayName?: string | null
      /**
       * Format: uuid
       * @description The unique identifier (id) for the user, security group, or service principal being granted the app role. Security groups with dynamic memberships are supported. Required on create.
       */
      principalId?: string | null
      /** @description The type of the assigned principal. This can either be User, Group, or ServicePrincipal. Read-only. */
      principalType?: string | null
      /** @description The display name of the resource app's service principal to which the assignment is made. */
      resourceDisplayName?: string | null
      /**
       * Format: uuid
       * @description The unique identifier (id) for the resource service principal for which the assignment is made. Required on create. Supports $filter (eq only).
       */
      resourceId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.authentication': components['schemas']['microsoft.graph.entity'] & {
      /** @description The email address registered to a user for authentication. */
      emailMethods?: components['schemas']['microsoft.graph.emailAuthenticationMethod'][]
      /** @description Represents the FIDO2 security keys registered to a user for authentication. */
      fido2Methods?: components['schemas']['microsoft.graph.fido2AuthenticationMethod'][]
      /** @description Represents all authentication methods registered to a user. */
      methods?: components['schemas']['microsoft.graph.authenticationMethod'][]
      /** @description The details of the Microsoft Authenticator app registered to a user for authentication. */
      microsoftAuthenticatorMethods?: components['schemas']['microsoft.graph.microsoftAuthenticatorAuthenticationMethod'][]
      /** @description Represents the status of a long-running operation, such as a password reset operation. */
      operations?: components['schemas']['microsoft.graph.longRunningOperation'][]
      /** @description Represents the password registered to a user for authentication. For security, the password itself is never returned in the object, but action can be taken to reset a password. */
      passwordMethods?: components['schemas']['microsoft.graph.passwordAuthenticationMethod'][]
      /** @description The phone numbers registered to a user for authentication. */
      phoneMethods?: components['schemas']['microsoft.graph.phoneAuthenticationMethod'][]
      /** @description The software OATH time-based one-time password (TOTP) applications registered to a user for authentication. */
      softwareOathMethods?: components['schemas']['microsoft.graph.softwareOathAuthenticationMethod'][]
      /** @description Represents a Temporary Access Pass registered to a user for authentication through time-limited passcodes. */
      temporaryAccessPassMethods?: components['schemas']['microsoft.graph.temporaryAccessPassAuthenticationMethod'][]
      /** @description Represents the Windows Hello for Business authentication method registered to a user for authentication. */
      windowsHelloForBusinessMethods?: components['schemas']['microsoft.graph.windowsHelloForBusinessAuthenticationMethod'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.calendar': components['schemas']['microsoft.graph.entity'] & {
      /** @description Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness. */
      allowedOnlineMeetingProviders?: components['schemas']['microsoft.graph.onlineMeetingProviderType'][]
      /** @description true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access. */
      canEdit?: boolean | null
      /** @description true if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it. */
      canShare?: boolean | null
      /** @description true if the user can read calendar items that have been marked private, false otherwise. */
      canViewPrivateItems?: boolean | null
      /** @description Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only. */
      changeKey?: string | null
      color?: components['schemas']['microsoft.graph.calendarColor']
      defaultOnlineMeetingProvider?: components['schemas']['microsoft.graph.onlineMeetingProviderType']
      /** @description The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is empty. Read-only. */
      hexColor?: string | null
      /** @description true if this is the default calendar where new events are created by default, false otherwise. */
      isDefaultCalendar?: boolean | null
      /** @description Indicates whether this user calendar can be deleted from the user mailbox. */
      isRemovable?: boolean | null
      /** @description Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses. */
      isTallyingResponses?: boolean | null
      /** @description The calendar name. */
      name?: string | null
      owner?: components['schemas']['microsoft.graph.emailAddress']
      /** @description The permissions of the users with whom the calendar is shared. */
      calendarPermissions?: components['schemas']['microsoft.graph.calendarPermission'][]
      /** @description The calendar view for the calendar. Navigation property. Read-only. */
      calendarView?: components['schemas']['microsoft.graph.event'][]
      /** @description The events in the calendar. Navigation property. Read-only. */
      events?: components['schemas']['microsoft.graph.event'][]
      /** @description The collection of multi-value extended properties defined for the calendar. Read-only. Nullable. */
      multiValueExtendedProperties?: components['schemas']['microsoft.graph.multiValueLegacyExtendedProperty'][]
      /** @description The collection of single-value extended properties defined for the calendar. Read-only. Nullable. */
      singleValueExtendedProperties?: components['schemas']['microsoft.graph.singleValueLegacyExtendedProperty'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.calendarGroup': components['schemas']['microsoft.graph.entity'] & {
      /** @description Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only. */
      changeKey?: string | null
      /**
       * Format: uuid
       * @description The class identifier. Read-only.
       */
      classId?: string | null
      /** @description The group name. */
      name?: string | null
      /** @description The calendars in the calendar group. Navigation property. Read-only. Nullable. */
      calendars?: components['schemas']['microsoft.graph.calendar'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.event': components['schemas']['microsoft.graph.outlookItem'] & {
      /** @description true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. Default is true. */
      allowNewTimeProposals?: boolean | null
      /** @description The collection of attendees for the event. */
      attendees?: components['schemas']['microsoft.graph.attendee'][]
      body?: components['schemas']['microsoft.graph.itemBody']
      /** @description The preview of the message associated with the event. It is in text format. */
      bodyPreview?: string | null
      end?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      /** @description Set to true if the event has attachments. */
      hasAttachments?: boolean | null
      /** @description When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false. */
      hideAttendees?: boolean | null
      /** @description A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only. */
      iCalUId?: string | null
      importance?: components['schemas']['microsoft.graph.importance']
      /** @description Set to true if the event lasts all day. If true, regardless of whether it's a single-day or multi-day event, start and end time must be set to midnight and be in the same time zone. */
      isAllDay?: boolean | null
      /** @description Set to true if the event has been canceled. */
      isCancelled?: boolean | null
      /** @description Set to true if the user has updated the meeting in Outlook but has not sent the updates to attendees. Set to false if all changes have been sent, or if the event is an appointment without any attendees. */
      isDraft?: boolean | null
      /** @description True if this event has online meeting information (that is, onlineMeeting points to an onlineMeetingInfo resource), false otherwise. Default is false (onlineMeeting is null). Optional.  After you set isOnlineMeeting to true, Microsoft Graph initializes onlineMeeting. Subsequently Outlook ignores any further changes to isOnlineMeeting, and the meeting remains available online. */
      isOnlineMeeting?: boolean | null
      /** @description Set to true if the calendar owner (specified by the owner property of the calendar) is the organizer of the event (specified by the organizer property of the event). This also applies if a delegate organized the event on behalf of the owner. */
      isOrganizer?: boolean | null
      /** @description Set to true if an alert is set to remind the user of the event. */
      isReminderOn?: boolean | null
      location?: components['schemas']['microsoft.graph.location']
      /** @description The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection would be removed and replaced by the new location value. */
      locations?: components['schemas']['microsoft.graph.location'][]
      onlineMeeting?: components['schemas']['microsoft.graph.onlineMeetingInfo']
      onlineMeetingProvider?: components['schemas']['microsoft.graph.onlineMeetingProviderType']
      /** @description A URL for an online meeting. The property is set only when an organizer specifies in Outlook that an event is an online meeting such as Skype. Read-only.To access the URL to join an online meeting, use joinUrl which is exposed via the onlineMeeting property of the event. The onlineMeetingUrl property will be deprecated in the future. */
      onlineMeetingUrl?: string | null
      organizer?: components['schemas']['microsoft.graph.recipient']
      /** @description The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook. */
      originalEndTimeZone?: string | null
      /**
       * Format: date-time
       * @description Represents the start time of an event when it is initially created as an occurrence or exception in a recurring series. This property is not returned for events that are single instances. Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      originalStart?: string | null
      /** @description The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook. */
      originalStartTimeZone?: string | null
      recurrence?: components['schemas']['microsoft.graph.patternedRecurrence']
      /**
       * Format: int32
       * @description The number of minutes before the event start time that the reminder alert occurs.
       */
      reminderMinutesBeforeStart?: number | null
      /** @description Default is true, which represents the organizer would like an invitee to send a response to the event. */
      responseRequested?: boolean | null
      responseStatus?: components['schemas']['microsoft.graph.responseStatus']
      sensitivity?: components['schemas']['microsoft.graph.sensitivity']
      /** @description The ID for the recurring series master item, if this event is part of a recurring series. */
      seriesMasterId?: string | null
      showAs?: components['schemas']['microsoft.graph.freeBusyStatus']
      start?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      /** @description The text of the event's subject line. */
      subject?: string | null
      /** @description A custom identifier specified by a client app for the server to avoid redundant POST operations in case of client retries to create the same event. This is useful when low network connectivity causes the client to time out before receiving a response from the server for the client's prior create-event request. After you set transactionId when creating an event, you cannot change transactionId in a subsequent update. This property is only returned in a response payload if an app has set it. Optional. */
      transactionId?: string | null
      type?: components['schemas']['microsoft.graph.eventType']
      /** @description The URL to open the event in Outlook on the web.Outlook on the web opens the event in the browser if you are signed in to your mailbox. Otherwise, Outlook on the web prompts you to sign in.This URL cannot be accessed from within an iFrame. */
      webLink?: string | null
      /** @description The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable. */
      attachments?: components['schemas']['microsoft.graph.attachment'][]
      calendar?: components['schemas']['microsoft.graph.calendar']
      /** @description The collection of open extensions defined for the event. Nullable. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      /** @description The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable. */
      instances?: components['schemas']['microsoft.graph.event'][]
      /** @description The collection of multi-value extended properties defined for the event. Read-only. Nullable. */
      multiValueExtendedProperties?: components['schemas']['microsoft.graph.multiValueLegacyExtendedProperty'][]
      /** @description The collection of single-value extended properties defined for the event. Read-only. Nullable. */
      singleValueExtendedProperties?: components['schemas']['microsoft.graph.singleValueLegacyExtendedProperty'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.chat': components['schemas']['microsoft.graph.entity'] & {
      chatType?: components['schemas']['microsoft.graph.chatType']
      /**
       * Format: date-time
       * @description Date and time at which the chat was created. Read-only.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description Date and time at which the chat was renamed or the list of members was last changed. Read-only.
       */
      lastUpdatedDateTime?: string | null
      onlineMeetingInfo?: components['schemas']['microsoft.graph.teamworkOnlineMeetingInfo']
      /** @description The identifier of the tenant in which the chat was created. Read-only. */
      tenantId?: string | null
      /** @description (Optional) Subject or topic for the chat. Only available for group chats. */
      topic?: string | null
      viewpoint?: components['schemas']['microsoft.graph.chatViewpoint']
      /** @description The URL for the chat in Microsoft Teams. The URL should be treated as an opaque blob, and not parsed. Read-only. */
      webUrl?: string | null
      /** @description A collection of all the apps in the chat. Nullable. */
      installedApps?: components['schemas']['microsoft.graph.teamsAppInstallation'][]
      lastMessagePreview?: components['schemas']['microsoft.graph.chatMessageInfo']
      /** @description A collection of all the members in the chat. Nullable. */
      members?: components['schemas']['microsoft.graph.conversationMember'][]
      /** @description A collection of all the messages in the chat. Nullable. */
      messages?: components['schemas']['microsoft.graph.chatMessage'][]
      /** @description A collection of permissions granted to apps for the chat. */
      permissionGrants?: components['schemas']['microsoft.graph.resourceSpecificPermissionGrant'][]
      /** @description A collection of all the pinned messages in the chat. Nullable. */
      pinnedMessages?: components['schemas']['microsoft.graph.pinnedChatMessageInfo'][]
      /** @description A collection of all the tabs in the chat. Nullable. */
      tabs?: components['schemas']['microsoft.graph.teamsTab'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.cloudClipboardRoot': components['schemas']['microsoft.graph.entity'] & {
      /** @description Represents a collection of Cloud Clipboard items. */
      items?: components['schemas']['microsoft.graph.cloudClipboardItem'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.contactFolder': components['schemas']['microsoft.graph.entity'] & {
      /** @description The folder's display name. */
      displayName?: string | null
      /** @description The ID of the folder's parent folder. */
      parentFolderId?: string | null
      /** @description The collection of child folders in the folder. Navigation property. Read-only. Nullable. */
      childFolders?: components['schemas']['microsoft.graph.contactFolder'][]
      /** @description The contacts in the folder. Navigation property. Read-only. Nullable. */
      contacts?: components['schemas']['microsoft.graph.contact'][]
      /** @description The collection of multi-value extended properties defined for the contactFolder. Read-only. Nullable. */
      multiValueExtendedProperties?: components['schemas']['microsoft.graph.multiValueLegacyExtendedProperty'][]
      /** @description The collection of single-value extended properties defined for the contactFolder. Read-only. Nullable. */
      singleValueExtendedProperties?: components['schemas']['microsoft.graph.singleValueLegacyExtendedProperty'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.contact': components['schemas']['microsoft.graph.outlookItem'] & {
      /** @description The name of the contact's assistant. */
      assistantName?: string | null
      /**
       * Format: date-time
       * @description The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      birthday?: string | null
      businessAddress?: components['schemas']['microsoft.graph.physicalAddress']
      /** @description The business home page of the contact. */
      businessHomePage?: string | null
      /** @description The contact's business phone numbers. */
      businessPhones?: (string | null)[]
      /** @description The names of the contact's children. */
      children?: (string | null)[]
      /** @description The name of the contact's company. */
      companyName?: string | null
      /** @description The contact's department. */
      department?: string | null
      /** @description The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation. */
      displayName?: string | null
      /** @description The contact's email addresses. */
      emailAddresses?: components['schemas']['microsoft.graph.emailAddress'][]
      /** @description The name the contact is filed under. */
      fileAs?: string | null
      /** @description The contact's suffix. */
      generation?: string | null
      /** @description The contact's given name. */
      givenName?: string | null
      homeAddress?: components['schemas']['microsoft.graph.physicalAddress']
      /** @description The contact's home phone numbers. */
      homePhones?: (string | null)[]
      /** @description The contact's instant messaging (IM) addresses. */
      imAddresses?: (string | null)[]
      /** @description The contact's initials. */
      initials?: string | null
      /** @description The contact’s job title. */
      jobTitle?: string | null
      /** @description The name of the contact's manager. */
      manager?: string | null
      /** @description The contact's middle name. */
      middleName?: string | null
      /** @description The contact's mobile phone number. */
      mobilePhone?: string | null
      /** @description The contact's nickname. */
      nickName?: string | null
      /** @description The location of the contact's office. */
      officeLocation?: string | null
      otherAddress?: components['schemas']['microsoft.graph.physicalAddress']
      /** @description The ID of the contact's parent folder. */
      parentFolderId?: string | null
      /** @description The user's notes about the contact. */
      personalNotes?: string | null
      /** @description The contact's profession. */
      profession?: string | null
      /** @description The name of the contact's spouse/partner. */
      spouseName?: string | null
      /** @description The contact's surname. */
      surname?: string | null
      /** @description The contact's title. */
      title?: string | null
      /** @description The phonetic Japanese company name of the contact. */
      yomiCompanyName?: string | null
      /** @description The phonetic Japanese given name (first name) of the contact. */
      yomiGivenName?: string | null
      /** @description The phonetic Japanese surname (last name)  of the contact. */
      yomiSurname?: string | null
      /** @description The collection of open extensions defined for the contact. Read-only. Nullable. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      /** @description The collection of multi-value extended properties defined for the contact. Read-only. Nullable. */
      multiValueExtendedProperties?: components['schemas']['microsoft.graph.multiValueLegacyExtendedProperty'][]
      photo?: components['schemas']['microsoft.graph.profilePhoto']
      /** @description The collection of single-value extended properties defined for the contact. Read-only. Nullable. */
      singleValueExtendedProperties?: components['schemas']['microsoft.graph.singleValueLegacyExtendedProperty'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.deviceManagementTroubleshootingEvent': components['schemas']['microsoft.graph.entity'] & {
      /** @description Id used for tracing the failure in the service. */
      correlationId?: string | null
      /**
       * Format: date-time
       * @description Time when the event occurred .
       */
      eventDateTime?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.employeeExperienceUser': components['schemas']['microsoft.graph.entity'] & {
      learningCourseActivities?: components['schemas']['microsoft.graph.learningCourseActivity'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.extension': components['schemas']['microsoft.graph.entity'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.inferenceClassification': components['schemas']['microsoft.graph.entity'] & {
      /** @description A set of overrides for a user to always classify messages from specific senders in certain ways: focused, or other. Read-only. Nullable. */
      overrides?: components['schemas']['microsoft.graph.inferenceClassificationOverride'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.itemInsights': components['schemas']['microsoft.graph.officeGraphInsights'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.team': components['schemas']['microsoft.graph.entity'] & {
      /** @description An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured set in the tenant's directory. */
      classification?: string | null
      /**
       * Format: date-time
       * @description Timestamp at which the team was created.
       */
      createdDateTime?: string | null
      /** @description An optional description for the team. Maximum length: 1024 characters. */
      description?: string | null
      /** @description The name of the team. */
      displayName?: string | null
      funSettings?: components['schemas']['microsoft.graph.teamFunSettings']
      guestSettings?: components['schemas']['microsoft.graph.teamGuestSettings']
      /** @description A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API. */
      internalId?: string | null
      /** @description Whether this team is in read-only mode. */
      isArchived?: boolean | null
      memberSettings?: components['schemas']['microsoft.graph.teamMemberSettings']
      messagingSettings?: components['schemas']['microsoft.graph.teamMessagingSettings']
      specialization?: components['schemas']['microsoft.graph.teamSpecialization']
      summary?: components['schemas']['microsoft.graph.teamSummary']
      /** @description The ID of the Microsoft Entra tenant. */
      tenantId?: string | null
      visibility?: components['schemas']['microsoft.graph.teamVisibilityType']
      /** @description A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not parsed. */
      webUrl?: string | null
      /** @description List of channels either hosted in or shared with the team (incoming channels). */
      allChannels?: components['schemas']['microsoft.graph.channel'][]
      /** @description The collection of channels and messages associated with the team. */
      channels?: components['schemas']['microsoft.graph.channel'][]
      group?: components['schemas']['microsoft.graph.group']
      /** @description List of channels shared with the team. */
      incomingChannels?: components['schemas']['microsoft.graph.channel'][]
      /** @description The apps installed in this team. */
      installedApps?: components['schemas']['microsoft.graph.teamsAppInstallation'][]
      /** @description Members and owners of the team. */
      members?: components['schemas']['microsoft.graph.conversationMember'][]
      /** @description The async operations that ran or are running on this team. */
      operations?: components['schemas']['microsoft.graph.teamsAsyncOperation'][]
      /** @description A collection of permissions granted to apps to access the team. */
      permissionGrants?: components['schemas']['microsoft.graph.resourceSpecificPermissionGrant'][]
      photo?: components['schemas']['microsoft.graph.profilePhoto']
      primaryChannel?: components['schemas']['microsoft.graph.channel']
      schedule?: components['schemas']['microsoft.graph.schedule']
      /** @description The tags associated with the team. */
      tags?: components['schemas']['microsoft.graph.teamworkTag'][]
      template?: components['schemas']['microsoft.graph.teamsTemplate']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.licenseDetails': components['schemas']['microsoft.graph.entity'] & {
      /** @description Information about the service plans assigned with the license. Read-only. Not nullable. */
      servicePlans?: components['schemas']['microsoft.graph.servicePlanInfo'][]
      /**
       * Format: uuid
       * @description Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related subscribedSku object. Read-only.
       */
      skuId?: string | null
      /** @description Unique SKU display name. Equal to the skuPartNumber on the related subscribedSku object; for example, AAD_Premium. Read-only. */
      skuPartNumber?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.mailFolder': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: int32
       * @description The number of immediate child mailFolders in the current mailFolder.
       */
      childFolderCount?: number | null
      /** @description The mailFolder's display name. */
      displayName?: string | null
      /** @description Indicates whether the mailFolder is hidden. This property can be set only when creating the folder. Find more information in Hidden mail folders. */
      isHidden?: boolean | null
      /** @description The unique identifier for the mailFolder's parent mailFolder. */
      parentFolderId?: string | null
      /**
       * Format: int32
       * @description The number of items in the mailFolder.
       */
      totalItemCount?: number | null
      /**
       * Format: int32
       * @description The number of items in the mailFolder marked as unread.
       */
      unreadItemCount?: number | null
      /** @description The collection of child folders in the mailFolder. */
      childFolders?: components['schemas']['microsoft.graph.mailFolder'][]
      /** @description The collection of rules that apply to the user's Inbox folder. */
      messageRules?: components['schemas']['microsoft.graph.messageRule'][]
      /** @description The collection of messages in the mailFolder. */
      messages?: components['schemas']['microsoft.graph.message'][]
      /** @description The collection of multi-value extended properties defined for the mailFolder. Read-only. Nullable. */
      multiValueExtendedProperties?: components['schemas']['microsoft.graph.multiValueLegacyExtendedProperty'][]
      /** @description The collection of single-value extended properties defined for the mailFolder. Read-only. Nullable. */
      singleValueExtendedProperties?: components['schemas']['microsoft.graph.singleValueLegacyExtendedProperty'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.managedAppRegistration': components['schemas']['microsoft.graph.entity'] & {
      appIdentifier?: components['schemas']['microsoft.graph.mobileAppIdentifier']
      /** @description App version */
      applicationVersion?: string | null
      /**
       * Format: date-time
       * @description Date and time of creation
       */
      createdDateTime?: string
      /** @description Host device name */
      deviceName?: string | null
      /** @description App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions. */
      deviceTag?: string | null
      /** @description Host device type */
      deviceType?: string | null
      /** @description Zero or more reasons an app registration is flagged. E.g. app running on rooted device */
      flaggedReasons?: components['schemas']['microsoft.graph.managedAppFlaggedReason'][]
      /**
       * Format: date-time
       * @description Date and time of last the app synced with management service.
       */
      lastSyncDateTime?: string
      /** @description App management SDK version */
      managementSdkVersion?: string | null
      /** @description Operating System version */
      platformVersion?: string | null
      /** @description The user Id to who this app registration belongs. */
      userId?: string | null
      /** @description Version of the entity. */
      version?: string | null
      /** @description Zero or more policys already applied on the registered app when it last synchronized with managment service. */
      appliedPolicies?: components['schemas']['microsoft.graph.managedAppPolicy'][]
      /** @description Zero or more policies admin intended for the app as of now. */
      intendedPolicies?: components['schemas']['microsoft.graph.managedAppPolicy'][]
      /** @description Zero or more long running operations triggered on the app registration. */
      operations?: components['schemas']['microsoft.graph.managedAppOperation'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.managedDevice': components['schemas']['microsoft.graph.entity'] & {
      /** @description The code that allows the Activation Lock on managed device to be bypassed. Default, is Null (Non-Default property) for this property when returned as part of managedDevice entity in LIST call. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. $Search is not supported. Read-only. This property is read-only. */
      activationLockBypassCode?: string | null
      /** @description Android security patch level. This property is read-only. */
      androidSecurityPatchLevel?: string | null
      /** @description The unique identifier for the Azure Active Directory device. Read only. This property is read-only. */
      azureADDeviceId?: string | null
      /** @description Whether the device is Azure Active Directory registered. This property is read-only. */
      azureADRegistered?: boolean | null
      /**
       * Format: date-time
       * @description The DateTime when device compliance grace period expires. This property is read-only.
       */
      complianceGracePeriodExpirationDateTime?: string
      complianceState?: components['schemas']['microsoft.graph.complianceState']
      configurationManagerClientEnabledFeatures?: components['schemas']['microsoft.graph.configurationManagerClientEnabledFeatures']
      /** @description List of ComplexType deviceActionResult objects. This property is read-only. */
      deviceActionResults?: readonly components['schemas']['microsoft.graph.deviceActionResult'][]
      /** @description Device category display name. Default is an empty string. Supports $filter operator 'eq' and 'or'. This property is read-only. */
      deviceCategoryDisplayName?: string | null
      deviceEnrollmentType?: components['schemas']['microsoft.graph.deviceEnrollmentType']
      deviceHealthAttestationState?: components['schemas']['microsoft.graph.deviceHealthAttestationState']
      /** @description Name of the device. This property is read-only. */
      deviceName?: string | null
      deviceRegistrationState?: components['schemas']['microsoft.graph.deviceRegistrationState']
      /** @description Whether the device is Exchange ActiveSync activated. This property is read-only. */
      easActivated?: boolean
      /**
       * Format: date-time
       * @description Exchange ActivationSync activation time of the device. This property is read-only.
       */
      easActivationDateTime?: string
      /** @description Exchange ActiveSync Id of the device. This property is read-only. */
      easDeviceId?: string | null
      /** @description Email(s) for the user associated with the device. This property is read-only. */
      emailAddress?: string | null
      /**
       * Format: date-time
       * @description Enrollment time of the device. Supports $filter operator 'lt' and 'gt'. This property is read-only.
       */
      enrolledDateTime?: string
      /** @description Name of the enrollment profile assigned to the device. Default value is empty string, indicating no enrollment profile was assgined. This property is read-only. */
      enrollmentProfileName?: string | null
      /** @description Indicates Ethernet MAC Address of the device. Default, is Null (Non-Default property) for this property when returned as part of managedDevice entity. Individual get call with select query options is needed to retrieve actual values. Example: deviceManagement/managedDevices({managedDeviceId})?$select=ethernetMacAddress Supports: $select. $Search is not supported. Read-only. This property is read-only. */
      ethernetMacAddress?: string | null
      exchangeAccessState?: components['schemas']['microsoft.graph.deviceManagementExchangeAccessState']
      exchangeAccessStateReason?: components['schemas']['microsoft.graph.deviceManagementExchangeAccessStateReason']
      /**
       * Format: date-time
       * @description Last time the device contacted Exchange. This property is read-only.
       */
      exchangeLastSuccessfulSyncDateTime?: string
      /**
       * Format: int64
       * @description Free Storage in Bytes. Default value is 0. Read-only. This property is read-only.
       */
      freeStorageSpaceInBytes?: number
      /** @description Integrated Circuit Card Identifier, it is A SIM card's unique identification number. Default is an empty string. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. $Search is not supported. Read-only. This property is read-only. */
      iccid?: string | null
      /** @description IMEI. This property is read-only. */
      imei?: string | null
      /** @description Device encryption status. This property is read-only. */
      isEncrypted?: boolean
      /** @description Device supervised status. This property is read-only. */
      isSupervised?: boolean
      /** @description Whether the device is jail broken or rooted. Default is an empty string. Supports $filter operator 'eq' and 'or'. This property is read-only. */
      jailBroken?: string | null
      /**
       * Format: date-time
       * @description The date and time that the device last completed a successful sync with Intune. Supports $filter operator 'lt' and 'gt'. This property is read-only.
       */
      lastSyncDateTime?: string
      /** @description Automatically generated name to identify a device. Can be overwritten to a user friendly name. */
      managedDeviceName?: string | null
      managedDeviceOwnerType?: components['schemas']['microsoft.graph.managedDeviceOwnerType']
      managementAgent?: components['schemas']['microsoft.graph.managementAgentType']
      /**
       * Format: date-time
       * @description Reports device management certificate expiration date. This property is read-only.
       */
      managementCertificateExpirationDate?: string
      /** @description Manufacturer of the device. This property is read-only. */
      manufacturer?: string | null
      /** @description MEID. This property is read-only. */
      meid?: string | null
      /** @description Model of the device. This property is read-only. */
      model?: string | null
      /** @description Notes on the device created by IT Admin. Default is null. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. $Search is not supported. */
      notes?: string | null
      /** @description Operating system of the device. Windows, iOS, etc. This property is read-only. */
      operatingSystem?: string | null
      /** @description Operating system version of the device. This property is read-only. */
      osVersion?: string | null
      partnerReportedThreatState?: components['schemas']['microsoft.graph.managedDevicePartnerReportedHealthState']
      /** @description Phone number of the device. This property is read-only. */
      phoneNumber?: string | null
      /**
       * Format: int64
       * @description Total Memory in Bytes. Default is 0. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. Read-only. This property is read-only.
       */
      physicalMemoryInBytes?: number
      /** @description An error string that identifies issues when creating Remote Assistance session objects. This property is read-only. */
      remoteAssistanceSessionErrorDetails?: string | null
      /** @description Url that allows a Remote Assistance session to be established with the device. Default is an empty string. To retrieve actual values GET call needs to be made, with device id and included in select parameter. This property is read-only. */
      remoteAssistanceSessionUrl?: string | null
      /** @description Reports if the managed iOS device is user approval enrollment. This property is read-only. */
      requireUserEnrollmentApproval?: boolean | null
      /** @description SerialNumber. This property is read-only. */
      serialNumber?: string | null
      /** @description Subscriber Carrier. This property is read-only. */
      subscriberCarrier?: string | null
      /**
       * Format: int64
       * @description Total Storage in Bytes. This property is read-only.
       */
      totalStorageSpaceInBytes?: number
      /** @description Unique Device Identifier for iOS and macOS devices. Default is an empty string. To retrieve actual values GET call needs to be made, with device id and included in select parameter. Supports: $select. $Search is not supported. Read-only. This property is read-only. */
      udid?: string | null
      /** @description User display name. This property is read-only. */
      userDisplayName?: string | null
      /** @description Unique Identifier for the user associated with the device. This property is read-only. */
      userId?: string | null
      /** @description Device user principal name. This property is read-only. */
      userPrincipalName?: string | null
      /** @description Wi-Fi MAC. This property is read-only. */
      wiFiMacAddress?: string | null
      deviceCategory?: components['schemas']['microsoft.graph.deviceCategory']
      /** @description Device compliance policy states for this device. */
      deviceCompliancePolicyStates?: components['schemas']['microsoft.graph.deviceCompliancePolicyState'][]
      /** @description Device configuration states for this device. */
      deviceConfigurationStates?: components['schemas']['microsoft.graph.deviceConfigurationState'][]
      /** @description List of log collection requests */
      logCollectionRequests?: components['schemas']['microsoft.graph.deviceLogCollectionResponse'][]
      /** @description The primary users associated with the managed device. */
      users?: components['schemas']['microsoft.graph.user'][]
      windowsProtectionState?: components['schemas']['microsoft.graph.windowsProtectionState']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.message': components['schemas']['microsoft.graph.outlookItem'] & {
      /** @description The Bcc: recipients for the message. */
      bccRecipients?: components['schemas']['microsoft.graph.recipient'][]
      body?: components['schemas']['microsoft.graph.itemBody']
      /** @description The first 255 characters of the message body. It is in text format. */
      bodyPreview?: string | null
      /** @description The Cc: recipients for the message. */
      ccRecipients?: components['schemas']['microsoft.graph.recipient'][]
      /** @description The ID of the conversation the email belongs to. */
      conversationId?: string | null
      /**
       * Format: base64url
       * @description Indicates the position of the message within the conversation.
       */
      conversationIndex?: string | null
      flag?: components['schemas']['microsoft.graph.followupFlag']
      from?: components['schemas']['microsoft.graph.recipient']
      /** @description Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>. */
      hasAttachments?: boolean | null
      importance?: components['schemas']['microsoft.graph.importance']
      inferenceClassification?: components['schemas']['microsoft.graph.inferenceClassificationType']
      /** @description A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message.  Returned only on applying a $select query option. Read-only. */
      internetMessageHeaders?: components['schemas']['microsoft.graph.internetMessageHeader'][]
      /** @description The message ID in the format specified by RFC2822. */
      internetMessageId?: string | null
      /** @description Indicates whether a read receipt is requested for the message. */
      isDeliveryReceiptRequested?: boolean | null
      /** @description Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet. */
      isDraft?: boolean | null
      /** @description Indicates whether the message has been read. */
      isRead?: boolean | null
      /** @description Indicates whether a read receipt is requested for the message. */
      isReadReceiptRequested?: boolean | null
      /** @description The unique identifier for the message's parent mailFolder. */
      parentFolderId?: string | null
      /**
       * Format: date-time
       * @description The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      receivedDateTime?: string | null
      /** @description The email addresses to use when replying. */
      replyTo?: components['schemas']['microsoft.graph.recipient'][]
      sender?: components['schemas']['microsoft.graph.recipient']
      /**
       * Format: date-time
       * @description The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      sentDateTime?: string | null
      /** @description The subject of the message. */
      subject?: string | null
      /** @description The To: recipients for the message. */
      toRecipients?: components['schemas']['microsoft.graph.recipient'][]
      uniqueBody?: components['schemas']['microsoft.graph.itemBody']
      /** @description The URL to open the message in Outlook on the web.You can append an ispopout argument to the end of the URL to change how the message is displayed. If ispopout is not present or if it is set to 1, then the message is shown in a popout window. If ispopout is set to 0, the browser shows the message in the Outlook on the web review pane.The message opens in the browser if you are signed in to your mailbox via Outlook on the web. You are prompted to sign in if you are not already signed in with the browser.This URL cannot be accessed from within an iFrame. */
      webLink?: string | null
      /** @description The fileAttachment and itemAttachment attachments for the message. */
      attachments?: components['schemas']['microsoft.graph.attachment'][]
      /** @description The collection of open extensions defined for the message. Nullable. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      /** @description The collection of multi-value extended properties defined for the message. Nullable. */
      multiValueExtendedProperties?: components['schemas']['microsoft.graph.multiValueLegacyExtendedProperty'][]
      /** @description The collection of single-value extended properties defined for the message. Nullable. */
      singleValueExtendedProperties?: components['schemas']['microsoft.graph.singleValueLegacyExtendedProperty'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.oAuth2PermissionGrant': components['schemas']['microsoft.graph.entity'] & {
      /** @description The object id (not appId) of the client service principal for the application that's authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only). */
      clientId?: string
      /** @description Indicates if authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Nonadmin users might be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only). */
      consentType?: string | null
      /** @description The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal. Supports $filter (eq only). */
      principalId?: string | null
      /** @description The id of the resource service principal to which access is authorized. This identifies the API that the client is authorized to attempt to call on behalf of a signed-in user. Supports $filter (eq only). */
      resourceId?: string
      /** @description A space-separated list of the claim values for delegated permissions that should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the oauth2PermissionScopes property of the resource service principal. Must not exceed 3,850 characters in length. */
      scope?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onenote': components['schemas']['microsoft.graph.entity'] & {
      /** @description The collection of OneNote notebooks that are owned by the user or group. Read-only. Nullable. */
      notebooks?: components['schemas']['microsoft.graph.notebook'][]
      /** @description The status of OneNote operations. Getting an operations collection isn't supported, but you can get the status of long-running operations if the Operation-Location header is returned in the response. Read-only. Nullable. */
      operations?: components['schemas']['microsoft.graph.onenoteOperation'][]
      /** @description The pages in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable. */
      pages?: components['schemas']['microsoft.graph.onenotePage'][]
      /** @description The image and other file resources in OneNote pages. Getting a resources collection isn't supported, but you can get the binary content of a specific resource. Read-only. Nullable. */
      resources?: components['schemas']['microsoft.graph.onenoteResource'][]
      /** @description The section groups in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable. */
      sectionGroups?: components['schemas']['microsoft.graph.sectionGroup'][]
      /** @description The sections in all OneNote notebooks that are owned by the user or group.  Read-only. Nullable. */
      sections?: components['schemas']['microsoft.graph.onenoteSection'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onlineMeeting': components['schemas']['microsoft.graph.onlineMeetingBase'] & {
      /**
       * Format: base64url
       * @description The content stream of the attendee report of a Microsoft Teams live event. Read-only.
       */
      attendeeReport?: string | null
      broadcastSettings?: components['schemas']['microsoft.graph.broadcastMeetingSettings']
      /**
       * Format: date-time
       * @description The meeting creation time in UTC. Read-only.
       */
      creationDateTime?: string | null
      /**
       * Format: date-time
       * @description The meeting end time in UTC. Required when you create an online meeting.
       */
      endDateTime?: string | null
      externalId?: string | null
      /** @description Indicates whether this meeting is a Teams live event. */
      isBroadcast?: boolean | null
      participants?: components['schemas']['microsoft.graph.meetingParticipants']
      /**
       * Format: date-time
       * @description The meeting start time in UTC.
       */
      startDateTime?: string | null
      /** @description The recordings of an online meeting. Read-only. */
      recordings?: components['schemas']['microsoft.graph.callRecording'][]
      /** @description The transcripts of an online meeting. Read-only. */
      transcripts?: components['schemas']['microsoft.graph.callTranscript'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.outlookUser': components['schemas']['microsoft.graph.entity'] & {
      /** @description A list of categories defined for the user. */
      masterCategories?: components['schemas']['microsoft.graph.outlookCategory'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.person': components['schemas']['microsoft.graph.entity'] & {
      /** @description The person's birthday. */
      birthday?: string | null
      /** @description The name of the person's company. */
      companyName?: string | null
      /** @description The person's department. */
      department?: string | null
      /** @description The person's display name. */
      displayName?: string | null
      /** @description The person's given name. */
      givenName?: string | null
      /** @description The instant message voice over IP (VOIP) session initiation protocol (SIP) address for the user. Read-only. */
      imAddress?: string | null
      /** @description True if the user has flagged this person as a favorite. */
      isFavorite?: boolean | null
      /** @description The person's job title. */
      jobTitle?: string | null
      /** @description The location of the person's office. */
      officeLocation?: string | null
      /** @description Free-form notes that the user has taken about this person. */
      personNotes?: string | null
      personType?: components['schemas']['microsoft.graph.personType']
      /** @description The person's phone numbers. */
      phones?: components['schemas']['microsoft.graph.phone'][]
      /** @description The person's addresses. */
      postalAddresses?: components['schemas']['microsoft.graph.location'][]
      /** @description The person's profession. */
      profession?: string | null
      /** @description The person's email addresses. */
      scoredEmailAddresses?: components['schemas']['microsoft.graph.scoredEmailAddress'][]
      /** @description The person's surname. */
      surname?: string | null
      /** @description The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person's email name. The general format is alias@domain. */
      userPrincipalName?: string | null
      /** @description The person's websites. */
      websites?: components['schemas']['microsoft.graph.website'][]
      /** @description The phonetic Japanese name of the person's company. */
      yomiCompany?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.resourceSpecificPermissionGrant': components['schemas']['microsoft.graph.directoryObject'] & {
      /** @description ID of the service principal of the Microsoft Entra app that has been granted access. Read-only. */
      clientAppId?: string | null
      /** @description ID of the Microsoft Entra app that has been granted access. Read-only. */
      clientId?: string | null
      /** @description The name of the resource-specific permission. Read-only. */
      permission?: string | null
      /** @description The type of permission. Possible values are: Application, Delegated. Read-only. */
      permissionType?: string | null
      /** @description ID of the Microsoft Entra app that is hosting the resource. Read-only. */
      resourceAppId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.profilePhoto': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: int32
       * @description The height of the photo. Read-only.
       */
      height?: number | null
      /**
       * Format: int32
       * @description The width of the photo. Read-only.
       */
      width?: number | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerUser': components['schemas']['microsoft.graph.entity'] & {
      /** @description Read-only. Nullable. Returns the plannerTasks assigned to the user. */
      plans?: components['schemas']['microsoft.graph.plannerPlan'][]
      /** @description Read-only. Nullable. Returns the plannerPlans shared with the user. */
      tasks?: components['schemas']['microsoft.graph.plannerTask'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.presence': components['schemas']['microsoft.graph.entity'] & {
      /** @description The supplemental information to a user's availability. Possible values are Available, Away, BeRightBack, Busy, DoNotDisturb, InACall, InAConferenceCall, Inactive, InAMeeting, Offline, OffWork, OutOfOffice, PresenceUnknown, Presenting, UrgentInterruptionsOnly. */
      activity?: string | null
      /** @description The base presence information for a user. Possible values are Available, AvailableIdle,  Away, BeRightBack, Busy, BusyIdle, DoNotDisturb, Offline, PresenceUnknown */
      availability?: string | null
      statusMessage?: components['schemas']['microsoft.graph.presenceStatusMessage']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.scopedRoleMembership': components['schemas']['microsoft.graph.entity'] & {
      /** @description Unique identifier for the administrative unit that the directory role is scoped to */
      administrativeUnitId?: string
      /** @description Unique identifier for the directory role that the member is in. */
      roleId?: string
      roleMemberInfo?: components['schemas']['microsoft.graph.identity']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.userSettings': components['schemas']['microsoft.graph.entity'] & {
      /** @description Reflects the organization level setting controlling delegate access to the trending API. When set to true, the organization doesn't have access to Office Delve. The relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for work or school is affected for the whole organization. This setting is read-only and can only be changed by administrators in the SharePoint admin center. */
      contributionToContentDiscoveryAsOrganizationDisabled?: boolean
      /** @description When set to true, the delegate access to the user's trending API is disabled. When set to true, documents in the user's Office Delve are disabled. When set to true, the relevancy of the content displayed in Microsoft 365, for example in Suggested sites in SharePoint Home and the Discover view in OneDrive for work or school is affected. Users can control this setting in Office Delve. */
      contributionToContentDiscoveryDisabled?: boolean
      itemInsights?: components['schemas']['microsoft.graph.userInsightsSettings']
      shiftPreferences?: components['schemas']['microsoft.graph.shiftPreferences']
      storage?: components['schemas']['microsoft.graph.userStorage']
      windows?: components['schemas']['microsoft.graph.windowsSetting'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.userSolutionRoot': components['schemas']['microsoft.graph.entity'] & {
      workingTimeSchedule?: components['schemas']['microsoft.graph.workingTimeSchedule']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.userTeamwork': components['schemas']['microsoft.graph.entity'] & {
      /** @description Represents the location that a user selected in Microsoft Teams and doesn't follow the Office's locale setting. A user’s locale is represented by their preferred language and country or region. For example, en-us. The language component follows two-letter codes as defined in ISO 639-1, and the country component follows two-letter codes as defined in ISO 3166-1 alpha-2. */
      locale?: string | null
      /** @description Represents the region of the organization or the user. For users with multigeo licenses, the property contains the user's region (if available). For users without multigeo licenses, the property contains the organization's region.The region value can be any region supported by the Teams payload. The possible values are: Americas, Europe and MiddleEast, Asia Pacific, UAE, Australia, Brazil, Canada, Switzerland, Germany, France, India, Japan, South Korea, Norway, Singapore, United Kingdom, South Africa, Sweden, Qatar, Poland, Italy, Israel, Spain, Mexico, USGov Community Cloud, USGov Community Cloud High, USGov Department of Defense, and China. */
      region?: string | null
      /** @description The list of associatedTeamInfo objects that a user is associated with. */
      associatedTeams?: components['schemas']['microsoft.graph.associatedTeamInfo'][]
      /** @description The apps installed in the personal scope of this user. */
      installedApps?: components['schemas']['microsoft.graph.userScopeTeamsAppInstallation'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.todo': components['schemas']['microsoft.graph.entity'] & {
      /** @description The task lists in the users mailbox. */
      lists?: components['schemas']['microsoft.graph.todoTaskList'][]
      [key: string]: Record<string, never> | undefined
    }
    /** automaticRepliesSetting */
    'microsoft.graph.automaticRepliesSetting': {
      externalAudience?: components['schemas']['microsoft.graph.externalAudienceScope']
      /** @description The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled. */
      externalReplyMessage?: string | null
      /** @description The automatic reply to send to the audience internal to the signed-in user's organization, if Status is AlwaysEnabled or Scheduled. */
      internalReplyMessage?: string | null
      scheduledEndDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      scheduledStartDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      status?: components['schemas']['microsoft.graph.automaticRepliesStatus']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * delegateMeetingMessageDeliveryOptions
     * @enum {string}
     */
    'microsoft.graph.delegateMeetingMessageDeliveryOptions':
      | 'sendToDelegateAndInformationToPrincipal'
      | 'sendToDelegateAndPrincipal'
      | 'sendToDelegateOnly'
    /** localeInfo */
    'microsoft.graph.localeInfo': {
      /** @description A name representing the user's locale in natural language, for example, 'English (United States)'. */
      displayName?: string | null
      /** @description A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2. */
      locale?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * userPurpose
     * @enum {string}
     */
    'microsoft.graph.userPurpose':
      | 'user'
      | 'linked'
      | 'shared'
      | 'room'
      | 'equipment'
      | 'others'
      | 'unknownFutureValue'
    /** workingHours */
    'microsoft.graph.workingHours': {
      /** @description The days of the week on which the user works. */
      daysOfWeek?: components['schemas']['microsoft.graph.dayOfWeek'][]
      /**
       * Format: time
       * @description The time of the day that the user stops working.
       */
      endTime?: string | null
      /**
       * Format: time
       * @description The time of the day that the user starts working.
       */
      startTime?: string | null
      timeZone?: components['schemas']['microsoft.graph.timeZoneBase']
      [key: string]: Record<string, never> | undefined
    }
    /** entity */
    'microsoft.graph.entity': {
      /** @description The unique identifier for an entity. Read-only. */
      id?: string
      [key: string]: Record<string, never> | undefined
    }
    /** itemActionStat */
    'microsoft.graph.itemActionStat': {
      /**
       * Format: int32
       * @description The number of times the action took place. Read-only.
       */
      actionCount?: number | null
      /**
       * Format: int32
       * @description The number of distinct actors that performed the action. Read-only.
       */
      actorCount?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** incompleteData */
    'microsoft.graph.incompleteData': {
      /**
       * Format: date-time
       * @description The service does not have source data before the specified time.
       */
      missingDataBeforeDateTime?: string | null
      /** @description Some data was not recorded due to excessive activity. */
      wasThrottled?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** accessAction */
    'microsoft.graph.accessAction': {
      [key: string]: Record<string, never>
    }
    /** contentTypeInfo */
    'microsoft.graph.contentTypeInfo': {
      /** @description The ID of the content type. */
      id?: string | null
      /** @description The name of the content type. */
      name?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** documentSetVersionItem */
    'microsoft.graph.documentSetVersionItem': {
      /** @description The unique identifier for the item. */
      itemId?: string | null
      /** @description The title of the item. */
      title?: string | null
      /** @description The version ID of the item. */
      versionId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.sharePointIdentitySet': components['schemas']['microsoft.graph.identitySet'] & {
      group?: components['schemas']['microsoft.graph.identity']
      siteGroup?: components['schemas']['microsoft.graph.sharePointIdentity']
      siteUser?: components['schemas']['microsoft.graph.sharePointIdentity']
      [key: string]: Record<string, never> | undefined
    }
    /** sharingInvitation */
    'microsoft.graph.sharingInvitation': {
      /** @description The email address provided for the recipient of the sharing invitation. Read-only. */
      email?: string | null
      invitedBy?: components['schemas']['microsoft.graph.identitySet']
      redeemedBy?: string | null
      /** @description If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only. */
      signInRequired?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** sharingLink */
    'microsoft.graph.sharingLink': {
      application?: components['schemas']['microsoft.graph.identity']
      /** @description If true then the user can only use this link to view the item on the web, and cannot use it to download the contents of the item. Only for OneDrive for Business and SharePoint. */
      preventsDownload?: boolean | null
      /** @description The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant. */
      scope?: string | null
      /** @description The type of the link created. */
      type?: string | null
      /** @description For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage. */
      webHtml?: string | null
      /** @description A URL that opens the item in the browser on the OneDrive website. */
      webUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.baseItemVersion': components['schemas']['microsoft.graph.entity'] & {
      lastModifiedBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Date and time the version was last modified. Read-only.
       */
      lastModifiedDateTime?: string | null
      publication?: components['schemas']['microsoft.graph.publicationFacet']
      [key: string]: Record<string, never> | undefined
    }
    /** driveItemSource */
    'microsoft.graph.driveItemSource': {
      application?: components['schemas']['microsoft.graph.driveItemSourceApplication']
      /** @description The external identifier for the drive item from the source. */
      externalId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** mediaSource */
    'microsoft.graph.mediaSource': {
      contentCategory?: components['schemas']['microsoft.graph.mediaSourceContentCategory']
      [key: string]: Record<string, never> | undefined
    }
    /** sensitivityLabelAssignment */
    'microsoft.graph.sensitivityLabelAssignment': {
      assignmentMethod?: components['schemas']['microsoft.graph.sensitivityLabelAssignmentMethod']
      /** @description The unique identifier for the sensitivity label assigned to the file. */
      sensitivityLabelId?: string
      /** @description The unique identifier for the tenant that hosts the file when this label is applied. */
      tenantId?: string
      [key: string]: Record<string, never> | undefined
    }
    /** retentionLabelSettings */
    'microsoft.graph.retentionLabelSettings': {
      behaviorDuringRetentionPeriod?: components['schemas']['microsoft.graph.security.behaviorDuringRetentionPeriod']
      /** @description Specifies whether updates to document content are allowed. Read-only. */
      isContentUpdateAllowed?: boolean | null
      /** @description Specifies whether the document deletion is allowed. Read-only. */
      isDeleteAllowed?: boolean | null
      /** @description Specifies whether you're allowed to change the retention label on the document. Read-only. */
      isLabelUpdateAllowed?: boolean | null
      /** @description Specifies whether updates to the item metadata (for example, the Title field) are blocked. Read-only. */
      isMetadataUpdateAllowed?: boolean | null
      /** @description Specifies whether the item is locked. Read-write. */
      isRecordLocked?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** thumbnail */
    'microsoft.graph.thumbnail': {
      /**
       * Format: base64url
       * @description The content stream for the thumbnail.
       */
      content?: string | null
      /**
       * Format: int32
       * @description The height of the thumbnail, in pixels.
       */
      height?: number | null
      /** @description The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested. */
      sourceItemId?: string | null
      /** @description The URL used to fetch the thumbnail content. */
      url?: string | null
      /**
       * Format: int32
       * @description The width of the thumbnail, in pixels.
       */
      width?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** listInfo */
    'microsoft.graph.listInfo': {
      /** @description If true, indicates that content types are enabled for this list. */
      contentTypesEnabled?: boolean | null
      /** @description If true, indicates that the list isn't normally visible in the SharePoint user experience. */
      hidden?: boolean | null
      /** @description An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more. */
      template?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** booleanColumn */
    'microsoft.graph.booleanColumn': {
      [key: string]: Record<string, never>
    }
    /** calculatedColumn */
    'microsoft.graph.calculatedColumn': {
      /** @description For dateTime output types, the format of the value. Possible values are: dateOnly or dateTime. */
      format?: string | null
      /** @description The formula used to compute the value for this column. */
      formula?: string | null
      /** @description The output type used to format values in this column. Possible values are: boolean, currency, dateTime, number, or text. */
      outputType?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** choiceColumn */
    'microsoft.graph.choiceColumn': {
      /** @description If true, allows custom values that aren't in the configured choices. */
      allowTextEntry?: boolean | null
      /** @description The list of values available for this column. */
      choices?: (string | null)[]
      /** @description How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons */
      displayAs?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** contentApprovalStatusColumn */
    'microsoft.graph.contentApprovalStatusColumn': {
      [key: string]: Record<string, never>
    }
    /** currencyColumn */
    'microsoft.graph.currencyColumn': {
      /** @description Specifies the locale from which to infer the currency symbol. */
      locale?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** dateTimeColumn */
    'microsoft.graph.dateTimeColumn': {
      /** @description How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default. */
      displayAs?: string | null
      /** @description Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime */
      format?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** defaultColumnValue */
    'microsoft.graph.defaultColumnValue': {
      /** @description The formula used to compute the default value for the column. */
      formula?: string | null
      /** @description The direct value to use as the default value for the column. */
      value?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** geolocationColumn */
    'microsoft.graph.geolocationColumn': {
      [key: string]: Record<string, never>
    }
    /** hyperlinkOrPictureColumn */
    'microsoft.graph.hyperlinkOrPictureColumn': {
      /** @description Specifies whether the display format used for URL columns is an image or a hyperlink. */
      isPicture?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** lookupColumn */
    'microsoft.graph.lookupColumn': {
      /** @description Indicates whether multiple values can be selected from the source. */
      allowMultipleValues?: boolean | null
      /** @description Indicates whether values in the column should be able to exceed the standard limit of 255 characters. */
      allowUnlimitedLength?: boolean | null
      /** @description The name of the lookup source column. */
      columnName?: string | null
      /** @description The unique identifier of the lookup source list. */
      listId?: string | null
      /** @description If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here. */
      primaryLookupColumnId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** numberColumn */
    'microsoft.graph.numberColumn': {
      /** @description How many decimal places to display. See below for information about the possible values. */
      decimalPlaces?: string | null
      /** @description How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number. */
      displayAs?: string | null
      /**
       * Format: double
       * @description The maximum permitted value.
       */
      maximum?: number | null
      /**
       * Format: double
       * @description The minimum permitted value.
       */
      minimum?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** personOrGroupColumn */
    'microsoft.graph.personOrGroupColumn': {
      /** @description Indicates whether multiple values can be selected from the source. */
      allowMultipleSelection?: boolean | null
      /** @description Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly. */
      chooseFromType?: string | null
      /** @description How to display the information about the person or group chosen. See below. */
      displayAs?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** termColumn */
    'microsoft.graph.termColumn': {
      /** @description Specifies whether the column allows more than one value. */
      allowMultipleValues?: boolean | null
      /** @description Specifies whether to display the entire term path or only the term label. */
      showFullyQualifiedName?: boolean | null
      parentTerm?: components['schemas']['microsoft.graph.termStore.term']
      termSet?: components['schemas']['microsoft.graph.termStore.set']
      [key: string]: Record<string, never> | undefined
    }
    /** textColumn */
    'microsoft.graph.textColumn': {
      /** @description Whether to allow multiple lines of text. */
      allowMultipleLines?: boolean | null
      /** @description Whether updates to this column should replace existing text, or append to it. */
      appendChangesToExistingText?: boolean | null
      /**
       * Format: int32
       * @description The size of the text box.
       */
      linesForEditing?: number | null
      /**
       * Format: int32
       * @description The maximum number of characters for the value.
       */
      maxLength?: number | null
      /** @description The type of text being stored. Must be one of plain or richText */
      textType?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** thumbnailColumn */
    'microsoft.graph.thumbnailColumn': {
      [key: string]: Record<string, never>
    }
    /**
     * columnTypes
     * @enum {string}
     */
    'microsoft.graph.columnTypes':
      | 'note'
      | 'text'
      | 'choice'
      | 'multichoice'
      | 'number'
      | 'currency'
      | 'dateTime'
      | 'lookup'
      | 'boolean'
      | 'user'
      | 'url'
      | 'calculated'
      | 'location'
      | 'geolocation'
      | 'term'
      | 'multiterm'
      | 'thumbnail'
      | 'approvalStatus'
      | 'unknownFutureValue'
    /** columnValidation */
    'microsoft.graph.columnValidation': {
      /** @description Default BCP 47 language tag for the description. */
      defaultLanguage?: string | null
      /** @description Localized messages that explain what is needed for this column's value to be considered valid. User will be prompted with this message if validation fails. */
      descriptions?: components['schemas']['microsoft.graph.displayNameLocalization'][]
      /** @description The formula to validate column value. For examples, see Examples of common formulas in lists. */
      formula?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** documentSet */
    'microsoft.graph.documentSet': {
      /** @description Content types allowed in document set. */
      allowedContentTypes?: components['schemas']['microsoft.graph.contentTypeInfo'][]
      /** @description Default contents of document set. */
      defaultContents?: components['schemas']['microsoft.graph.documentSetContent'][]
      /** @description Specifies whether to push welcome page changes to inherited content types. */
      propagateWelcomePageChanges?: boolean | null
      /** @description Indicates whether to add the name of the document set to each file name. */
      shouldPrefixNameToFile?: boolean | null
      /** @description Welcome page absolute URL. */
      welcomePageUrl?: string | null
      sharedColumns?: components['schemas']['microsoft.graph.columnDefinition'][]
      welcomePageColumns?: components['schemas']['microsoft.graph.columnDefinition'][]
      [key: string]: Record<string, never> | undefined
    }
    /** documentSetContent */
    'microsoft.graph.documentSetContent': {
      contentType?: components['schemas']['microsoft.graph.contentTypeInfo']
      /** @description Name of the file in resource folder that should be added as a default content or a template in the document set. */
      fileName?: string | null
      /** @description Folder name in which the file will be placed when a new document set is created in the library. */
      folderName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** contentTypeOrder */
    'microsoft.graph.contentTypeOrder': {
      /** @description Indicates whether this is the default content type */
      default?: boolean | null
      /**
       * Format: int32
       * @description Specifies the position in which the content type appears in the selection UI.
       */
      position?: number | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.longRunningOperation': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description The start time of the operation. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description The time of the last action in the operation. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      lastActionDateTime?: string | null
      /** @description URI of the resource that the operation is performed on. */
      resourceLocation?: string | null
      status?: components['schemas']['microsoft.graph.longRunningOperationStatus']
      /** @description Details about the status of the operation. */
      statusDetail?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** publicError */
    'microsoft.graph.publicError': {
      /** @description Represents the error code. */
      code?: string | null
      /** @description Details of the error. */
      details?: components['schemas']['microsoft.graph.publicErrorDetail'][]
      innerError?: components['schemas']['microsoft.graph.publicInnerError']
      /** @description A non-localized message for the developer. */
      message?: string | null
      /** @description The target of the error. */
      target?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** siteCollection */
    'microsoft.graph.siteCollection': {
      archivalDetails?: components['schemas']['microsoft.graph.siteArchivalDetails']
      /** @description The geographic region code for where this site collection resides. Only present for multi-geo tenants. Read-only. */
      dataLocationCode?: string | null
      /** @description The hostname for the site collection. Read-only. */
      hostname?: string | null
      root?: components['schemas']['microsoft.graph.root']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.baseSitePage': components['schemas']['microsoft.graph.baseItem'] & {
      pageLayout?: components['schemas']['microsoft.graph.pageLayoutType']
      publishingState?: components['schemas']['microsoft.graph.publicationFacet']
      /** @description Title of the sitePage. */
      title?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.termStore.store': components['schemas']['microsoft.graph.entity'] & {
      /** @description Default language of the term store. */
      defaultLanguageTag?: string
      /** @description List of languages for the term store. */
      languageTags?: string[]
      /** @description Collection of all groups available in the term store. */
      groups?: components['schemas']['microsoft.graph.termStore.group'][]
      /** @description Collection of all sets available in the term store. This relationship can only be used to load a specific term set. */
      sets?: components['schemas']['microsoft.graph.termStore.set'][]
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of drive */
    'microsoft.graph.driveCollectionResponse': {
      value?: components['schemas']['microsoft.graph.drive'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.ODataErrors.ODataError': {
      error: components['schemas']['microsoft.graph.ODataErrors.MainError']
      [key: string]: Record<string, never>
    }
    /** Collection of driveItem */
    'microsoft.graph.driveItemCollectionResponse': {
      value?: components['schemas']['microsoft.graph.driveItem'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Format: int32 */
    ODataCountResponse: number
    /** Collection of microsoft.graph.serviceProvisioningError */
    'microsoft.graph.serviceProvisioningErrorCollectionResponse': {
      value?: components['schemas']['microsoft.graph.serviceProvisioningError'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of itemActivityStat */
    'microsoft.graph.itemActivityStatCollectionResponse': {
      value?: components['schemas']['microsoft.graph.itemActivityStat'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of itemActivity */
    'microsoft.graph.itemActivityCollectionResponse': {
      value?: components['schemas']['microsoft.graph.itemActivity'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of documentSetVersion */
    'microsoft.graph.documentSetVersionCollectionResponse': {
      value?: components['schemas']['microsoft.graph.documentSetVersion'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of listItemVersion */
    'microsoft.graph.listItemVersionCollectionResponse': {
      value?: components['schemas']['microsoft.graph.listItemVersion'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of permission */
    'microsoft.graph.permissionCollectionResponse': {
      value?: components['schemas']['microsoft.graph.permission'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of subscription */
    'microsoft.graph.subscriptionCollectionResponse': {
      value?: components['schemas']['microsoft.graph.subscription'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of thumbnailSet */
    'microsoft.graph.thumbnailSetCollectionResponse': {
      value?: components['schemas']['microsoft.graph.thumbnailSet'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of driveItemVersion */
    'microsoft.graph.driveItemVersionCollectionResponse': {
      value?: components['schemas']['microsoft.graph.driveItemVersion'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of columnDefinition */
    'microsoft.graph.columnDefinitionCollectionResponse': {
      value?: components['schemas']['microsoft.graph.columnDefinition'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of contentType */
    'microsoft.graph.contentTypeCollectionResponse': {
      value?: components['schemas']['microsoft.graph.contentType'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of columnLink */
    'microsoft.graph.columnLinkCollectionResponse': {
      value?: components['schemas']['microsoft.graph.columnLink'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of listItem */
    'microsoft.graph.listItemCollectionResponse': {
      value?: components['schemas']['microsoft.graph.listItem'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of richLongRunningOperation */
    'microsoft.graph.richLongRunningOperationCollectionResponse': {
      value?: components['schemas']['microsoft.graph.richLongRunningOperation'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** Collection of sharedDriveItem */
    'microsoft.graph.sharedDriveItemCollectionResponse': {
      value?: components['schemas']['microsoft.graph.sharedDriveItem'][]
      '@odata.nextLink'?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** identity */
    'microsoft.graph.identity': {
      /** @description The display name of the identity.For drive items, the display name might not always be available or up to date. For example, if a user changes their display name the API might show the new value in a future response, but the items associated with the user don't show up as changed when using delta. */
      displayName?: string | null
      /** @description Unique identifier for the identity or actor. For example, in the access reviews decisions API, this property might record the id of the principal, that is, the group, user, or application that's subject to review. */
      id?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** storagePlanInformation */
    'microsoft.graph.storagePlanInformation': {
      /** @description Indicates whether there are higher storage quota plans available. Read-only. */
      upgradeAvailable?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** album */
    'microsoft.graph.album': {
      /** @description Unique identifier of the driveItem that is the cover of the album. */
      coverImageItemId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** hashes */
    'microsoft.graph.hashes': {
      /** @description The CRC32 value of the file in little endian (if available). Read-only. */
      crc32Hash?: string | null
      /** @description A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only. */
      quickXorHash?: string | null
      /** @description SHA1 hash for the contents of the file (if available). Read-only. */
      sha1Hash?: string | null
      /** @description SHA256 hash for the contents of the file (if available). Read-only. */
      sha256Hash?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** folderView */
    'microsoft.graph.folderView': {
      /** @description The method by which the folder should be sorted. */
      sortBy?: string | null
      /** @description If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending. */
      sortOrder?: string | null
      /** @description The type of view that should be used to represent the folder. */
      viewType?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** pendingContentUpdate */
    'microsoft.graph.pendingContentUpdate': {
      /**
       * Format: date-time
       * @description Date and time the pending binary operation was queued in UTC time. Read-only.
       */
      queuedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookApplication': components['schemas']['microsoft.graph.entity'] & {
      /** @description Returns the calculation mode used in the workbook. Possible values are: Automatic, AutomaticExceptTables, Manual. */
      calculationMode?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookComment': components['schemas']['microsoft.graph.entity'] & {
      /** @description The content of the comment. */
      content?: string | null
      /** @description The content type of the comment. */
      contentType?: string
      /** @description The list of replies to the comment. Read-only. Nullable. */
      replies?: components['schemas']['microsoft.graph.workbookCommentReply'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookFunctions': components['schemas']['microsoft.graph.entity'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.workbookNamedItem': components['schemas']['microsoft.graph.entity'] & {
      /** @description The comment associated with this name. */
      comment?: string | null
      /** @description The name of the object. Read-only. */
      name?: string | null
      /** @description Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only. */
      scope?: string
      /** @description The type of reference is associated with the name. Possible values are: String, Integer, Double, Boolean, Range. Read-only. */
      type?: string | null
      value?: components['schemas']['microsoft.graph.Json']
      /** @description Indicates whether the object is visible. */
      visible?: boolean
      worksheet?: components['schemas']['microsoft.graph.workbookWorksheet']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookOperation': components['schemas']['microsoft.graph.entity'] & {
      error?: components['schemas']['microsoft.graph.workbookOperationError']
      /** @description The resource URI for the result. */
      resourceLocation?: string | null
      status?: components['schemas']['microsoft.graph.workbookOperationStatus']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookTable': components['schemas']['microsoft.graph.entity'] & {
      /** @description Indicates whether the first column contains special formatting. */
      highlightFirstColumn?: boolean
      /** @description Indicates whether the last column contains special formatting. */
      highlightLastColumn?: boolean
      /** @description A legacy identifier used in older Excel clients. The value of the identifier remains the same even when the table is renamed. This property should be interpreted as an opaque string value and shouldn't be parsed to any other type. Read-only. */
      legacyId?: string | null
      /** @description The name of the table. */
      name?: string | null
      /** @description Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier. */
      showBandedColumns?: boolean
      /** @description Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier. */
      showBandedRows?: boolean
      /** @description Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row. */
      showFilterButton?: boolean
      /** @description Indicates whether the header row is visible or not. This value can be set to show or remove the header row. */
      showHeaders?: boolean
      /** @description Indicates whether the total row is visible or not. This value can be set to show or remove the total row. */
      showTotals?: boolean
      /** @description A constant value that represents the Table style. Possible values are: TableStyleLight1 through TableStyleLight21, TableStyleMedium1 through TableStyleMedium28, TableStyleStyleDark1 through TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified. */
      style?: string | null
      /** @description The list of all the columns in the table. Read-only. */
      columns?: components['schemas']['microsoft.graph.workbookTableColumn'][]
      /** @description The list of all the rows in the table. Read-only. */
      rows?: components['schemas']['microsoft.graph.workbookTableRow'][]
      sort?: components['schemas']['microsoft.graph.workbookTableSort']
      worksheet?: components['schemas']['microsoft.graph.workbookWorksheet']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookWorksheet': components['schemas']['microsoft.graph.entity'] & {
      /** @description The display name of the worksheet. */
      name?: string | null
      /**
       * Format: int32
       * @description The zero-based position of the worksheet within the workbook.
       */
      position?: number
      /** @description The visibility of the worksheet. The possible values are: Visible, Hidden, VeryHidden. */
      visibility?: string
      /** @description The list of charts that are part of the worksheet. Read-only. */
      charts?: components['schemas']['microsoft.graph.workbookChart'][]
      /** @description The list of names that are associated with the worksheet. Read-only. */
      names?: components['schemas']['microsoft.graph.workbookNamedItem'][]
      /** @description The list of piot tables that are part of the worksheet. */
      pivotTables?: components['schemas']['microsoft.graph.workbookPivotTable'][]
      protection?: components['schemas']['microsoft.graph.workbookWorksheetProtection']
      /** @description The list of tables that are part of the worksheet. Read-only. */
      tables?: components['schemas']['microsoft.graph.workbookTable'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.printerShare': components['schemas']['microsoft.graph.printerBase'] & {
      /** @description If true, all users and groups will be granted access to this printer share. This supersedes the allow lists defined by the allowedUsers and allowedGroups navigation properties. */
      allowAllUsers?: boolean
      /**
       * Format: date-time
       * @description The DateTimeOffset when the printer share was created. Read-only.
       */
      createdDateTime?: string
      viewPoint?: components['schemas']['microsoft.graph.printerShareViewpoint']
      /** @description The groups whose users have access to print using the printer. */
      allowedGroups?: components['schemas']['microsoft.graph.group'][]
      /** @description The users who have access to print using the printer. */
      allowedUsers?: components['schemas']['microsoft.graph.user'][]
      printer?: components['schemas']['microsoft.graph.printer']
      [key: string]: Record<string, never> | undefined
    }
    /** Json */
    'microsoft.graph.Json': {
      [key: string]: Record<string, never>
    }
    /**
     * status
     * @enum {string}
     */
    'microsoft.graph.status':
      | 'active'
      | 'updated'
      | 'deleted'
      | 'ignored'
      | 'unknownFutureValue'
    /** visualInfo */
    'microsoft.graph.visualInfo': {
      attribution?: components['schemas']['microsoft.graph.imageInfo']
      /** @description Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color */
      backgroundColor?: string | null
      content?: components['schemas']['microsoft.graph.Json']
      /** @description Optional. Longer text description of the user's unique activity (example: document name, first sentence, and/or metadata) */
      description?: string | null
      /** @description Required. Short text description of the user's unique activity (for example, document name in cases where an activity refers to document creation) */
      displayText?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.activityHistoryItem': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: int32
       * @description Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.
       */
      activeDurationSeconds?: number | null
      /**
       * Format: date-time
       * @description Set by the server. DateTime in UTC when the object was created on the server.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description Optional. UTC DateTime when the activityHistoryItem will undergo hard-delete. Can be set by the client.
       */
      expirationDateTime?: string | null
      /**
       * Format: date-time
       * @description Optional. UTC DateTime when the activityHistoryItem (activity session) was last understood as active or finished - if null, activityHistoryItem status should be Ongoing.
       */
      lastActiveDateTime?: string | null
      /**
       * Format: date-time
       * @description Set by the server. DateTime in UTC when the object was modified on the server.
       */
      lastModifiedDateTime?: string | null
      /**
       * Format: date-time
       * @description Required. UTC DateTime when the activityHistoryItem (activity session) was started. Required for timeline history.
       */
      startedDateTime?: string
      status?: components['schemas']['microsoft.graph.status']
      /** @description Optional. The timezone in which the user's device used to generate the activity was located at activity creation time. Values supplied as Olson IDs in order to support cross-platform representation. */
      userTimezone?: string | null
      activity?: components['schemas']['microsoft.graph.userActivity']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * agreementAcceptanceState
     * @enum {string}
     */
    'microsoft.graph.agreementAcceptanceState':
      | 'accepted'
      | 'declined'
      | 'unknownFutureValue'
    'microsoft.graph.emailAuthenticationMethod': components['schemas']['microsoft.graph.authenticationMethod'] & {
      /** @description The email address registered to this user. */
      emailAddress?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.fido2AuthenticationMethod': components['schemas']['microsoft.graph.authenticationMethod'] & {
      /** @description Authenticator Attestation GUID, an identifier that indicates the type (e.g. make and model) of the authenticator. */
      aaGuid?: string | null
      /** @description The attestation certificate(s) attached to this security key. */
      attestationCertificates?: (string | null)[]
      attestationLevel?: components['schemas']['microsoft.graph.attestationLevel']
      /**
       * Format: date-time
       * @description The timestamp when this key was registered to the user.
       */
      createdDateTime?: string | null
      /** @description The display name of the key as given by the user. */
      displayName?: string | null
      /** @description The manufacturer-assigned model of the FIDO2 security key. */
      model?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.authenticationMethod': components['schemas']['microsoft.graph.entity'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.microsoftAuthenticatorAuthenticationMethod': components['schemas']['microsoft.graph.authenticationMethod'] & {
      /**
       * Format: date-time
       * @description The date and time that this app was registered. This property is null if the device isn't registered for passwordless Phone Sign-In.
       */
      createdDateTime?: string | null
      /** @description Tags containing app metadata. */
      deviceTag?: string | null
      /** @description The name of the device on which this app is registered. */
      displayName?: string | null
      /** @description Numerical version of this instance of the Authenticator app. */
      phoneAppVersion?: string | null
      device?: components['schemas']['microsoft.graph.device']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.passwordAuthenticationMethod': components['schemas']['microsoft.graph.authenticationMethod'] & {
      /**
       * Format: date-time
       * @description The date and time when this password was last updated. This property is currently not populated. Read-only. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      createdDateTime?: string | null
      /** @description For security, the password is always returned as null from a LIST or GET operation. */
      password?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.phoneAuthenticationMethod': components['schemas']['microsoft.graph.authenticationMethod'] & {
      /** @description The phone number to text or call for authentication. Phone numbers use the format +{country code} {number}x{extension}, with extension optional. For example, +1 5555551234 or +1 5555551234x123 are valid. Numbers are rejected when creating or updating if they don't match the required format. */
      phoneNumber?: string | null
      phoneType?: components['schemas']['microsoft.graph.authenticationPhoneType']
      smsSignInState?: components['schemas']['microsoft.graph.authenticationMethodSignInState']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.softwareOathAuthenticationMethod': components['schemas']['microsoft.graph.authenticationMethod'] & {
      /** @description The secret key of the method. Always returns null. */
      secretKey?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.temporaryAccessPassAuthenticationMethod': components['schemas']['microsoft.graph.authenticationMethod'] & {
      /**
       * Format: date-time
       * @description The date and time when the Temporary Access Pass was created.
       */
      createdDateTime?: string | null
      /** @description The state of the authentication method that indicates whether it's currently usable by the user. */
      isUsable?: boolean | null
      /** @description Determines whether the pass is limited to a one-time use. If true, the pass can be used once; if false, the pass can be used multiple times within the Temporary Access Pass lifetime. */
      isUsableOnce?: boolean | null
      /**
       * Format: int32
       * @description The lifetime of the Temporary Access Pass in minutes starting at startDateTime. Must be between 10 and 43200 inclusive (equivalent to 30 days).
       */
      lifetimeInMinutes?: number | null
      /** @description Details about the usability state (isUsable). Reasons can include: EnabledByPolicy, DisabledByPolicy, Expired, NotYetValid, OneTimeUsed. */
      methodUsabilityReason?: string | null
      /**
       * Format: date-time
       * @description The date and time when the Temporary Access Pass becomes available to use and when isUsable is true is enforced.
       */
      startDateTime?: string | null
      /** @description The Temporary Access Pass used to authenticate. Returned only on creation of a new temporaryAccessPassAuthenticationMethod object; Hidden in subsequent read operations and returned as null with GET. */
      temporaryAccessPass?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.windowsHelloForBusinessAuthenticationMethod': components['schemas']['microsoft.graph.authenticationMethod'] & {
      /**
       * Format: date-time
       * @description The date and time that this Windows Hello for Business key was registered.
       */
      createdDateTime?: string | null
      /** @description The name of the device on which Windows Hello for Business is registered */
      displayName?: string | null
      keyStrength?: components['schemas']['microsoft.graph.authenticationMethodKeyStrength']
      device?: components['schemas']['microsoft.graph.device']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * onlineMeetingProviderType
     * @enum {string}
     */
    'microsoft.graph.onlineMeetingProviderType':
      | 'unknown'
      | 'skypeForBusiness'
      | 'skypeForConsumer'
      | 'teamsForBusiness'
    /**
     * calendarColor
     * @enum {string}
     */
    'microsoft.graph.calendarColor':
      | 'auto'
      | 'lightBlue'
      | 'lightGreen'
      | 'lightOrange'
      | 'lightGray'
      | 'lightYellow'
      | 'lightTeal'
      | 'lightPink'
      | 'lightBrown'
      | 'lightRed'
      | 'maxColor'
    /** emailAddress */
    'microsoft.graph.emailAddress': {
      /** @description The email address of the person or entity. */
      address?: string | null
      /** @description The display name of the person or entity. */
      name?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.calendarPermission': components['schemas']['microsoft.graph.entity'] & {
      /** @description List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom. */
      allowedRoles?: components['schemas']['microsoft.graph.calendarRoleType'][]
      emailAddress?: components['schemas']['microsoft.graph.emailAddress']
      /** @description True if the user in context (recipient or delegate) is inside the same organization as the calendar owner. */
      isInsideOrganization?: boolean | null
      /** @description True if the user can be removed from the list of recipients or delegates for the specified calendar, false otherwise. The 'My organization' user determines the permissions other people within your organization have to the given calendar. You can't remove 'My organization' as a share recipient to a calendar. */
      isRemovable?: boolean | null
      role?: components['schemas']['microsoft.graph.calendarRoleType']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.multiValueLegacyExtendedProperty': components['schemas']['microsoft.graph.entity'] & {
      /** @description A collection of property values. */
      value?: (string | null)[]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.singleValueLegacyExtendedProperty': components['schemas']['microsoft.graph.entity'] & {
      /** @description A property value. */
      value?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.outlookItem': components['schemas']['microsoft.graph.entity'] & {
      /** @description The categories associated with the item */
      categories?: (string | null)[]
      /** @description Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only. */
      changeKey?: string | null
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      lastModifiedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.attendee': components['schemas']['microsoft.graph.attendeeBase'] & {
      proposedNewTime?: components['schemas']['microsoft.graph.timeSlot']
      status?: components['schemas']['microsoft.graph.responseStatus']
      [key: string]: Record<string, never> | undefined
    }
    /** itemBody */
    'microsoft.graph.itemBody': {
      /** @description The content of the item. */
      content?: string | null
      contentType?: components['schemas']['microsoft.graph.bodyType']
      [key: string]: Record<string, never> | undefined
    }
    /** dateTimeTimeZone */
    'microsoft.graph.dateTimeTimeZone': {
      /** @description A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000). */
      dateTime?: string
      /** @description Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values. */
      timeZone?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * importance
     * @enum {string}
     */
    'microsoft.graph.importance': 'low' | 'normal' | 'high'
    /** location */
    'microsoft.graph.location': {
      address?: components['schemas']['microsoft.graph.physicalAddress']
      coordinates?: components['schemas']['microsoft.graph.outlookGeoCoordinates']
      /** @description The name associated with the location. */
      displayName?: string | null
      /** @description Optional email address of the location. */
      locationEmailAddress?: string | null
      locationType?: components['schemas']['microsoft.graph.locationType']
      /** @description Optional URI representing the location. */
      locationUri?: string | null
      /** @description For internal use only. */
      uniqueId?: string | null
      uniqueIdType?: components['schemas']['microsoft.graph.locationUniqueIdType']
      [key: string]: Record<string, never> | undefined
    }
    /** onlineMeetingInfo */
    'microsoft.graph.onlineMeetingInfo': {
      /** @description The ID of the conference. */
      conferenceId?: string | null
      /** @description The external link that launches the online meeting. This is a URL that clients launch into a browser and will redirect the user to join the meeting. */
      joinUrl?: string | null
      /** @description All of the phone numbers associated with this conference. */
      phones?: components['schemas']['microsoft.graph.phone'][]
      /** @description The preformatted quick dial for this call. */
      quickDial?: string | null
      /** @description The toll free numbers that can be used to join the conference. */
      tollFreeNumbers?: (string | null)[]
      /** @description The toll number that can be used to join the conference. */
      tollNumber?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** recipient */
    'microsoft.graph.recipient': {
      emailAddress?: components['schemas']['microsoft.graph.emailAddress']
      [key: string]: Record<string, never> | undefined
    }
    /** patternedRecurrence */
    'microsoft.graph.patternedRecurrence': {
      pattern?: components['schemas']['microsoft.graph.recurrencePattern']
      range?: components['schemas']['microsoft.graph.recurrenceRange']
      [key: string]: Record<string, never> | undefined
    }
    /** responseStatus */
    'microsoft.graph.responseStatus': {
      response?: components['schemas']['microsoft.graph.responseType']
      /**
       * Format: date-time
       * @description The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      time?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * sensitivity
     * @enum {string}
     */
    'microsoft.graph.sensitivity':
      | 'normal'
      | 'personal'
      | 'private'
      | 'confidential'
    /**
     * freeBusyStatus
     * @enum {string}
     */
    'microsoft.graph.freeBusyStatus':
      | 'unknown'
      | 'free'
      | 'tentative'
      | 'busy'
      | 'oof'
      | 'workingElsewhere'
    /**
     * eventType
     * @enum {string}
     */
    'microsoft.graph.eventType':
      | 'singleInstance'
      | 'occurrence'
      | 'exception'
      | 'seriesMaster'
    'microsoft.graph.attachment': components['schemas']['microsoft.graph.entity'] & {
      /** @description The MIME type. */
      contentType?: string | null
      /** @description true if the attachment is an inline attachment; otherwise, false. */
      isInline?: boolean
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      lastModifiedDateTime?: string | null
      /** @description The attachment's file name. */
      name?: string | null
      /**
       * Format: int32
       * @description The length of the attachment in bytes.
       */
      size?: number
      [key: string]: Record<string, never> | undefined
    }
    /**
     * chatType
     * @enum {string}
     */
    'microsoft.graph.chatType':
      | 'oneOnOne'
      | 'group'
      | 'meeting'
      | 'unknownFutureValue'
    /** teamworkOnlineMeetingInfo */
    'microsoft.graph.teamworkOnlineMeetingInfo': {
      /** @description The identifier of the calendar event associated with the meeting. */
      calendarEventId?: string | null
      /** @description The URL that users click to join or uniquely identify the meeting. */
      joinWebUrl?: string | null
      organizer?: components['schemas']['microsoft.graph.teamworkUserIdentity']
      [key: string]: Record<string, never> | undefined
    }
    /** chatViewpoint */
    'microsoft.graph.chatViewpoint': {
      /** @description Indicates whether the chat is hidden for the current user. */
      isHidden?: boolean | null
      /**
       * Format: date-time
       * @description Represents the dateTime up until which the current user has read chatMessages in a specific chat.
       */
      lastMessageReadDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.teamsAppInstallation': components['schemas']['microsoft.graph.entity'] & {
      consentedPermissionSet?: components['schemas']['microsoft.graph.teamsAppPermissionSet']
      teamsApp?: components['schemas']['microsoft.graph.teamsApp']
      teamsAppDefinition?: components['schemas']['microsoft.graph.teamsAppDefinition']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.chatMessageInfo': components['schemas']['microsoft.graph.entity'] & {
      body?: components['schemas']['microsoft.graph.itemBody']
      /**
       * Format: date-time
       * @description Date time object representing the time at which message was created.
       */
      createdDateTime?: string | null
      eventDetail?: components['schemas']['microsoft.graph.eventMessageDetail']
      from?: components['schemas']['microsoft.graph.chatMessageFromIdentitySet']
      /** @description If set to true, the original message has been deleted. */
      isDeleted?: boolean | null
      messageType?: components['schemas']['microsoft.graph.chatMessageType']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.conversationMember': components['schemas']['microsoft.graph.entity'] & {
      /** @description The display name of the user. */
      displayName?: string | null
      /** @description The roles for that user. This property contains additional qualifiers only when relevant - for example, if the member has owner privileges, the roles property contains owner as one of the values. Similarly, if the member is an in-tenant guest, the roles property contains guest as one of the values. A basic member should not have any values specified in the roles property. An Out-of-tenant external member is assigned the owner role. */
      roles?: (string | null)[]
      /**
       * Format: date-time
       * @description The timestamp denoting how far back a conversation's history is shared with the conversation member. This property is settable only for members of a chat.
       */
      visibleHistoryStartDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.chatMessage': components['schemas']['microsoft.graph.entity'] & {
      /** @description References to attached objects like files, tabs, meetings etc. */
      attachments?: components['schemas']['microsoft.graph.chatMessageAttachment'][]
      body?: components['schemas']['microsoft.graph.itemBody']
      channelIdentity?: components['schemas']['microsoft.graph.channelIdentity']
      /** @description If the message was sent in a chat, represents the identity of the chat. */
      chatId?: string | null
      /**
       * Format: date-time
       * @description Timestamp of when the chat message was created.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description Read only. Timestamp at which the chat message was deleted, or null if not deleted.
       */
      deletedDateTime?: string | null
      /** @description Read-only. Version number of the chat message. */
      etag?: string | null
      eventDetail?: components['schemas']['microsoft.graph.eventMessageDetail']
      from?: components['schemas']['microsoft.graph.chatMessageFromIdentitySet']
      importance?: components['schemas']['microsoft.graph.chatMessageImportance']
      /**
       * Format: date-time
       * @description Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits are made the value is null.
       */
      lastEditedDateTime?: string | null
      /**
       * Format: date-time
       * @description Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added or removed.
       */
      lastModifiedDateTime?: string | null
      /** @description Locale of the chat message set by the client. Always set to en-us. */
      locale?: string
      /** @description List of entities mentioned in the chat message. Supported entities are: user, bot, team, and channel. */
      mentions?: components['schemas']['microsoft.graph.chatMessageMention'][]
      /** @description List of activity history of a message item, including modification time and actions, such as reactionAdded, reactionRemoved, or reaction changes, on the message. */
      messageHistory?: components['schemas']['microsoft.graph.chatMessageHistoryItem'][]
      messageType?: components['schemas']['microsoft.graph.chatMessageType']
      policyViolation?: components['schemas']['microsoft.graph.chatMessagePolicyViolation']
      /** @description Reactions for this chat message (for example, Like). */
      reactions?: components['schemas']['microsoft.graph.chatMessageReaction'][]
      /** @description Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels, not chats.) */
      replyToId?: string | null
      /** @description The subject of the chat message, in plaintext. */
      subject?: string | null
      /** @description Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only applies to channel chat messages, not chat messages in a chat. */
      summary?: string | null
      /** @description Read-only. Link to the message in Microsoft Teams. */
      webUrl?: string | null
      /** @description Content in a message hosted by Microsoft Teams - for example, images or code snippets. */
      hostedContents?: components['schemas']['microsoft.graph.chatMessageHostedContent'][]
      /** @description Replies for a specified message. Supports $expand for channel messages. */
      replies?: components['schemas']['microsoft.graph.chatMessage'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.pinnedChatMessageInfo': components['schemas']['microsoft.graph.entity'] & {
      message?: components['schemas']['microsoft.graph.chatMessage']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.teamsTab': components['schemas']['microsoft.graph.entity'] & {
      configuration?: components['schemas']['microsoft.graph.teamsTabConfiguration']
      /** @description Name of the tab. */
      displayName?: string | null
      /** @description Deep link URL of the tab instance. Read only. */
      webUrl?: string | null
      teamsApp?: components['schemas']['microsoft.graph.teamsApp']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.cloudClipboardItem': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description Set by the server. DateTime in UTC when the object was created on the server.
       */
      createdDateTime?: string
      /**
       * Format: date-time
       * @description Set by the server. DateTime in UTC when the object expires and after that the object is no longer available. The default and also maximum TTL is 12 hours after the creation, but it might change for performance optimization.
       */
      expirationDateTime?: string
      /**
       * Format: date-time
       * @description Set by the server if not provided in the client's request. DateTime in UTC when the object was modified by the client.
       */
      lastModifiedDateTime?: string | null
      /** @description A cloudClipboardItem can have multiple cloudClipboardItemPayload objects in the payloads. A window can place more than one clipboard object on the clipboard. Each one represents the same information in a different clipboard format. */
      payloads?: components['schemas']['microsoft.graph.cloudClipboardItemPayload'][]
      [key: string]: Record<string, never> | undefined
    }
    /** physicalAddress */
    'microsoft.graph.physicalAddress': {
      /** @description The city. */
      city?: string | null
      /** @description The country or region. It's a free-format string value, for example, 'United States'. */
      countryOrRegion?: string | null
      /** @description The postal code. */
      postalCode?: string | null
      /** @description The state. */
      state?: string | null
      /** @description The street. */
      street?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.learningCourseActivity': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description Date and time when the assignment was completed. Optional.
       */
      completedDateTime?: string | null
      /**
       * Format: int32
       * @description The percentage completion value of the course activity. Optional.
       */
      completionPercentage?: number | null
      externalcourseActivityId?: string | null
      /** @description The user ID of the learner to whom the activity is assigned. Required. */
      learnerUserId?: string
      /** @description The ID of the learning content created in Viva Learning. Required. */
      learningContentId?: string
      /** @description The registration ID of the provider. Required. */
      learningProviderId?: string | null
      status?: components['schemas']['microsoft.graph.courseStatus']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.inferenceClassificationOverride': components['schemas']['microsoft.graph.entity'] & {
      classifyAs?: components['schemas']['microsoft.graph.inferenceClassificationType']
      senderEmailAddress?: components['schemas']['microsoft.graph.emailAddress']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.officeGraphInsights': components['schemas']['microsoft.graph.entity'] & {
      /** @description Calculated relationship that identifies documents shared with or by the user. This includes URLs, file attachments, and reference attachments to OneDrive for work or school and SharePoint files found in Outlook messages and meetings. This also includes URLs and reference attachments to Teams conversations. Ordered by recency of share. */
      shared?: components['schemas']['microsoft.graph.sharedInsight'][]
      /** @description Calculated relationship that identifies documents trending around a user. Trending documents are calculated based on activity of the user's closest network of people and include files stored in OneDrive for work or school and SharePoint. Trending insights help the user to discover potentially useful content that the user has access to, but has never viewed before. */
      trending?: components['schemas']['microsoft.graph.trending'][]
      /** @description Calculated relationship that identifies the latest documents viewed or modified by a user, including OneDrive for work or school and SharePoint documents, ranked by recency of use. */
      used?: components['schemas']['microsoft.graph.usedInsight'][]
      [key: string]: Record<string, never> | undefined
    }
    /** teamFunSettings */
    'microsoft.graph.teamFunSettings': {
      /** @description If set to true, enables users to include custom memes. */
      allowCustomMemes?: boolean | null
      /** @description If set to true, enables Giphy use. */
      allowGiphy?: boolean | null
      /** @description If set to true, enables users to include stickers and memes. */
      allowStickersAndMemes?: boolean | null
      giphyContentRating?: components['schemas']['microsoft.graph.giphyRatingType']
      [key: string]: Record<string, never> | undefined
    }
    /** teamGuestSettings */
    'microsoft.graph.teamGuestSettings': {
      /** @description If set to true, guests can add and update channels. */
      allowCreateUpdateChannels?: boolean | null
      /** @description If set to true, guests can delete channels. */
      allowDeleteChannels?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** teamMemberSettings */
    'microsoft.graph.teamMemberSettings': {
      /** @description If set to true, members can add and remove apps. */
      allowAddRemoveApps?: boolean | null
      /** @description If set to true, members can add and update private channels. */
      allowCreatePrivateChannels?: boolean | null
      /** @description If set to true, members can add and update channels. */
      allowCreateUpdateChannels?: boolean | null
      /** @description If set to true, members can add, update, and remove connectors. */
      allowCreateUpdateRemoveConnectors?: boolean | null
      /** @description If set to true, members can add, update, and remove tabs. */
      allowCreateUpdateRemoveTabs?: boolean | null
      /** @description If set to true, members can delete channels. */
      allowDeleteChannels?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** teamMessagingSettings */
    'microsoft.graph.teamMessagingSettings': {
      /** @description If set to true, @channel mentions are allowed. */
      allowChannelMentions?: boolean | null
      /** @description If set to true, owners can delete any message. */
      allowOwnerDeleteMessages?: boolean | null
      /** @description If set to true, @team mentions are allowed. */
      allowTeamMentions?: boolean | null
      /** @description If set to true, users can delete their messages. */
      allowUserDeleteMessages?: boolean | null
      /** @description If set to true, users can edit their messages. */
      allowUserEditMessages?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * teamSpecialization
     * @enum {string}
     */
    'microsoft.graph.teamSpecialization':
      | 'none'
      | 'educationStandard'
      | 'educationClass'
      | 'educationProfessionalLearningCommunity'
      | 'educationStaff'
      | 'healthcareStandard'
      | 'healthcareCareCoordination'
      | 'unknownFutureValue'
    /** teamSummary */
    'microsoft.graph.teamSummary': {
      /**
       * Format: int32
       * @description Count of guests in a team.
       */
      guestsCount?: number | null
      /**
       * Format: int32
       * @description Count of members in a team.
       */
      membersCount?: number | null
      /**
       * Format: int32
       * @description Count of owners in a team.
       */
      ownersCount?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * teamVisibilityType
     * @enum {string}
     */
    'microsoft.graph.teamVisibilityType':
      | 'private'
      | 'public'
      | 'hiddenMembership'
      | 'unknownFutureValue'
    'microsoft.graph.channel': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description Read only. Timestamp at which the channel was created.
       */
      createdDateTime?: string | null
      /** @description Optional textual description for the channel. */
      description?: string | null
      /** @description Channel name as it will appear to the user in Microsoft Teams. The maximum length is 50 characters. */
      displayName?: string
      /** @description The email address for sending messages to the channel. Read-only. */
      email?: string | null
      /** @description Indicates whether the channel is archived. Read-only. */
      isArchived?: boolean | null
      /** @description Indicates whether the channel should be marked as recommended for all members of the team to show in their channel list. Note: All recommended channels automatically show in the channels list for education and frontline worker users. The property can only be set programmatically via the Create team method. The default value is false. */
      isFavoriteByDefault?: boolean | null
      membershipType?: components['schemas']['microsoft.graph.channelMembershipType']
      summary?: components['schemas']['microsoft.graph.channelSummary']
      /** @description The ID of the Microsoft Entra tenant. */
      tenantId?: string | null
      /** @description A hyperlink that will go to the channel in Microsoft Teams. This is the URL that you get when you right-click a channel in Microsoft Teams and select Get link to channel. This URL should be treated as an opaque blob, and not parsed. Read-only. */
      webUrl?: string | null
      filesFolder?: components['schemas']['microsoft.graph.driveItem']
      /** @description A collection of membership records associated with the channel. */
      members?: components['schemas']['microsoft.graph.conversationMember'][]
      /** @description A collection of all the messages in the channel. A navigation property. Nullable. */
      messages?: components['schemas']['microsoft.graph.chatMessage'][]
      /** @description A collection of teams with which a channel is shared. */
      sharedWithTeams?: components['schemas']['microsoft.graph.sharedWithChannelTeamInfo'][]
      /** @description A collection of all the tabs in the channel. A navigation property. */
      tabs?: components['schemas']['microsoft.graph.teamsTab'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.group': components['schemas']['microsoft.graph.directoryObject'] & {
      /** @description Indicates if people external to the organization can send messages to the group. The default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}). */
      allowExternalSenders?: boolean | null
      /** @description The list of sensitivity label pairs (label ID, label name) associated with a Microsoft 365 group. Returned only on $select. This property can be updated only in delegated scenarios where the caller requires both the Microsoft Graph permission and a supported administrator role. */
      assignedLabels?: components['schemas']['microsoft.graph.assignedLabel'][]
      /** @description The licenses that are assigned to the group. Returned only on $select. Supports $filter (eq).Read-only. */
      assignedLicenses?: components['schemas']['microsoft.graph.assignedLicense'][]
      /** @description Indicates if new members added to the group are autosubscribed to receive email notifications. You can set this property in a PATCH request for the group; don't set it in the initial POST request that creates the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}). */
      autoSubscribeNewMembers?: boolean | null
      /** @description Describes a classification for the group (such as low, medium, or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith). */
      classification?: string | null
      /**
       * Format: date-time
       * @description Timestamp of when the group was created. The value can't be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on January 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only.
       */
      createdDateTime?: string | null
      /** @description An optional description for the group. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith) and $search. */
      description?: string | null
      /** @description The display name for the group. This property is required when a group is created and can't be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderby. */
      displayName?: string | null
      /**
       * Format: date-time
       * @description Timestamp of when the group is set to expire. It's null for security groups, but for Microsoft 365 groups, it represents when the group is set to expire as defined in the groupLifecyclePolicy. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on January 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
       */
      expirationDateTime?: string | null
      /** @description Specifies the group type and its membership. If the collection contains Unified, the group is a Microsoft 365 group; otherwise, it's either a security group or a distribution group. For details, see groups overview.If the collection includes DynamicMembership, the group has dynamic membership; otherwise, membership is static. Returned by default. Supports $filter (eq, not). */
      groupTypes?: string[]
      /** @description Indicates whether there are members in this group that have license errors from its group-based license assignment. This property is never returned on a GET operation. You can use it as a $filter argument to get groups that have members with license errors (that is, filter for this property being true). See an example. Supports $filter (eq). */
      hasMembersWithLicenseErrors?: boolean | null
      /** @description True if the group isn't displayed in certain parts of the Outlook UI: the Address Book, address lists for selecting message recipients, and the Browse Groups dialog for searching groups; otherwise, false. The default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}). */
      hideFromAddressLists?: boolean | null
      /** @description True if the group isn't displayed in Outlook clients, such as Outlook for Windows and Outlook on the web; otherwise, false. The default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}). */
      hideFromOutlookClients?: boolean | null
      /** @description When a group is associated with a team, this property determines whether the team is in read-only mode.To read this property, use the /group/{groupId}/team endpoint or the Get team API. To update this property, use the archiveTeam and unarchiveTeam APIs. */
      isArchived?: boolean | null
      /** @description Indicates whether this group can be assigned to a Microsoft Entra role. Optional. This property can only be set while creating the group and is immutable. If set to true, the securityEnabled property must also be set to true, visibility must be Hidden, and the group can't be a dynamic group (that is, groupTypes can't contain DynamicMembership). Only callers with at least the Privileged Role Administrator role can set this property. The caller must also be assigned the RoleManagement.ReadWrite.Directory permission to set this property or update the membership of such groups. For more, see Using a group to manage Microsoft Entra role assignmentsUsing this feature requires a Microsoft Entra ID P1 license. Returned by default. Supports $filter (eq, ne, not). */
      isAssignableToRole?: boolean | null
      isManagementRestricted?: boolean | null
      /** @description Indicates whether the signed-in user is subscribed to receive email conversations. The default value is true. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}). */
      isSubscribedByMail?: boolean | null
      licenseProcessingState?: components['schemas']['microsoft.graph.licenseProcessingState']
      /** @description The SMTP address for the group, for example, 'serviceadmins@contoso.com'. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      mail?: string | null
      /** @description Specifies whether the group is mail-enabled. Required. Returned by default. Supports $filter (eq, ne, not). */
      mailEnabled?: boolean | null
      /** @description The mail alias for the group, unique for Microsoft 365 groups in the organization. Maximum length is 64 characters. This property can contain only characters in the ASCII character set 0 - 127 except the following characters: @ () / [] ' ; : <> , SPACE. Required. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      mailNickname?: string | null
      /** @description The rule that determines members for this group if the group is a dynamic group (groupTypes contains DynamicMembership). For more information about the syntax of the membership rule, see Membership Rules syntax. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith). */
      membershipRule?: string | null
      /** @description Indicates whether the dynamic membership processing is on or paused. Possible values are On or Paused. Returned by default. Supports $filter (eq, ne, not, in). */
      membershipRuleProcessingState?: string | null
      /** @description Contains the on-premises domain FQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers synchronizing their on-premises directory to Microsoft Entra ID via Microsoft Entra Connect.Returned by default. Read-only. */
      onPremisesDomainName?: string | null
      /**
       * Format: date-time
       * @description Indicates the last time at which the group was synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on January 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in).
       */
      onPremisesLastSyncDateTime?: string | null
      /** @description Contains the on-premises netBios name synchronized from the on-premises directory. The property is only populated for customers synchronizing their on-premises directory to Microsoft Entra ID via Microsoft Entra Connect.Returned by default. Read-only. */
      onPremisesNetBiosName?: string | null
      /** @description Errors when using Microsoft synchronization product during provisioning. Returned by default. Supports $filter (eq, not). */
      onPremisesProvisioningErrors?: components['schemas']['microsoft.graph.onPremisesProvisioningError'][]
      /** @description Contains the on-premises SAM account name synchronized from the on-premises directory. The property is only populated for customers synchronizing their on-premises directory to Microsoft Entra ID via Microsoft Entra Connect.Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith). Read-only. */
      onPremisesSamAccountName?: string | null
      /** @description Contains the on-premises security identifier (SID) for the group synchronized from on-premises to the cloud. Read-only. Returned by default. Supports $filter (eq including on null values). */
      onPremisesSecurityIdentifier?: string | null
      /** @description true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never synced from an on-premises directory (default). Returned by default. Read-only. Supports $filter (eq, ne, not, in, and eq on null values). */
      onPremisesSyncEnabled?: boolean | null
      /** @description The preferred data location for the Microsoft 365 group. By default, the group inherits the group creator's preferred data location. To set this property, the calling app must be granted the Directory.ReadWrite.All permission and the user be assigned at least one of the following Microsoft Entra roles: User Account Administrator Directory Writer  Exchange Administrator  SharePoint Administrator  For more information about this property, see OneDrive Online Multi-Geo. Nullable. Returned by default. */
      preferredDataLocation?: string | null
      /** @description The preferred language for a Microsoft 365 group. Should follow ISO 639-1 Code; for example, en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values). */
      preferredLanguage?: string | null
      /** @description Email addresses for the group that direct to the same group mailbox. For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. The any operator is required to filter expressions on multi-valued properties. Returned by default. Read-only. Not nullable. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0). */
      proxyAddresses?: string[]
      /**
       * Format: date-time
       * @description Timestamp of when the group was last renewed. This value can't be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on January 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.
       */
      renewedDateTime?: string | null
      /** @description Specifies whether the group is a security group. Required. Returned by default. Supports $filter (eq, ne, not, in). */
      securityEnabled?: boolean | null
      /** @description Security identifier of the group, used in Windows scenarios. Read-only. Returned by default. */
      securityIdentifier?: string | null
      /** @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a group object.  Supports $filter (eq, not, for isResolved and serviceInstance). */
      serviceProvisioningErrors?: components['schemas']['microsoft.graph.serviceProvisioningError'][]
      /** @description Specifies a Microsoft 365 group's color theme. Possible values are Teal, Purple, Green, Blue, Pink, Orange, or Red. Returned by default. */
      theme?: string | null
      /** @description The unique identifier that can be assigned to a group and used as an alternate key. Immutable. Read-only. */
      uniqueName?: string | null
      /**
       * Format: int32
       * @description Count of conversations that received new posts since the signed-in user last visited the group. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
       */
      unseenCount?: number | null
      /** @description Specifies the group join policy and group content visibility for groups. Possible values are: Private, Public, or HiddenMembership. HiddenMembership can be set only for Microsoft 365 groups when the groups are created. It can't be updated later. Other values of visibility can be updated after group creation. If visibility value isn't specified during group creation on Microsoft Graph, a security group is created as Private by default, and the Microsoft 365 group is Public. Groups assignable to roles are always Private. To learn more, see group visibility options. Returned by default. Nullable. */
      visibility?: string | null
      /** @description The list of users or groups allowed to create posts or calendar events in this group. If this list is nonempty, then only users or groups listed here are allowed to post. */
      acceptedSenders?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description Represents the app roles granted to a group for an application. Supports $expand. */
      appRoleAssignments?: components['schemas']['microsoft.graph.appRoleAssignment'][]
      calendar?: components['schemas']['microsoft.graph.calendar']
      /** @description The calendar view for the calendar. Read-only. */
      calendarView?: components['schemas']['microsoft.graph.event'][]
      /** @description The group's conversations. */
      conversations?: components['schemas']['microsoft.graph.conversation'][]
      createdOnBehalfOf?: components['schemas']['microsoft.graph.directoryObject']
      drive?: components['schemas']['microsoft.graph.drive']
      /** @description The group's drives. Read-only. */
      drives?: components['schemas']['microsoft.graph.drive'][]
      /** @description The group's calendar events. */
      events?: components['schemas']['microsoft.graph.event'][]
      /** @description The collection of open extensions defined for the group. Read-only. Nullable. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      /** @description The collection of lifecycle policies for this group. Read-only. Nullable. */
      groupLifecyclePolicies?: components['schemas']['microsoft.graph.groupLifecyclePolicy'][]
      /** @description Groups that this group is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand. */
      memberOf?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description The members of this group, who can be users, devices, other groups, or service principals. Supports the List members, Add member, and Remove member operations. Nullable. Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=members($select=id,userPrincipalName,displayName). */
      members?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description A list of group members with license errors from this group-based license assignment. Read-only. */
      membersWithLicenseErrors?: components['schemas']['microsoft.graph.directoryObject'][]
      onenote?: components['schemas']['microsoft.graph.onenote']
      /** @description The owners of the group who can be users or service principals. Limited to 100 owners. Nullable. If this property isn't specified when creating a Microsoft 365 group the calling user (admin or non-admin) is automatically assigned as the group owner. A non-admin user can't explicitly add themselves to this collection when they're creating the group. For more information, see the related known issue. For security groups, the admin user isn't automatically added to this collection. For more information, see the related known issue. Supports $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1); Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=owners($select=id,userPrincipalName,displayName). */
      owners?: components['schemas']['microsoft.graph.directoryObject'][]
      permissionGrants?: components['schemas']['microsoft.graph.resourceSpecificPermissionGrant'][]
      photo?: components['schemas']['microsoft.graph.profilePhoto']
      /** @description The profile photos owned by the group. Read-only. Nullable. */
      photos?: components['schemas']['microsoft.graph.profilePhoto'][]
      planner?: components['schemas']['microsoft.graph.plannerGroup']
      /** @description The list of users or groups not allowed to create posts or calendar events in this group. Nullable */
      rejectedSenders?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description Settings that can govern this group's behavior, like whether members can invite guests to the group. Nullable. */
      settings?: components['schemas']['microsoft.graph.groupSetting'][]
      /** @description The list of SharePoint sites in this group. Access the default site with /sites/root. */
      sites?: components['schemas']['microsoft.graph.site'][]
      team?: components['schemas']['microsoft.graph.team']
      /** @description The group's conversation threads. Nullable. */
      threads?: components['schemas']['microsoft.graph.conversationThread'][]
      /** @description The groups that a group is a member of, either directly or through nested membership. Nullable. */
      transitiveMemberOf?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description The direct and transitive members of a group. Nullable. */
      transitiveMembers?: components['schemas']['microsoft.graph.directoryObject'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.teamsAsyncOperation': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: int32
       * @description Number of times the operation was attempted before being marked successful or failed.
       */
      attemptsCount?: number
      /**
       * Format: date-time
       * @description Time when the operation was created.
       */
      createdDateTime?: string
      error?: components['schemas']['microsoft.graph.operationError']
      /**
       * Format: date-time
       * @description Time when the async operation was last updated.
       */
      lastActionDateTime?: string
      operationType?: components['schemas']['microsoft.graph.teamsAsyncOperationType']
      status?: components['schemas']['microsoft.graph.teamsAsyncOperationStatus']
      /** @description The ID of the object that's created or modified as result of this async operation, typically a team. */
      targetResourceId?: string | null
      /** @description The location of the object that's created or modified as result of this async operation. This URL should be treated as an opaque value and not parsed into its component paths. */
      targetResourceLocation?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.schedule': components['schemas']['microsoft.graph.entity'] & {
      /** @description Indicates whether the schedule is enabled for the team. Required. */
      enabled?: boolean | null
      /** @description Indicates whether offer shift requests are enabled for the schedule. */
      offerShiftRequestsEnabled?: boolean | null
      /** @description Indicates whether open shifts are enabled for the schedule. */
      openShiftsEnabled?: boolean | null
      provisionStatus?: components['schemas']['microsoft.graph.operationStatus']
      /** @description Additional information about why schedule provisioning failed. */
      provisionStatusCode?: string | null
      /** @description Indicates whether swap shifts requests are enabled for the schedule. */
      swapShiftsRequestsEnabled?: boolean | null
      /** @description Indicates whether time clock is enabled for the schedule. */
      timeClockEnabled?: boolean | null
      /** @description Indicates whether time off requests are enabled for the schedule. */
      timeOffRequestsEnabled?: boolean | null
      /** @description Indicates the time zone of the schedule team using tz database format. Required. */
      timeZone?: string | null
      workforceIntegrationIds?: (string | null)[]
      /** @description The offer requests for shifts in the schedule. */
      offerShiftRequests?: components['schemas']['microsoft.graph.offerShiftRequest'][]
      /** @description The open shift requests in the schedule. */
      openShiftChangeRequests?: components['schemas']['microsoft.graph.openShiftChangeRequest'][]
      /** @description The set of open shifts in a scheduling group in the schedule. */
      openShifts?: components['schemas']['microsoft.graph.openShift'][]
      /** @description The logical grouping of users in the schedule (usually by role). */
      schedulingGroups?: components['schemas']['microsoft.graph.schedulingGroup'][]
      /** @description The shifts in the schedule. */
      shifts?: components['schemas']['microsoft.graph.shift'][]
      /** @description The swap requests for shifts in the schedule. */
      swapShiftsChangeRequests?: components['schemas']['microsoft.graph.swapShiftsChangeRequest'][]
      /** @description The set of reasons for a time off in the schedule. */
      timeOffReasons?: components['schemas']['microsoft.graph.timeOffReason'][]
      /** @description The time off requests in the schedule. */
      timeOffRequests?: components['schemas']['microsoft.graph.timeOffRequest'][]
      /** @description The instances of times off in the schedule. */
      timesOff?: components['schemas']['microsoft.graph.timeOff'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.teamworkTag': components['schemas']['microsoft.graph.entity'] & {
      /** @description The description of the tag as it appears to the user in Microsoft Teams. A teamworkTag can't have more than 200 teamworkTagMembers. */
      description?: string | null
      /** @description The name of the tag as it appears to the user in Microsoft Teams. */
      displayName?: string | null
      /**
       * Format: int32
       * @description The number of users assigned to the tag.
       */
      memberCount?: number | null
      tagType?: components['schemas']['microsoft.graph.teamworkTagType']
      /** @description ID of the team in which the tag is defined. */
      teamId?: string | null
      /** @description Users assigned to the tag. */
      members?: components['schemas']['microsoft.graph.teamworkTagMember'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.teamsTemplate': components['schemas']['microsoft.graph.entity'] & {
      [key: string]: Record<string, never>
    }
    /** servicePlanInfo */
    'microsoft.graph.servicePlanInfo': {
      /** @description The object the service plan can be assigned to. The possible values are:User - service plan can be assigned to individual users.Company - service plan can be assigned to the entire tenant. */
      appliesTo?: string | null
      /** @description The provisioning status of the service plan. The possible values are:Success - Service is fully provisioned.Disabled - Service is disabled.Error - The service plan isn't provisioned and is in an error state.PendingInput - The service isn't provisioned and is awaiting service confirmation.PendingActivation - The service is provisioned but requires explicit activation by an administrator (for example, Intune_O365 service plan)PendingProvisioning - Microsoft has added a new service to the product SKU and it isn't activated in the tenant. */
      provisioningStatus?: string | null
      /**
       * Format: uuid
       * @description The unique identifier of the service plan.
       */
      servicePlanId?: string | null
      /** @description The name of the service plan. */
      servicePlanName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.messageRule': components['schemas']['microsoft.graph.entity'] & {
      actions?: components['schemas']['microsoft.graph.messageRuleActions']
      conditions?: components['schemas']['microsoft.graph.messageRulePredicates']
      /** @description The display name of the rule. */
      displayName?: string | null
      exceptions?: components['schemas']['microsoft.graph.messageRulePredicates']
      /** @description Indicates whether the rule is in an error condition. Read-only. */
      hasError?: boolean | null
      /** @description Indicates whether the rule is enabled to be applied to messages. */
      isEnabled?: boolean | null
      /** @description Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API. */
      isReadOnly?: boolean | null
      /**
       * Format: int32
       * @description Indicates the order in which the rule is executed, among other rules.
       */
      sequence?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * mobileAppIdentifier
     * @description The identifier for a mobile app.
     */
    'microsoft.graph.mobileAppIdentifier': {
      [key: string]: Record<string, never>
    }
    /**
     * managedAppFlaggedReason
     * @description The reason for which a user has been flagged
     * @enum {string}
     */
    'microsoft.graph.managedAppFlaggedReason': 'none' | 'rootedDevice'
    'microsoft.graph.managedAppPolicy': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description The date and time the policy was created.
       */
      createdDateTime?: string
      /** @description The policy's description. */
      description?: string | null
      /** @description Policy display name. */
      displayName?: string
      /**
       * Format: date-time
       * @description Last time the policy was modified.
       */
      lastModifiedDateTime?: string
      /** @description Version of the entity. */
      version?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.managedAppOperation': components['schemas']['microsoft.graph.entity'] & {
      /** @description The operation name. */
      displayName?: string | null
      /**
       * Format: date-time
       * @description The last time the app operation was modified.
       */
      lastModifiedDateTime?: string
      /** @description The current state of the operation */
      state?: string | null
      /** @description Version of the entity. */
      version?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * complianceState
     * @description Compliance state.
     * @enum {string}
     */
    'microsoft.graph.complianceState':
      | 'unknown'
      | 'compliant'
      | 'noncompliant'
      | 'conflict'
      | 'error'
      | 'inGracePeriod'
      | 'configManager'
    /**
     * configurationManagerClientEnabledFeatures
     * @description configuration Manager client enabled features
     */
    'microsoft.graph.configurationManagerClientEnabledFeatures': {
      /** @description Whether compliance policy is managed by Intune */
      compliancePolicy?: boolean
      /** @description Whether device configuration is managed by Intune */
      deviceConfiguration?: boolean
      /** @description Whether inventory is managed by Intune */
      inventory?: boolean
      /** @description Whether modern application is managed by Intune */
      modernApps?: boolean
      /** @description Whether resource access is managed by Intune */
      resourceAccess?: boolean
      /** @description Whether Windows Update for Business is managed by Intune */
      windowsUpdateForBusiness?: boolean
      [key: string]: Record<string, never> | undefined
    }
    /**
     * deviceActionResult
     * @description Device action result
     */
    'microsoft.graph.deviceActionResult': {
      /** @description Action name */
      actionName?: string | null
      actionState?: components['schemas']['microsoft.graph.actionState']
      /**
       * Format: date-time
       * @description Time the action state was last updated
       */
      lastUpdatedDateTime?: string
      /**
       * Format: date-time
       * @description Time the action was initiated
       */
      startDateTime?: string
      [key: string]: Record<string, never> | undefined
    }
    /**
     * deviceEnrollmentType
     * @description Possible ways of adding a mobile device to management.
     * @enum {string}
     */
    'microsoft.graph.deviceEnrollmentType':
      | 'unknown'
      | 'userEnrollment'
      | 'deviceEnrollmentManager'
      | 'appleBulkWithUser'
      | 'appleBulkWithoutUser'
      | 'windowsAzureADJoin'
      | 'windowsBulkUserless'
      | 'windowsAutoEnrollment'
      | 'windowsBulkAzureDomainJoin'
      | 'windowsCoManagement'
      | 'windowsAzureADJoinUsingDeviceAuth'
      | 'appleUserEnrollment'
      | 'appleUserEnrollmentWithServiceAccount'
    /** deviceHealthAttestationState */
    'microsoft.graph.deviceHealthAttestationState': {
      /** @description TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate. */
      attestationIdentityKey?: string | null
      /** @description On or Off of BitLocker Drive Encryption */
      bitLockerStatus?: string | null
      /** @description The security version number of the Boot Application */
      bootAppSecurityVersion?: string | null
      /** @description When bootDebugging is enabled, the device is used in development and testing */
      bootDebugging?: string | null
      /** @description The security version number of the Boot Application */
      bootManagerSecurityVersion?: string | null
      /** @description The version of the Boot Manager */
      bootManagerVersion?: string | null
      /** @description The Boot Revision List that was loaded during initial boot on the attested device */
      bootRevisionListInfo?: string | null
      /** @description When code integrity is enabled, code execution is restricted to integrity verified code */
      codeIntegrity?: string | null
      /** @description The version of the Boot Manager */
      codeIntegrityCheckVersion?: string | null
      /** @description The Code Integrity policy that is controlling the security of the boot environment */
      codeIntegrityPolicy?: string | null
      /** @description The DHA report version. (Namespace version) */
      contentNamespaceUrl?: string | null
      /** @description The HealthAttestation state schema version */
      contentVersion?: string | null
      /** @description DEP Policy defines a set of hardware and software technologies that perform additional checks on memory */
      dataExcutionPolicy?: string | null
      /** @description The DHA report version. (Namespace version) */
      deviceHealthAttestationStatus?: string | null
      /** @description ELAM provides protection for the computers in your network when they start up */
      earlyLaunchAntiMalwareDriverProtection?: string | null
      /** @description This attribute indicates if DHA is supported for the device */
      healthAttestationSupportedStatus?: string | null
      /** @description This attribute appears if DHA-Service detects an integrity issue */
      healthStatusMismatchInfo?: string | null
      /**
       * Format: date-time
       * @description The DateTime when device was evaluated or issued to MDM
       */
      issuedDateTime?: string
      /** @description The Timestamp of the last update. */
      lastUpdateDateTime?: string | null
      /** @description When operatingSystemKernelDebugging is enabled, the device is used in development and testing */
      operatingSystemKernelDebugging?: string | null
      /** @description The Operating System Revision List that was loaded during initial boot on the attested device */
      operatingSystemRevListInfo?: string | null
      /** @description The measurement that is captured in PCR[0] */
      pcr0?: string | null
      /** @description Informational attribute that identifies the HASH algorithm that was used by TPM */
      pcrHashAlgorithm?: string | null
      /**
       * Format: int64
       * @description The number of times a PC device has hibernated or resumed
       */
      resetCount?: number
      /**
       * Format: int64
       * @description The number of times a PC device has rebooted
       */
      restartCount?: number
      /** @description Safe mode is a troubleshooting option for Windows that starts your computer in a limited state */
      safeMode?: string | null
      /** @description When Secure Boot is enabled, the core components must have the correct cryptographic signatures */
      secureBoot?: string | null
      /** @description Fingerprint of the Custom Secure Boot Configuration Policy */
      secureBootConfigurationPolicyFingerPrint?: string | null
      /** @description When test signing is allowed, the device does not enforce signature validation during boot */
      testSigning?: string | null
      /** @description The security version number of the Boot Application */
      tpmVersion?: string | null
      /** @description VSM is a container that protects high value assets from a compromised kernel */
      virtualSecureMode?: string | null
      /** @description Operating system running with limited services that is used to prepare a computer for Windows */
      windowsPE?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * deviceRegistrationState
     * @description Device registration status.
     * @enum {string}
     */
    'microsoft.graph.deviceRegistrationState':
      | 'notRegistered'
      | 'registered'
      | 'revoked'
      | 'keyConflict'
      | 'approvalPending'
      | 'certificateReset'
      | 'notRegisteredPendingEnrollment'
      | 'unknown'
    /**
     * deviceManagementExchangeAccessState
     * @description Device Exchange Access State.
     * @enum {string}
     */
    'microsoft.graph.deviceManagementExchangeAccessState':
      | 'none'
      | 'unknown'
      | 'allowed'
      | 'blocked'
      | 'quarantined'
    /**
     * deviceManagementExchangeAccessStateReason
     * @description Device Exchange Access State Reason.
     * @enum {string}
     */
    'microsoft.graph.deviceManagementExchangeAccessStateReason':
      | 'none'
      | 'unknown'
      | 'exchangeGlobalRule'
      | 'exchangeIndividualRule'
      | 'exchangeDeviceRule'
      | 'exchangeUpgrade'
      | 'exchangeMailboxPolicy'
      | 'other'
      | 'compliant'
      | 'notCompliant'
      | 'notEnrolled'
      | 'unknownLocation'
      | 'mfaRequired'
      | 'azureADBlockDueToAccessPolicy'
      | 'compromisedPassword'
      | 'deviceNotKnownWithManagedApp'
    /**
     * managedDeviceOwnerType
     * @description Owner type of device.
     * @enum {string}
     */
    'microsoft.graph.managedDeviceOwnerType': 'unknown' | 'company' | 'personal'
    /**
     * managementAgentType
     * @enum {string}
     */
    'microsoft.graph.managementAgentType':
      | 'eas'
      | 'mdm'
      | 'easMdm'
      | 'intuneClient'
      | 'easIntuneClient'
      | 'configurationManagerClient'
      | 'configurationManagerClientMdm'
      | 'configurationManagerClientMdmEas'
      | 'unknown'
      | 'jamf'
      | 'googleCloudDevicePolicyController'
      | 'microsoft365ManagedMdm'
      | 'msSense'
    /**
     * managedDevicePartnerReportedHealthState
     * @description Available health states for the Device Health API
     * @enum {string}
     */
    'microsoft.graph.managedDevicePartnerReportedHealthState':
      | 'unknown'
      | 'activated'
      | 'deactivated'
      | 'secured'
      | 'lowSeverity'
      | 'mediumSeverity'
      | 'highSeverity'
      | 'unresponsive'
      | 'compromised'
      | 'misconfigured'
    'microsoft.graph.deviceCategory': components['schemas']['microsoft.graph.entity'] & {
      /** @description Optional description for the device category. */
      description?: string | null
      /** @description Display name for the device category. */
      displayName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.deviceCompliancePolicyState': components['schemas']['microsoft.graph.entity'] & {
      /** @description The name of the policy for this policyBase */
      displayName?: string | null
      platformType?: components['schemas']['microsoft.graph.policyPlatformType']
      /**
       * Format: int32
       * @description Count of how many setting a policy holds
       */
      settingCount?: number
      settingStates?: components['schemas']['microsoft.graph.deviceCompliancePolicySettingState'][]
      state?: components['schemas']['microsoft.graph.complianceStatus']
      /**
       * Format: int32
       * @description The version of the policy
       */
      version?: number
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.deviceConfigurationState': components['schemas']['microsoft.graph.entity'] & {
      /** @description The name of the policy for this policyBase */
      displayName?: string | null
      platformType?: components['schemas']['microsoft.graph.policyPlatformType']
      /**
       * Format: int32
       * @description Count of how many setting a policy holds
       */
      settingCount?: number
      settingStates?: components['schemas']['microsoft.graph.deviceConfigurationSettingState'][]
      state?: components['schemas']['microsoft.graph.complianceStatus']
      /**
       * Format: int32
       * @description The version of the policy
       */
      version?: number
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.deviceLogCollectionResponse': components['schemas']['microsoft.graph.entity'] & {
      /** @description The User Principal Name (UPN) of the user that enrolled the device. */
      enrolledByUser?: string | null
      /**
       * Format: date-time
       * @description The DateTime of the expiration of the logs.
       */
      expirationDateTimeUTC?: string | null
      /** @description The UPN for who initiated the request. */
      initiatedByUserPrincipalName?: string | null
      /**
       * Format: uuid
       * @description Indicates Intune device unique identifier.
       */
      managedDeviceId?: string
      /**
       * Format: date-time
       * @description The DateTime the request was received.
       */
      receivedDateTimeUTC?: string | null
      /**
       * Format: date-time
       * @description The DateTime of the request.
       */
      requestedDateTimeUTC?: string | null
      /**
       * Format: double
       * @description The size of the logs in KB. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
       */
      sizeInKB?: number
      status?: components['schemas']['microsoft.graph.appLogUploadState']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.windowsProtectionState': components['schemas']['microsoft.graph.entity'] & {
      /** @description Current anti malware version */
      antiMalwareVersion?: string | null
      deviceState?: components['schemas']['microsoft.graph.windowsDeviceHealthState']
      /** @description Current endpoint protection engine's version */
      engineVersion?: string | null
      /** @description When TRUE indicates full scan is overdue, when FALSE indicates full scan is not overdue. Defaults to setting on client device. */
      fullScanOverdue?: boolean | null
      /** @description When TRUE indicates full scan is required, when FALSE indicates full scan is not required. Defaults to setting on client device. */
      fullScanRequired?: boolean | null
      /** @description When TRUE indicates the device is a virtual machine, when FALSE indicates the device is not a virtual machine. Defaults to setting on client device. */
      isVirtualMachine?: boolean | null
      /**
       * Format: date-time
       * @description Last quick scan datetime
       */
      lastFullScanDateTime?: string | null
      /** @description Last full scan signature version */
      lastFullScanSignatureVersion?: string | null
      /**
       * Format: date-time
       * @description Last quick scan datetime
       */
      lastQuickScanDateTime?: string | null
      /** @description Last quick scan signature version */
      lastQuickScanSignatureVersion?: string | null
      /**
       * Format: date-time
       * @description Last device health status reported time
       */
      lastReportedDateTime?: string | null
      /** @description When TRUE indicates anti malware is enabled when FALSE indicates anti malware is not enabled. */
      malwareProtectionEnabled?: boolean | null
      /** @description When TRUE indicates network inspection system enabled, when FALSE indicates network inspection system is not enabled. Defaults to setting on client device. */
      networkInspectionSystemEnabled?: boolean | null
      productStatus?: components['schemas']['microsoft.graph.windowsDefenderProductStatus']
      /** @description When TRUE indicates quick scan is overdue, when FALSE indicates quick scan is not overdue. Defaults to setting on client device. */
      quickScanOverdue?: boolean | null
      /** @description When TRUE indicates real time protection is enabled, when FALSE indicates real time protection is not enabled. Defaults to setting on client device. */
      realTimeProtectionEnabled?: boolean | null
      /** @description When TRUE indicates reboot is required, when FALSE indicates when TRUE indicates reboot is not required. Defaults to setting on client device. */
      rebootRequired?: boolean | null
      /** @description When TRUE indicates signature is out of date, when FALSE indicates signature is not out of date. Defaults to setting on client device. */
      signatureUpdateOverdue?: boolean | null
      /** @description Current malware definitions version */
      signatureVersion?: string | null
      /** @description When TRUE indicates the Windows Defender tamper protection feature is enabled, when FALSE indicates the Windows Defender tamper protection feature is not enabled. Defaults to setting on client device. */
      tamperProtectionEnabled?: boolean | null
      /** @description Device malware list */
      detectedMalwareState?: components['schemas']['microsoft.graph.windowsDeviceMalwareState'][]
      [key: string]: Record<string, never> | undefined
    }
    /** followupFlag */
    'microsoft.graph.followupFlag': {
      completedDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      dueDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      flagStatus?: components['schemas']['microsoft.graph.followupFlagStatus']
      startDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * inferenceClassificationType
     * @enum {string}
     */
    'microsoft.graph.inferenceClassificationType': 'focused' | 'other'
    /** internetMessageHeader */
    'microsoft.graph.internetMessageHeader': {
      /** @description Represents the key in a key-value pair. */
      name?: string | null
      /** @description The value in a key-value pair. */
      value?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.notebook': components['schemas']['microsoft.graph.onenoteEntityHierarchyModel'] & {
      /** @description Indicates whether this is the user's default notebook. Read-only. */
      isDefault?: boolean | null
      /** @description Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only. */
      isShared?: boolean | null
      links?: components['schemas']['microsoft.graph.notebookLinks']
      /** @description The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only. */
      sectionGroupsUrl?: string | null
      /** @description The URL for the sections navigation property, which returns all the sections in the notebook. Read-only. */
      sectionsUrl?: string | null
      userRole?: components['schemas']['microsoft.graph.onenoteUserRole']
      /** @description The section groups in the notebook. Read-only. Nullable. */
      sectionGroups?: components['schemas']['microsoft.graph.sectionGroup'][]
      /** @description The sections in the notebook. Read-only. Nullable. */
      sections?: components['schemas']['microsoft.graph.onenoteSection'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onenoteOperation': components['schemas']['microsoft.graph.operation'] & {
      error?: components['schemas']['microsoft.graph.onenoteOperationError']
      /** @description The operation percent complete if the operation is still in running status. */
      percentComplete?: string | null
      /** @description The resource id. */
      resourceId?: string | null
      /** @description The resource URI for the object. For example, the resource URI for a copied page or section. */
      resourceLocation?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onenotePage': components['schemas']['microsoft.graph.onenoteEntitySchemaObjectModel'] & {
      /**
       * Format: base64url
       * @description The page's HTML content.
       */
      content?: string | null
      /** @description The URL for the page's HTML content.  Read-only. */
      contentUrl?: string | null
      /** @description The unique identifier of the application that created the page. Read-only. */
      createdByAppId?: string | null
      /**
       * Format: date-time
       * @description The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      lastModifiedDateTime?: string | null
      /**
       * Format: int32
       * @description The indentation level of the page. Read-only.
       */
      level?: number | null
      links?: components['schemas']['microsoft.graph.pageLinks']
      /**
       * Format: int32
       * @description The order of the page within its parent section. Read-only.
       */
      order?: number | null
      /** @description The title of the page. */
      title?: string | null
      userTags?: (string | null)[]
      parentNotebook?: components['schemas']['microsoft.graph.notebook']
      parentSection?: components['schemas']['microsoft.graph.onenoteSection']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onenoteResource': components['schemas']['microsoft.graph.onenoteEntityBaseModel'] & {
      /**
       * Format: base64url
       * @description The content stream
       */
      content?: string | null
      /** @description The URL for downloading the content */
      contentUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.sectionGroup': components['schemas']['microsoft.graph.onenoteEntityHierarchyModel'] & {
      /** @description The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only. */
      sectionGroupsUrl?: string | null
      /** @description The URL for the sections navigation property, which returns all the sections in the section group. Read-only. */
      sectionsUrl?: string | null
      parentNotebook?: components['schemas']['microsoft.graph.notebook']
      parentSectionGroup?: components['schemas']['microsoft.graph.sectionGroup']
      /** @description The section groups in the section. Read-only. Nullable. */
      sectionGroups?: components['schemas']['microsoft.graph.sectionGroup'][]
      /** @description The sections in the section group. Read-only. Nullable. */
      sections?: components['schemas']['microsoft.graph.onenoteSection'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onenoteSection': components['schemas']['microsoft.graph.onenoteEntityHierarchyModel'] & {
      /** @description Indicates whether this is the user's default section. Read-only. */
      isDefault?: boolean | null
      links?: components['schemas']['microsoft.graph.sectionLinks']
      /** @description The pages endpoint where you can get details for all the pages in the section. Read-only. */
      pagesUrl?: string | null
      /** @description The collection of pages in the section.  Read-only. Nullable. */
      pages?: components['schemas']['microsoft.graph.onenotePage'][]
      parentNotebook?: components['schemas']['microsoft.graph.notebook']
      parentSectionGroup?: components['schemas']['microsoft.graph.sectionGroup']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onlineMeetingBase': components['schemas']['microsoft.graph.entity'] & {
      /** @description Indicates whether attendees can turn on their camera. */
      allowAttendeeToEnableCamera?: boolean | null
      /** @description Indicates whether attendees can turn on their microphone. */
      allowAttendeeToEnableMic?: boolean | null
      allowedPresenters?: components['schemas']['microsoft.graph.onlineMeetingPresenters']
      allowMeetingChat?: components['schemas']['microsoft.graph.meetingChatMode']
      /** @description Specifies if participants are allowed to rename themselves in an instance of the meeting. */
      allowParticipantsToChangeName?: boolean | null
      /** @description Indicates if Teams reactions are enabled for the meeting. */
      allowTeamworkReactions?: boolean | null
      audioConferencing?: components['schemas']['microsoft.graph.audioConferencing']
      chatInfo?: components['schemas']['microsoft.graph.chatInfo']
      /** @description Indicates whether to announce when callers join or leave. */
      isEntryExitAnnounced?: boolean | null
      joinInformation?: components['schemas']['microsoft.graph.itemBody']
      joinMeetingIdSettings?: components['schemas']['microsoft.graph.joinMeetingIdSettings']
      /** @description The join URL of the online meeting. Read-only. */
      joinWebUrl?: string | null
      lobbyBypassSettings?: components['schemas']['microsoft.graph.lobbyBypassSettings']
      /** @description Indicates whether to record the meeting automatically. */
      recordAutomatically?: boolean | null
      shareMeetingChatHistoryDefault?: components['schemas']['microsoft.graph.meetingChatHistoryDefaultMode']
      /** @description The subject of the online meeting. */
      subject?: string | null
      /** @description The video teleconferencing ID. Read-only. */
      videoTeleconferenceId?: string | null
      watermarkProtection?: components['schemas']['microsoft.graph.watermarkProtectionValues']
      /** @description The attendance reports of an online meeting. Read-only. */
      attendanceReports?: components['schemas']['microsoft.graph.meetingAttendanceReport'][]
      [key: string]: Record<string, never> | undefined
    }
    /** broadcastMeetingSettings */
    'microsoft.graph.broadcastMeetingSettings': {
      allowedAudience?: components['schemas']['microsoft.graph.broadcastMeetingAudience']
      captions?: components['schemas']['microsoft.graph.broadcastMeetingCaptionSettings']
      /** @description Indicates whether attendee report is enabled for this Teams live event. Default value is false. */
      isAttendeeReportEnabled?: boolean | null
      /** @description Indicates whether Q&A is enabled for this Teams live event. Default value is false. */
      isQuestionAndAnswerEnabled?: boolean | null
      /** @description Indicates whether recording is enabled for this Teams live event. Default value is false. */
      isRecordingEnabled?: boolean | null
      /** @description Indicates whether video on demand is enabled for this Teams live event. Default value is false. */
      isVideoOnDemandEnabled?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** meetingParticipants */
    'microsoft.graph.meetingParticipants': {
      /** @description Information about the meeting attendees. */
      attendees?: components['schemas']['microsoft.graph.meetingParticipantInfo'][]
      organizer?: components['schemas']['microsoft.graph.meetingParticipantInfo']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.callRecording': components['schemas']['microsoft.graph.entity'] & {
      /** @description The unique identifier for the call that is related to this recording. Read-only. */
      callId?: string | null
      /**
       * Format: base64url
       * @description The content of the recording. Read-only.
       */
      content?: string | null
      /** @description The unique identifier that links the transcript with its corresponding recording. Read-only. */
      contentCorrelationId?: string | null
      /**
       * Format: date-time
       * @description Date and time at which the recording was created. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description Date and time at which the recording ends. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      endDateTime?: string | null
      /** @description The unique identifier of the onlineMeeting related to this recording. Read-only. */
      meetingId?: string | null
      meetingOrganizer?: components['schemas']['microsoft.graph.identitySet']
      /** @description The URL that can be used to access the content of the recording. Read-only. */
      recordingContentUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.callTranscript': components['schemas']['microsoft.graph.entity'] & {
      /** @description The unique identifier for the call that is related to this transcript. Read-only. */
      callId?: string | null
      /**
       * Format: base64url
       * @description The content of the transcript. Read-only.
       */
      content?: string | null
      /** @description The unique identifier that links the transcript with its corresponding recording. Read-only. */
      contentCorrelationId?: string | null
      /**
       * Format: date-time
       * @description Date and time at which the transcript was created. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description Date and time at which the transcription ends. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      endDateTime?: string | null
      /** @description The unique identifier of the online meeting related to this transcript. Read-only. */
      meetingId?: string | null
      meetingOrganizer?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: base64url
       * @description The time-aligned metadata of the utterances in the transcript. Read-only.
       */
      metadataContent?: string | null
      /** @description The URL that can be used to access the content of the transcript. Read-only. */
      transcriptContentUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.outlookCategory': components['schemas']['microsoft.graph.entity'] & {
      color?: components['schemas']['microsoft.graph.categoryColor']
      /** @description A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only. */
      displayName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** personType */
    'microsoft.graph.personType': {
      /** @description The type of data source, such as Person. */
      class?: string | null
      /** @description The secondary type of data source, such as OrganizationUser. */
      subclass?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** phone */
    'microsoft.graph.phone': {
      language?: string | null
      /** @description The phone number. */
      number?: string | null
      region?: string | null
      type?: components['schemas']['microsoft.graph.phoneType']
      [key: string]: Record<string, never> | undefined
    }
    /** scoredEmailAddress */
    'microsoft.graph.scoredEmailAddress': {
      /** @description The email address. */
      address?: string | null
      itemId?: string | null
      /**
       * Format: double
       * @description The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the user’s communication and collaboration patterns and business relationships.
       */
      relevanceScore?: number | null
      selectionLikelihood?: components['schemas']['microsoft.graph.selectionLikelihoodInfo']
      [key: string]: Record<string, never> | undefined
    }
    /** website */
    'microsoft.graph.website': {
      /** @description The URL of the website. */
      address?: string | null
      /** @description The display name of the web site. */
      displayName?: string | null
      type?: components['schemas']['microsoft.graph.websiteType']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerPlan': components['schemas']['microsoft.graph.entity'] & {
      container?: components['schemas']['microsoft.graph.plannerPlanContainer']
      createdBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      createdDateTime?: string | null
      /** @description Use the container property instead. ID of the group that owns the plan. After it's set, this property can’t be updated. This property won't return a valid group ID if the container of the plan isn't a group. */
      owner?: string | null
      /** @description Required. Title of the plan. */
      title?: string
      /** @description Read-only. Nullable. Collection of buckets in the plan. */
      buckets?: components['schemas']['microsoft.graph.plannerBucket'][]
      details?: components['schemas']['microsoft.graph.plannerPlanDetails']
      /** @description Read-only. Nullable. Collection of tasks in the plan. */
      tasks?: components['schemas']['microsoft.graph.plannerTask'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerTask': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: int32
       * @description Number of checklist items with value set to false, representing incomplete items.
       */
      activeChecklistItemCount?: number | null
      appliedCategories?: components['schemas']['microsoft.graph.plannerAppliedCategories']
      /** @description Hint used to order items of this type in a list view. The format is defined as outlined here. */
      assigneePriority?: string | null
      assignments?: components['schemas']['microsoft.graph.plannerAssignments']
      /** @description Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It's 28 characters long and case-sensitive. Format validation is done on the service. */
      bucketId?: string | null
      /**
       * Format: int32
       * @description Number of checklist items that are present on the task.
       */
      checklistItemCount?: number | null
      completedBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      completedDateTime?: string | null
      /** @description Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group. */
      conversationThreadId?: string | null
      createdBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      dueDateTime?: string | null
      /** @description Read-only. Value is true if the details object of the task has a nonempty description and false otherwise. */
      hasDescription?: boolean | null
      /** @description Hint used to order items of this type in a list view. The format is defined as outlined here. */
      orderHint?: string | null
      /**
       * Format: int32
       * @description Percentage of task completion. When set to 100, the task is considered completed.
       */
      percentComplete?: number | null
      /** @description Plan ID to which the task belongs. */
      planId?: string | null
      previewType?: components['schemas']['microsoft.graph.plannerPreviewType']
      /**
       * Format: int32
       * @description Priority of the task. The valid range of values is between 0 and 10, with the increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as 'urgent', 2, 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'.  Additionally, Planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'.
       */
      priority?: number | null
      /**
       * Format: int32
       * @description Number of external references that exist on the task.
       */
      referenceCount?: number | null
      /**
       * Format: date-time
       * @description Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      startDateTime?: string | null
      /** @description Title of the task. */
      title?: string
      assignedToTaskBoardFormat?: components['schemas']['microsoft.graph.plannerAssignedToTaskBoardTaskFormat']
      bucketTaskBoardFormat?: components['schemas']['microsoft.graph.plannerBucketTaskBoardTaskFormat']
      details?: components['schemas']['microsoft.graph.plannerTaskDetails']
      progressTaskBoardFormat?: components['schemas']['microsoft.graph.plannerProgressTaskBoardTaskFormat']
      [key: string]: Record<string, never> | undefined
    }
    /** presenceStatusMessage */
    'microsoft.graph.presenceStatusMessage': {
      expiryDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      message?: components['schemas']['microsoft.graph.itemBody']
      /**
       * Format: date-time
       * @description Time in which the status message was published.Read-only.publishedDateTime isn't available when you request the presence of another user.
       */
      publishedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.userInsightsSettings': components['schemas']['microsoft.graph.entity'] & {
      /** @description True if the user's itemInsights and meeting hours insights are enabled; false if the user's itemInsights and meeting hours insights are disabled. The default value is true. Optional. */
      isEnabled?: boolean
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.shiftPreferences': components['schemas']['microsoft.graph.changeTrackedEntity'] & {
      /** @description Availability of the user to be scheduled for work and its recurrence pattern. */
      availability?: components['schemas']['microsoft.graph.shiftAvailability'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.userStorage': components['schemas']['microsoft.graph.entity'] & {
      quota?: components['schemas']['microsoft.graph.unifiedStorageQuota']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.windowsSetting': components['schemas']['microsoft.graph.entity'] & {
      /** @description The type of setting payloads contained in the instances navigation property. */
      payloadType?: string | null
      settingType?: components['schemas']['microsoft.graph.windowsSettingType']
      /** @description A unique identifier for the device the setting might belong to if it is of the settingType backup. */
      windowsDeviceId?: string | null
      /** @description A collection of setting values for a given windowsSetting. */
      instances?: components['schemas']['microsoft.graph.windowsSettingInstance'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workingTimeSchedule': components['schemas']['microsoft.graph.entity'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.associatedTeamInfo': components['schemas']['microsoft.graph.teamInfo'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.userScopeTeamsAppInstallation': components['schemas']['microsoft.graph.teamsAppInstallation'] & {
      chat?: components['schemas']['microsoft.graph.chat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.todoTaskList': components['schemas']['microsoft.graph.entity'] & {
      /** @description The name of the task list. */
      displayName?: string | null
      /** @description True if the user is owner of the given task list. */
      isOwner?: boolean
      /** @description True if the task list is shared with other users */
      isShared?: boolean
      wellknownListName?: components['schemas']['microsoft.graph.wellknownListName']
      /** @description The collection of open extensions defined for the task list. Nullable. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      /** @description The tasks in this task list. Read-only. Nullable. */
      tasks?: components['schemas']['microsoft.graph.todoTask'][]
      [key: string]: Record<string, never> | undefined
    }
    /**
     * externalAudienceScope
     * @enum {string}
     */
    'microsoft.graph.externalAudienceScope': 'none' | 'contactsOnly' | 'all'
    /**
     * automaticRepliesStatus
     * @enum {string}
     */
    'microsoft.graph.automaticRepliesStatus':
      | 'disabled'
      | 'alwaysEnabled'
      | 'scheduled'
    /**
     * dayOfWeek
     * @enum {string}
     */
    'microsoft.graph.dayOfWeek':
      | 'sunday'
      | 'monday'
      | 'tuesday'
      | 'wednesday'
      | 'thursday'
      | 'friday'
      | 'saturday'
    /** timeZoneBase */
    'microsoft.graph.timeZoneBase': {
      /** @description The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone. */
      name?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.sharePointIdentity': components['schemas']['microsoft.graph.identity'] & {
      /** @description The sign in name of the SharePoint identity. */
      loginName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * driveItemSourceApplication
     * @enum {string}
     */
    'microsoft.graph.driveItemSourceApplication':
      | 'teams'
      | 'yammer'
      | 'sharePoint'
      | 'oneDrive'
      | 'stream'
      | 'powerPoint'
      | 'office'
      | 'loki'
      | 'loop'
      | 'other'
      | 'unknownFutureValue'
    /**
     * mediaSourceContentCategory
     * @enum {string}
     */
    'microsoft.graph.mediaSourceContentCategory':
      | 'meeting'
      | 'liveStream'
      | 'presentation'
      | 'screenRecording'
      | 'story'
      | 'profile'
      | 'chat'
      | 'note'
      | 'comment'
      | 'unknownFutureValue'
    /**
     * behaviorDuringRetentionPeriod
     * @enum {string}
     */
    'microsoft.graph.security.behaviorDuringRetentionPeriod':
      | 'doNotRetain'
      | 'retain'
      | 'retainAsRecord'
      | 'retainAsRegulatoryRecord'
      | 'unknownFutureValue'
    'microsoft.graph.termStore.term': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description Date and time of term creation. Read-only.
       */
      createdDateTime?: string | null
      /** @description Description about term that is dependent on the languageTag. */
      descriptions?: components['schemas']['microsoft.graph.termStore.localizedDescription'][]
      /** @description Label metadata for a term. */
      labels?: components['schemas']['microsoft.graph.termStore.localizedLabel'][]
      /**
       * Format: date-time
       * @description Last date and time of term modification. Read-only.
       */
      lastModifiedDateTime?: string | null
      /** @description Collection of properties on the term. */
      properties?: components['schemas']['microsoft.graph.keyValue'][]
      /** @description Children of current term. */
      children?: components['schemas']['microsoft.graph.termStore.term'][]
      /** @description To indicate which terms are related to the current term as either pinned or reused. */
      relations?: components['schemas']['microsoft.graph.termStore.relation'][]
      set?: components['schemas']['microsoft.graph.termStore.set']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.termStore.set': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description Date and time of set creation. Read-only.
       */
      createdDateTime?: string | null
      /** @description Description that gives details on the term usage. */
      description?: string | null
      /** @description Name of the set for each languageTag. */
      localizedNames?: components['schemas']['microsoft.graph.termStore.localizedName'][]
      /** @description Custom properties for the set. */
      properties?: components['schemas']['microsoft.graph.keyValue'][]
      /** @description Children terms of set in term [store]. */
      children?: components['schemas']['microsoft.graph.termStore.term'][]
      parentGroup?: components['schemas']['microsoft.graph.termStore.group']
      /** @description Indicates which terms have been pinned or reused directly under the set. */
      relations?: components['schemas']['microsoft.graph.termStore.relation'][]
      /** @description All the terms under the set. */
      terms?: components['schemas']['microsoft.graph.termStore.term'][]
      [key: string]: Record<string, never> | undefined
    }
    /** displayNameLocalization */
    'microsoft.graph.displayNameLocalization': {
      /** @description If present, the value of this field contains the displayName string that has been set for the language present in the languageTag field. */
      displayName?: string | null
      /** @description Provides the language culture-code and friendly name of the language that the displayName field has been provided in. */
      languageTag?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * longRunningOperationStatus
     * @enum {string}
     */
    'microsoft.graph.longRunningOperationStatus':
      | 'notStarted'
      | 'running'
      | 'succeeded'
      | 'failed'
      | 'unknownFutureValue'
    /** publicErrorDetail */
    'microsoft.graph.publicErrorDetail': {
      /** @description The error code. */
      code?: string | null
      /** @description The error message. */
      message?: string | null
      /** @description The target of the error. */
      target?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** publicInnerError */
    'microsoft.graph.publicInnerError': {
      /** @description The error code. */
      code?: string | null
      /** @description A collection of error details. */
      details?: components['schemas']['microsoft.graph.publicErrorDetail'][]
      /** @description The error message. */
      message?: string | null
      /** @description The target of the error. */
      target?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** siteArchivalDetails */
    'microsoft.graph.siteArchivalDetails': {
      archiveStatus?: components['schemas']['microsoft.graph.siteArchiveStatus']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * pageLayoutType
     * @enum {string}
     */
    'microsoft.graph.pageLayoutType':
      | 'microsoftReserved'
      | 'article'
      | 'home'
      | 'unknownFutureValue'
    'microsoft.graph.termStore.group': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description Date and time of the group creation. Read-only.
       */
      createdDateTime?: string | null
      /** @description Description that gives details on the term usage. */
      description?: string | null
      /** @description Name of the group. */
      displayName?: string | null
      /** @description ID of the parent site of this group. */
      parentSiteId?: string | null
      scope?: components['schemas']['microsoft.graph.termStore.termGroupScope']
      /** @description All sets under the group in a term [store]. */
      sets?: components['schemas']['microsoft.graph.termStore.set'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.ODataErrors.MainError': {
      code: string
      message: string
      target?: string | null
      details?: components['schemas']['microsoft.graph.ODataErrors.ErrorDetails'][]
      innerError?: components['schemas']['microsoft.graph.ODataErrors.InnerError']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookCommentReply': components['schemas']['microsoft.graph.entity'] & {
      /** @description The content of the reply. */
      content?: string | null
      /** @description The content type for the reply. */
      contentType?: string
      [key: string]: Record<string, never> | undefined
    }
    /** workbookOperationError */
    'microsoft.graph.workbookOperationError': {
      /** @description The error code. */
      code?: string | null
      innerError?: components['schemas']['microsoft.graph.workbookOperationError']
      /** @description The error message. */
      message?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * workbookOperationStatus
     * @enum {string}
     */
    'microsoft.graph.workbookOperationStatus':
      | 'notStarted'
      | 'running'
      | 'succeeded'
      | 'failed'
    'microsoft.graph.workbookTableColumn': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: int32
       * @description The index of the column within the columns collection of the table. Zero-indexed. Read-only.
       */
      index?: number
      /** @description The name of the table column. */
      name?: string | null
      values?: components['schemas']['microsoft.graph.Json']
      filter?: components['schemas']['microsoft.graph.workbookFilter']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookTableRow': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: int32
       * @description The index of the row within the rows collection of the table. Zero-based. Read-only.
       */
      index?: number
      values?: components['schemas']['microsoft.graph.Json']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookTableSort': components['schemas']['microsoft.graph.entity'] & {
      /** @description The list of the current conditions last used to sort the table. Read-only. */
      fields?: components['schemas']['microsoft.graph.workbookSortField'][]
      /** @description Indicates whether the casing impacted the last sort of the table. Read-only. */
      matchCase?: boolean
      /** @description The Chinese character ordering method last used to sort the table. The possible values are: PinYin, StrokeCount. Read-only. */
      method?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChart': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: double
       * @description Represents the height, in points, of the chart object.
       */
      height?: number
      /**
       * Format: double
       * @description The distance, in points, from the left side of the chart to the worksheet origin.
       */
      left?: number
      /** @description Represents the name of a chart object. */
      name?: string | null
      /**
       * Format: double
       * @description Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).
       */
      top?: number
      /**
       * Format: double
       * @description Represents the width, in points, of the chart object.
       */
      width?: number
      axes?: components['schemas']['microsoft.graph.workbookChartAxes']
      dataLabels?: components['schemas']['microsoft.graph.workbookChartDataLabels']
      format?: components['schemas']['microsoft.graph.workbookChartAreaFormat']
      legend?: components['schemas']['microsoft.graph.workbookChartLegend']
      /** @description Represents either a single series or collection of series in the chart. Read-only. */
      series?: components['schemas']['microsoft.graph.workbookChartSeries'][]
      title?: components['schemas']['microsoft.graph.workbookChartTitle']
      worksheet?: components['schemas']['microsoft.graph.workbookWorksheet']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookPivotTable': components['schemas']['microsoft.graph.entity'] & {
      /** @description The name of the pivot table. */
      name?: string | null
      worksheet?: components['schemas']['microsoft.graph.workbookWorksheet']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookWorksheetProtection': components['schemas']['microsoft.graph.entity'] & {
      options?: components['schemas']['microsoft.graph.workbookWorksheetProtectionOptions']
      /** @description Indicates whether the worksheet is protected.  Read-only. */
      protected?: boolean
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.printerBase': components['schemas']['microsoft.graph.entity'] & {
      capabilities?: components['schemas']['microsoft.graph.printerCapabilities']
      defaults?: components['schemas']['microsoft.graph.printerDefaults']
      /** @description The name of the printer/printerShare. */
      displayName?: string
      /** @description Specifies whether the printer/printerShare is currently accepting new print jobs. */
      isAcceptingJobs?: boolean | null
      location?: components['schemas']['microsoft.graph.printerLocation']
      /** @description The manufacturer of the printer/printerShare. */
      manufacturer?: string | null
      /** @description The model name of the printer/printerShare. */
      model?: string | null
      status?: components['schemas']['microsoft.graph.printerStatus']
      /** @description The list of jobs that are queued for printing by the printer/printerShare. */
      jobs?: components['schemas']['microsoft.graph.printJob'][]
      [key: string]: Record<string, never> | undefined
    }
    /** printerShareViewpoint */
    'microsoft.graph.printerShareViewpoint': {
      /**
       * Format: date-time
       * @description Date and time when the printer was last used by the signed-in user. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      lastUsedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.printer': components['schemas']['microsoft.graph.printerBase'] & {
      /** @description True if the printer has a physical device for printing. Read-only. */
      hasPhysicalDevice?: boolean
      /** @description True if the printer is shared; false otherwise. Read-only. */
      isShared?: boolean
      /**
       * Format: date-time
       * @description The most recent dateTimeOffset when a printer interacted with Universal Print. Read-only.
       */
      lastSeenDateTime?: string | null
      /**
       * Format: date-time
       * @description The DateTimeOffset when the printer was registered. Read-only.
       */
      registeredDateTime?: string
      /** @description The connectors that are associated with the printer. */
      connectors?: components['schemas']['microsoft.graph.printConnector'][]
      /** @description The list of printerShares that are associated with the printer. Currently, only one printerShare can be associated with the printer. Read-only. Nullable. */
      shares?: components['schemas']['microsoft.graph.printerShare'][]
      /** @description A list of task triggers that are associated with the printer. */
      taskTriggers?: components['schemas']['microsoft.graph.printTaskTrigger'][]
      [key: string]: Record<string, never> | undefined
    }
    /** imageInfo */
    'microsoft.graph.imageInfo': {
      /** @description Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image */
      addImageQuery?: boolean | null
      /** @description Optional; alt-text accessible content for the image */
      alternateText?: string | null
      alternativeText?: string | null
      /** @description Optional; URI that points to an icon which represents the application used to generate the activity */
      iconUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * attestationLevel
     * @enum {string}
     */
    'microsoft.graph.attestationLevel':
      | 'attested'
      | 'notAttested'
      | 'unknownFutureValue'
    'microsoft.graph.device': components['schemas']['microsoft.graph.directoryObject'] & {
      /** @description true if the account is enabled; otherwise, false. Required. Default is true.  Supports $filter (eq, ne, not, in). Only callers with at least the Cloud Device Administrator role can set this property. */
      accountEnabled?: boolean | null
      /** @description For internal use only. Not nullable. Supports $filter (eq, not, ge, le). */
      alternativeSecurityIds?: components['schemas']['microsoft.graph.alternativeSecurityId'][]
      /**
       * Format: date-time
       * @description The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, not, ge, le, and eq on null values) and $orderby.
       */
      approximateLastSignInDateTime?: string | null
      /**
       * Format: date-time
       * @description The timestamp when the device is no longer deemed compliant. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      complianceExpirationDateTime?: string | null
      /** @description User-defined property set by Intune to automatically add devices to groups and simplify managing devices. */
      deviceCategory?: string | null
      /** @description Unique identifier set by Azure Device Registration Service at the time of registration. This alternate key can be used to reference the device object. Supports $filter (eq, ne, not, startsWith). */
      deviceId?: string | null
      /** @description For internal use only. Set to null. */
      deviceMetadata?: string | null
      /** @description Ownership of the device. Intune sets this property. Possible values are: unknown, company, personal. */
      deviceOwnership?: string | null
      /**
       * Format: int32
       * @description For internal use only.
       */
      deviceVersion?: number | null
      /** @description The display name for the device. Required. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderby. */
      displayName?: string | null
      /** @description Enrollment profile applied to the device. For example, Apple Device Enrollment Profile, Device enrollment - Corporate device identifiers, or Windows Autopilot profile name. This property is set by Intune. */
      enrollmentProfileName?: string | null
      /** @description Enrollment type of the device. Intune sets this property. Possible values are: unknown, userEnrollment, deviceEnrollmentManager, appleBulkWithUser, appleBulkWithoutUser, windowsAzureADJoin, windowsBulkUserless, windowsAutoEnrollment, windowsBulkAzureDomainJoin, windowsCoManagement, windowsAzureADJoinUsingDeviceAuth,appleUserEnrollment, appleUserEnrollmentWithServiceAccount. NOTE: This property might return other values apart from those listed. */
      enrollmentType?: string | null
      /** @description true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not). */
      isCompliant?: boolean | null
      /** @description true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices. Supports $filter (eq, ne, not). */
      isManaged?: boolean | null
      isManagementRestricted?: boolean | null
      /** @description true if the device is rooted or jail-broken. This property can only be updated by Intune. */
      isRooted?: boolean | null
      /** @description The management channel of the device. This property is set by Intune. Possible values are: eas, mdm, easMdm, intuneClient, easIntuneClient, configurationManagerClient, configurationManagerClientMdm, configurationManagerClientMdmEas, unknown, jamf, googleCloudDevicePolicyController. */
      managementType?: string | null
      /** @description Manufacturer of the device. Read-only. */
      manufacturer?: string | null
      /** @description Application identifier used to register device into MDM. Read-only. Supports $filter (eq, ne, not, startsWith). */
      mdmAppId?: string | null
      /** @description Model of the device. Read-only. */
      model?: string | null
      /**
       * Format: date-time
       * @description The last time at which the object was synced with the on-premises directory. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Read-only. Supports $filter (eq, ne, not, ge, le, in).
       */
      onPremisesLastSyncDateTime?: string | null
      /** @description The on-premises security identifier (SID) for the user who was synchronized from on-premises to the cloud. Read-only. Returned only on $select. Supports $filter (eq). */
      onPremisesSecurityIdentifier?: string | null
      /** @description true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter (eq, ne, not, in, and eq on null values). */
      onPremisesSyncEnabled?: boolean | null
      /** @description The type of operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values). */
      operatingSystem?: string | null
      /** @description The version of the operating system on the device. Required. Supports $filter (eq, ne, not, ge, le, startsWith, and eq on null values). */
      operatingSystemVersion?: string | null
      /** @description For internal use only. Not nullable. Supports $filter (eq, not, ge, le, startsWith,/$count eq 0, /$count ne 0). */
      physicalIds?: string[]
      /** @description The profile type of the device. Possible values: RegisteredDevice (default), SecureVM, Printer, Shared, IoT. */
      profileType?: string | null
      /**
       * Format: date-time
       * @description Date and time of when the device was registered. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      registrationDateTime?: string | null
      /** @description List of labels applied to the device by the system. Supports $filter (/$count eq 0, /$count ne 0). */
      systemLabels?: string[]
      /** @description Type of trust for the joined device. Read-only. Possible values:  Workplace (indicates bring your own personal devices), AzureAd (Cloud-only joined devices), ServerAd (on-premises domain joined devices joined to Microsoft Entra ID). For more information, see Introduction to device management in Microsoft Entra ID. */
      trustType?: string | null
      /** @description The collection of open extensions defined for the device. Read-only. Nullable. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      /** @description Groups and administrative units that this device is a member of. Read-only. Nullable. Supports $expand. */
      memberOf?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description The user that cloud joined the device or registered their personal device. The registered owner is set at the time of registration. Read-only. Nullable. Supports $expand. */
      registeredOwners?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description Collection of registered users of the device. For cloud joined devices and registered personal devices, registered users are set to the same value as registered owners at the time of registration. Read-only. Nullable. Supports $expand. */
      registeredUsers?: components['schemas']['microsoft.graph.directoryObject'][]
      /** @description Groups and administrative units that the device is a member of. This operation is transitive. Supports $expand. */
      transitiveMemberOf?: components['schemas']['microsoft.graph.directoryObject'][]
      [key: string]: Record<string, never> | undefined
    }
    /**
     * authenticationPhoneType
     * @enum {string}
     */
    'microsoft.graph.authenticationPhoneType':
      | 'mobile'
      | 'alternateMobile'
      | 'office'
      | 'unknownFutureValue'
    /**
     * authenticationMethodSignInState
     * @enum {string}
     */
    'microsoft.graph.authenticationMethodSignInState':
      | 'notSupported'
      | 'notAllowedByPolicy'
      | 'notEnabled'
      | 'phoneNumberNotUnique'
      | 'ready'
      | 'notConfigured'
      | 'unknownFutureValue'
    /**
     * authenticationMethodKeyStrength
     * @enum {string}
     */
    'microsoft.graph.authenticationMethodKeyStrength':
      | 'normal'
      | 'weak'
      | 'unknown'
    /**
     * calendarRoleType
     * @enum {string}
     */
    'microsoft.graph.calendarRoleType':
      | 'none'
      | 'freeBusyRead'
      | 'limitedRead'
      | 'read'
      | 'write'
      | 'delegateWithoutPrivateEventAccess'
      | 'delegateWithPrivateEventAccess'
      | 'custom'
    'microsoft.graph.attendeeBase': components['schemas']['microsoft.graph.recipient'] & {
      type?: components['schemas']['microsoft.graph.attendeeType']
      [key: string]: Record<string, never> | undefined
    }
    /** timeSlot */
    'microsoft.graph.timeSlot': {
      end?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      start?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * bodyType
     * @enum {string}
     */
    'microsoft.graph.bodyType': 'text' | 'html'
    /** outlookGeoCoordinates */
    'microsoft.graph.outlookGeoCoordinates': {
      /**
       * Format: double
       * @description The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.
       */
      accuracy?: number | null
      /**
       * Format: double
       * @description The altitude of the location.
       */
      altitude?: number | null
      /**
       * Format: double
       * @description The accuracy of the altitude.
       */
      altitudeAccuracy?: number | null
      /**
       * Format: double
       * @description The latitude of the location.
       */
      latitude?: number | null
      /**
       * Format: double
       * @description The longitude of the location.
       */
      longitude?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * locationType
     * @enum {string}
     */
    'microsoft.graph.locationType':
      | 'default'
      | 'conferenceRoom'
      | 'homeAddress'
      | 'businessAddress'
      | 'geoCoordinates'
      | 'streetAddress'
      | 'hotel'
      | 'restaurant'
      | 'localBusiness'
      | 'postalAddress'
    /**
     * locationUniqueIdType
     * @enum {string}
     */
    'microsoft.graph.locationUniqueIdType':
      | 'unknown'
      | 'locationStore'
      | 'directory'
      | 'private'
      | 'bing'
    /** recurrencePattern */
    'microsoft.graph.recurrencePattern': {
      /**
       * Format: int32
       * @description The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.
       */
      dayOfMonth?: number
      /** @description A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly. */
      daysOfWeek?: components['schemas']['microsoft.graph.dayOfWeek'][]
      firstDayOfWeek?: components['schemas']['microsoft.graph.dayOfWeek']
      index?: components['schemas']['microsoft.graph.weekIndex']
      /**
       * Format: int32
       * @description The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.
       */
      interval?: number
      /**
       * Format: int32
       * @description The month in which the event occurs.  This is a number from 1 to 12.
       */
      month?: number
      type?: components['schemas']['microsoft.graph.recurrencePatternType']
      [key: string]: Record<string, never> | undefined
    }
    /** recurrenceRange */
    'microsoft.graph.recurrenceRange': {
      /**
       * Format: date
       * @description The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.
       */
      endDate?: string | null
      /**
       * Format: int32
       * @description The number of times to repeat the event. Required and must be positive if type is numbered.
       */
      numberOfOccurrences?: number
      /** @description Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used. */
      recurrenceTimeZone?: string | null
      /**
       * Format: date
       * @description The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.
       */
      startDate?: string | null
      type?: components['schemas']['microsoft.graph.recurrenceRangeType']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * responseType
     * @enum {string}
     */
    'microsoft.graph.responseType':
      | 'none'
      | 'organizer'
      | 'tentativelyAccepted'
      | 'accepted'
      | 'declined'
      | 'notResponded'
    'microsoft.graph.teamworkUserIdentity': components['schemas']['microsoft.graph.identity'] & {
      userIdentityType?: components['schemas']['microsoft.graph.teamworkUserIdentityType']
      [key: string]: Record<string, never> | undefined
    }
    /** teamsAppPermissionSet */
    'microsoft.graph.teamsAppPermissionSet': {
      /** @description A collection of resource-specific permissions. */
      resourceSpecificPermissions?: components['schemas']['microsoft.graph.teamsAppResourceSpecificPermission'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.teamsApp': components['schemas']['microsoft.graph.entity'] & {
      /** @description The name of the catalog app provided by the app developer in the Microsoft Teams zip app package. */
      displayName?: string | null
      distributionMethod?: components['schemas']['microsoft.graph.teamsAppDistributionMethod']
      /** @description The ID of the catalog provided by the app developer in the Microsoft Teams zip app package. */
      externalId?: string | null
      /** @description The details for each version of the app. */
      appDefinitions?: components['schemas']['microsoft.graph.teamsAppDefinition'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.teamsAppDefinition': components['schemas']['microsoft.graph.entity'] & {
      authorization?: components['schemas']['microsoft.graph.teamsAppAuthorization']
      createdBy?: components['schemas']['microsoft.graph.identitySet']
      /** @description Verbose description of the application. */
      description?: string | null
      /** @description The name of the app provided by the app developer. */
      displayName?: string | null
      /** Format: date-time */
      lastModifiedDateTime?: string | null
      publishingState?: components['schemas']['microsoft.graph.teamsAppPublishingState']
      /** @description Short description of the application. */
      shortDescription?: string | null
      /** @description The ID from the Teams app manifest. */
      teamsAppId?: string | null
      /** @description The version number of the application. */
      version?: string | null
      bot?: components['schemas']['microsoft.graph.teamworkBot']
      [key: string]: Record<string, never> | undefined
    }
    /** eventMessageDetail */
    'microsoft.graph.eventMessageDetail': {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.chatMessageFromIdentitySet': components['schemas']['microsoft.graph.identitySet'] & {
      [key: string]: Record<string, never>
    }
    /**
     * chatMessageType
     * @enum {string}
     */
    'microsoft.graph.chatMessageType':
      | 'message'
      | 'chatEvent'
      | 'typing'
      | 'unknownFutureValue'
      | 'systemEventMessage'
    /** chatMessageAttachment */
    'microsoft.graph.chatMessageAttachment': {
      /** @description The content of the attachment. If the attachment is a rich card, set the property to the rich card object. This property and contentUrl are mutually exclusive. */
      content?: string | null
      /** @description The media type of the content attachment. It can have the following values: reference: Attachment is a link to another file. Populate the contentURL with the link to the object.Any contentType that is supported by the Bot Framework's Attachment objectapplication/vnd.microsoft.card.codesnippet: A code snippet. application/vnd.microsoft.card.announcement: An announcement header. */
      contentType?: string | null
      /** @description The URL for the content of the attachment. */
      contentUrl?: string | null
      /** @description Read-only. The unique id of the attachment. */
      id?: string | null
      /** @description The name of the attachment. */
      name?: string | null
      /** @description The ID of the Teams app that is associated with the attachment. The property is used to attribute a Teams message card to the specified app. */
      teamsAppId?: string | null
      /** @description The URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. When the user selects the image, the channel would open the document. */
      thumbnailUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** channelIdentity */
    'microsoft.graph.channelIdentity': {
      /** @description The identity of the channel in which the message was posted. */
      channelId?: string | null
      /** @description The identity of the team in which the message was posted. */
      teamId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * chatMessageImportance
     * @enum {string}
     */
    'microsoft.graph.chatMessageImportance':
      | 'normal'
      | 'high'
      | 'urgent'
      | 'unknownFutureValue'
    /** chatMessageMention */
    'microsoft.graph.chatMessageMention': {
      /**
       * Format: int32
       * @description Index of an entity being mentioned in the specified chatMessage. Matches the {index} value in the corresponding <at id='{index}'> tag in the message body.
       */
      id?: number | null
      mentioned?: components['schemas']['microsoft.graph.chatMessageMentionedIdentitySet']
      /** @description String used to represent the mention. For example, a user's display name, a team name. */
      mentionText?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** chatMessageHistoryItem */
    'microsoft.graph.chatMessageHistoryItem': {
      actions?: components['schemas']['microsoft.graph.chatMessageActions']
      /**
       * Format: date-time
       * @description The date and time when the message was modified.
       */
      modifiedDateTime?: string
      reaction?: components['schemas']['microsoft.graph.chatMessageReaction']
      [key: string]: Record<string, never> | undefined
    }
    /** chatMessagePolicyViolation */
    'microsoft.graph.chatMessagePolicyViolation': {
      dlpAction?: components['schemas']['microsoft.graph.chatMessagePolicyViolationDlpActionTypes']
      /** @description Justification text provided by the sender of the message when overriding a policy violation. */
      justificationText?: string | null
      policyTip?: components['schemas']['microsoft.graph.chatMessagePolicyViolationPolicyTip']
      userAction?: components['schemas']['microsoft.graph.chatMessagePolicyViolationUserActionTypes']
      verdictDetails?: components['schemas']['microsoft.graph.chatMessagePolicyViolationVerdictDetailsTypes']
      [key: string]: Record<string, never> | undefined
    }
    /** chatMessageReaction */
    'microsoft.graph.chatMessageReaction': {
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      createdDateTime?: string
      /** @description Supported values are like, angry, sad, laugh, heart, surprised. */
      reactionType?: string
      user?: components['schemas']['microsoft.graph.chatMessageReactionIdentitySet']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.chatMessageHostedContent': components['schemas']['microsoft.graph.teamworkHostedContent'] & {
      [key: string]: Record<string, never>
    }
    /** teamsTabConfiguration */
    'microsoft.graph.teamsTabConfiguration': {
      /** @description Url used for rendering tab contents in Teams. Required. */
      contentUrl?: string | null
      /** @description Identifier for the entity hosted by the tab provider. */
      entityId?: string | null
      /** @description Url called by Teams client when a Tab is removed using the Teams Client. */
      removeUrl?: string | null
      /** @description Url for showing tab contents outside of Teams. */
      websiteUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** cloudClipboardItemPayload */
    'microsoft.graph.cloudClipboardItemPayload': {
      /** @description The formatName version of the value of a cloud clipboard encoded in base64. */
      content?: string
      /** @description For a list of possible values see formatName values. */
      formatName?: string
      [key: string]: Record<string, never> | undefined
    }
    /**
     * courseStatus
     * @enum {string}
     */
    'microsoft.graph.courseStatus':
      | 'notStarted'
      | 'inProgress'
      | 'completed'
      | 'unknownFutureValue'
    'microsoft.graph.sharedInsight': components['schemas']['microsoft.graph.entity'] & {
      lastShared?: components['schemas']['microsoft.graph.sharingDetail']
      resourceReference?: components['schemas']['microsoft.graph.resourceReference']
      resourceVisualization?: components['schemas']['microsoft.graph.resourceVisualization']
      sharingHistory?: components['schemas']['microsoft.graph.sharingDetail'][]
      lastSharedMethod?: components['schemas']['microsoft.graph.entity']
      resource?: components['schemas']['microsoft.graph.entity']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.trending': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      lastModifiedDateTime?: string | null
      resourceReference?: components['schemas']['microsoft.graph.resourceReference']
      resourceVisualization?: components['schemas']['microsoft.graph.resourceVisualization']
      /**
       * Format: double
       * @description Value indicating how much the document is currently trending. The larger the number, the more the document is currently trending around the user (the more relevant it is). Returned documents are sorted by this value.
       */
      weight?: number
      resource?: components['schemas']['microsoft.graph.entity']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.usedInsight': components['schemas']['microsoft.graph.entity'] & {
      lastUsed?: components['schemas']['microsoft.graph.usageDetails']
      resourceReference?: components['schemas']['microsoft.graph.resourceReference']
      resourceVisualization?: components['schemas']['microsoft.graph.resourceVisualization']
      resource?: components['schemas']['microsoft.graph.entity']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * giphyRatingType
     * @enum {string}
     */
    'microsoft.graph.giphyRatingType':
      | 'strict'
      | 'moderate'
      | 'unknownFutureValue'
    /**
     * channelMembershipType
     * @enum {string}
     */
    'microsoft.graph.channelMembershipType':
      | 'standard'
      | 'private'
      | 'unknownFutureValue'
      | 'shared'
    /** channelSummary */
    'microsoft.graph.channelSummary': {
      /**
       * Format: int32
       * @description Count of guests in a channel.
       */
      guestsCount?: number | null
      /** @description Indicates whether external members are included on the channel. */
      hasMembersFromOtherTenants?: boolean | null
      /**
       * Format: int32
       * @description Count of members in a channel.
       */
      membersCount?: number | null
      /**
       * Format: int32
       * @description Count of owners in a channel.
       */
      ownersCount?: number | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.sharedWithChannelTeamInfo': components['schemas']['microsoft.graph.teamInfo'] & {
      /** @description Indicates whether the team is the host of the channel. */
      isHostTeam?: boolean | null
      /** @description A collection of team members who have access to the shared channel. */
      allowedMembers?: components['schemas']['microsoft.graph.conversationMember'][]
      [key: string]: Record<string, never> | undefined
    }
    /** assignedLabel */
    'microsoft.graph.assignedLabel': {
      /** @description The display name of the label. Read-only. */
      displayName?: string | null
      /** @description The unique identifier of the label. */
      labelId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** licenseProcessingState */
    'microsoft.graph.licenseProcessingState': {
      state?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.conversation': components['schemas']['microsoft.graph.entity'] & {
      /** @description Indicates whether any of the posts within this Conversation has at least one attachment. Supports $filter (eq, ne) and $search. */
      hasAttachments?: boolean
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      lastDeliveredDateTime?: string
      /** @description A short summary from the body of the latest post in this conversation. Supports $filter (eq, ne, le, ge). */
      preview?: string
      /** @description The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated. */
      topic?: string
      /** @description All the users that sent a message to this Conversation. */
      uniqueSenders?: string[]
      /** @description A collection of all the conversation threads in the conversation. A navigation property. Read-only. Nullable. */
      threads?: components['schemas']['microsoft.graph.conversationThread'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.groupLifecyclePolicy': components['schemas']['microsoft.graph.entity'] & {
      /** @description List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon. */
      alternateNotificationEmails?: string | null
      /**
       * Format: int32
       * @description Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.
       */
      groupLifetimeInDays?: number | null
      /** @description The group type for which the expiration policy applies. Possible values are All, Selected or None. */
      managedGroupTypes?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerGroup': components['schemas']['microsoft.graph.entity'] & {
      /** @description Read-only. Nullable. Returns the plannerPlans owned by the group. */
      plans?: components['schemas']['microsoft.graph.plannerPlan'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.groupSetting': components['schemas']['microsoft.graph.entity'] & {
      /** @description Display name of this group of settings, which comes from the associated template. */
      displayName?: string | null
      /** @description Unique identifier for the tenant-level groupSettingTemplates object that's been customized for this group-level settings object. Read-only. */
      templateId?: string | null
      /** @description Collection of name-value pairs corresponding to the name and defaultValue properties in the referenced groupSettingTemplates object. */
      values?: components['schemas']['microsoft.graph.settingValue'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.conversationThread': components['schemas']['microsoft.graph.entity'] & {
      /** @description The Cc: recipients for the thread. Returned only on $select. */
      ccRecipients?: components['schemas']['microsoft.graph.recipient'][]
      /** @description Indicates whether any of the posts within this thread has at least one attachment. Returned by default. */
      hasAttachments?: boolean
      /** @description Indicates if the thread is locked. Returned by default. */
      isLocked?: boolean
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.Returned by default.
       */
      lastDeliveredDateTime?: string
      /** @description A short summary from the body of the latest post in this conversation. Returned by default. */
      preview?: string
      /** @description The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated. Returned by default. */
      topic?: string
      /** @description The To: recipients for the thread. Returned only on $select. */
      toRecipients?: components['schemas']['microsoft.graph.recipient'][]
      /** @description All the users that sent a message to this thread. Returned by default. */
      uniqueSenders?: string[]
      posts?: components['schemas']['microsoft.graph.post'][]
      [key: string]: Record<string, never> | undefined
    }
    /** operationError */
    'microsoft.graph.operationError': {
      /** @description Operation error code. */
      code?: string | null
      /** @description Operation error message. */
      message?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * teamsAsyncOperationType
     * @enum {string}
     */
    'microsoft.graph.teamsAsyncOperationType':
      | 'invalid'
      | 'cloneTeam'
      | 'archiveTeam'
      | 'unarchiveTeam'
      | 'createTeam'
      | 'unknownFutureValue'
      | 'teamifyGroup'
      | 'createChannel'
      | 'archiveChannel'
      | 'unarchiveChannel'
    /**
     * teamsAsyncOperationStatus
     * @enum {string}
     */
    'microsoft.graph.teamsAsyncOperationStatus':
      | 'invalid'
      | 'notStarted'
      | 'inProgress'
      | 'succeeded'
      | 'failed'
      | 'unknownFutureValue'
    /**
     * operationStatus
     * @enum {string}
     */
    'microsoft.graph.operationStatus':
      | 'NotStarted'
      | 'Running'
      | 'Completed'
      | 'Failed'
    'microsoft.graph.offerShiftRequest': components['schemas']['microsoft.graph.scheduleChangeRequest'] & {
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      recipientActionDateTime?: string | null
      /** @description Custom message sent by recipient of the offer shift request. */
      recipientActionMessage?: string | null
      /** @description User ID of the recipient of the offer shift request. */
      recipientUserId?: string | null
      /** @description User ID of the sender of the offer shift request. */
      senderShiftId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.openShiftChangeRequest': components['schemas']['microsoft.graph.scheduleChangeRequest'] & {
      /** @description ID for the open shift. */
      openShiftId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.openShift': components['schemas']['microsoft.graph.changeTrackedEntity'] & {
      draftOpenShift?: components['schemas']['microsoft.graph.openShiftItem']
      /** @description ID for the scheduling group that the open shift belongs to. */
      schedulingGroupId?: string | null
      sharedOpenShift?: components['schemas']['microsoft.graph.openShiftItem']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.schedulingGroup': components['schemas']['microsoft.graph.changeTrackedEntity'] & {
      /** @description The display name for the schedulingGroup. Required. */
      displayName?: string | null
      /** @description Indicates whether the schedulingGroup can be used when creating new entities or updating existing ones. Required. */
      isActive?: boolean | null
      /** @description The list of user IDs that are a member of the schedulingGroup. Required. */
      userIds?: (string | null)[]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.shift': components['schemas']['microsoft.graph.changeTrackedEntity'] & {
      draftShift?: components['schemas']['microsoft.graph.shiftItem']
      /** @description ID of the scheduling group the shift is part of. Required. */
      schedulingGroupId?: string | null
      sharedShift?: components['schemas']['microsoft.graph.shiftItem']
      /** @description ID of the user assigned to the shift. Required. */
      userId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.swapShiftsChangeRequest': components['schemas']['microsoft.graph.offerShiftRequest'] & {
      /** @description ShiftId for the recipient user with whom the request is to swap. */
      recipientShiftId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.timeOffReason': components['schemas']['microsoft.graph.changeTrackedEntity'] & {
      /** @description The name of the timeOffReason. Required. */
      displayName?: string | null
      iconType?: components['schemas']['microsoft.graph.timeOffReasonIconType']
      /** @description Indicates whether the timeOffReason can be used when creating new entities or updating existing ones. Required. */
      isActive?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.timeOffRequest': components['schemas']['microsoft.graph.scheduleChangeRequest'] & {
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      endDateTime?: string | null
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      startDateTime?: string | null
      /** @description The reason for the time off. */
      timeOffReasonId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.timeOff': components['schemas']['microsoft.graph.changeTrackedEntity'] & {
      draftTimeOff?: components['schemas']['microsoft.graph.timeOffItem']
      sharedTimeOff?: components['schemas']['microsoft.graph.timeOffItem']
      /** @description ID of the user assigned to the timeOff. Required. */
      userId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * teamworkTagType
     * @enum {string}
     */
    'microsoft.graph.teamworkTagType': 'standard' | 'unknownFutureValue'
    'microsoft.graph.teamworkTagMember': components['schemas']['microsoft.graph.entity'] & {
      /** @description The member's display name. */
      displayName?: string | null
      /** @description The ID of the tenant that the tag member is a part of. */
      tenantId?: string | null
      /** @description The user ID of the member. */
      userId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** messageRuleActions */
    'microsoft.graph.messageRuleActions': {
      /** @description A list of categories to be assigned to a message. */
      assignCategories?: (string | null)[]
      /** @description The ID of a folder that a message is to be copied to. */
      copyToFolder?: string | null
      /** @description Indicates whether a message should be moved to the Deleted Items folder. */
      delete?: boolean | null
      /** @description The email addresses of the recipients to which a message should be forwarded as an attachment. */
      forwardAsAttachmentTo?: components['schemas']['microsoft.graph.recipient'][]
      /** @description The email addresses of the recipients to which a message should be forwarded. */
      forwardTo?: components['schemas']['microsoft.graph.recipient'][]
      /** @description Indicates whether a message should be marked as read. */
      markAsRead?: boolean | null
      markImportance?: components['schemas']['microsoft.graph.importance']
      /** @description The ID of the folder that a message will be moved to. */
      moveToFolder?: string | null
      /** @description Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder. */
      permanentDelete?: boolean | null
      /** @description The email addresses to which a message should be redirected. */
      redirectTo?: components['schemas']['microsoft.graph.recipient'][]
      /** @description Indicates whether subsequent rules should be evaluated. */
      stopProcessingRules?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    /** messageRulePredicates */
    'microsoft.graph.messageRulePredicates': {
      /** @description Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply. */
      bodyContains?: (string | null)[]
      /** @description Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply. */
      bodyOrSubjectContains?: (string | null)[]
      /** @description Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply. */
      categories?: (string | null)[]
      /** @description Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply. */
      fromAddresses?: components['schemas']['microsoft.graph.recipient'][]
      /** @description Indicates whether an incoming message must have attachments in order for the condition or exception to apply. */
      hasAttachments?: boolean | null
      /** @description Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply. */
      headerContains?: (string | null)[]
      importance?: components['schemas']['microsoft.graph.importance']
      /** @description Indicates whether an incoming message must be an approval request in order for the condition or exception to apply. */
      isApprovalRequest?: boolean | null
      /** @description Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply. */
      isAutomaticForward?: boolean | null
      /** @description Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply. */
      isAutomaticReply?: boolean | null
      /** @description Indicates whether an incoming message must be encrypted in order for the condition or exception to apply. */
      isEncrypted?: boolean | null
      /** @description Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply. */
      isMeetingRequest?: boolean | null
      /** @description Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply. */
      isMeetingResponse?: boolean | null
      /** @description Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply. */
      isNonDeliveryReport?: boolean | null
      /** @description Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply. */
      isPermissionControlled?: boolean | null
      /** @description Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply. */
      isReadReceipt?: boolean | null
      /** @description Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply. */
      isSigned?: boolean | null
      /** @description Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply. */
      isVoicemail?: boolean | null
      messageActionFlag?: components['schemas']['microsoft.graph.messageActionFlag']
      /** @description Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply. */
      notSentToMe?: boolean | null
      /** @description Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply. */
      recipientContains?: (string | null)[]
      /** @description Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply. */
      senderContains?: (string | null)[]
      sensitivity?: components['schemas']['microsoft.graph.sensitivity']
      /** @description Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply. */
      sentCcMe?: boolean | null
      /** @description Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply. */
      sentOnlyToMe?: boolean | null
      /** @description Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply. */
      sentToAddresses?: components['schemas']['microsoft.graph.recipient'][]
      /** @description Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply. */
      sentToMe?: boolean | null
      /** @description Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply. */
      sentToOrCcMe?: boolean | null
      /** @description Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply. */
      subjectContains?: (string | null)[]
      withinSizeRange?: components['schemas']['microsoft.graph.sizeRange']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * actionState
     * @description State of the action on the device
     * @enum {string}
     */
    'microsoft.graph.actionState':
      | 'none'
      | 'pending'
      | 'canceled'
      | 'active'
      | 'done'
      | 'failed'
      | 'notSupported'
    /**
     * policyPlatformType
     * @description Supported platform types for policies.
     * @enum {string}
     */
    'microsoft.graph.policyPlatformType':
      | 'android'
      | 'androidForWork'
      | 'iOS'
      | 'macOS'
      | 'windowsPhone81'
      | 'windows81AndLater'
      | 'windows10AndLater'
      | 'all'
    /**
     * deviceCompliancePolicySettingState
     * @description Device Compilance Policy Setting State for a given device.
     */
    'microsoft.graph.deviceCompliancePolicySettingState': {
      /** @description Current value of setting on device */
      currentValue?: string | null
      /**
       * Format: int64
       * @description Error code for the setting
       */
      errorCode?: number
      /** @description Error description */
      errorDescription?: string | null
      /** @description Name of setting instance that is being reported. */
      instanceDisplayName?: string | null
      /** @description The setting that is being reported */
      setting?: string | null
      /** @description Localized/user friendly setting name that is being reported */
      settingName?: string | null
      /** @description Contributing policies */
      sources?: components['schemas']['microsoft.graph.settingSource'][]
      state?: components['schemas']['microsoft.graph.complianceStatus']
      /** @description UserEmail */
      userEmail?: string | null
      /** @description UserId */
      userId?: string | null
      /** @description UserName */
      userName?: string | null
      /** @description UserPrincipalName. */
      userPrincipalName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * complianceStatus
     * @enum {string}
     */
    'microsoft.graph.complianceStatus':
      | 'unknown'
      | 'notApplicable'
      | 'compliant'
      | 'remediated'
      | 'nonCompliant'
      | 'error'
      | 'conflict'
      | 'notAssigned'
    /**
     * deviceConfigurationSettingState
     * @description Device Configuration Setting State for a given device.
     */
    'microsoft.graph.deviceConfigurationSettingState': {
      /** @description Current value of setting on device */
      currentValue?: string | null
      /**
       * Format: int64
       * @description Error code for the setting
       */
      errorCode?: number
      /** @description Error description */
      errorDescription?: string | null
      /** @description Name of setting instance that is being reported. */
      instanceDisplayName?: string | null
      /** @description The setting that is being reported */
      setting?: string | null
      /** @description Localized/user friendly setting name that is being reported */
      settingName?: string | null
      /** @description Contributing policies */
      sources?: components['schemas']['microsoft.graph.settingSource'][]
      state?: components['schemas']['microsoft.graph.complianceStatus']
      /** @description UserEmail */
      userEmail?: string | null
      /** @description UserId */
      userId?: string | null
      /** @description UserName */
      userName?: string | null
      /** @description UserPrincipalName. */
      userPrincipalName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * appLogUploadState
     * @description AppLogUploadStatus
     * @enum {string}
     */
    'microsoft.graph.appLogUploadState':
      | 'pending'
      | 'completed'
      | 'failed'
      | 'unknownFutureValue'
    /**
     * windowsDeviceHealthState
     * @description Computer endpoint protection state
     * @enum {string}
     */
    'microsoft.graph.windowsDeviceHealthState':
      | 'clean'
      | 'fullScanPending'
      | 'rebootPending'
      | 'manualStepsPending'
      | 'offlineScanPending'
      | 'critical'
    /**
     * windowsDefenderProductStatus
     * @description Product Status of Windows Defender
     * @enum {string}
     */
    'microsoft.graph.windowsDefenderProductStatus':
      | 'noStatus'
      | 'serviceNotRunning'
      | 'serviceStartedWithoutMalwareProtection'
      | 'pendingFullScanDueToThreatAction'
      | 'pendingRebootDueToThreatAction'
      | 'pendingManualStepsDueToThreatAction'
      | 'avSignaturesOutOfDate'
      | 'asSignaturesOutOfDate'
      | 'noQuickScanHappenedForSpecifiedPeriod'
      | 'noFullScanHappenedForSpecifiedPeriod'
      | 'systemInitiatedScanInProgress'
      | 'systemInitiatedCleanInProgress'
      | 'samplesPendingSubmission'
      | 'productRunningInEvaluationMode'
      | 'productRunningInNonGenuineMode'
      | 'productExpired'
      | 'offlineScanRequired'
      | 'serviceShutdownAsPartOfSystemShutdown'
      | 'threatRemediationFailedCritically'
      | 'threatRemediationFailedNonCritically'
      | 'noStatusFlagsSet'
      | 'platformOutOfDate'
      | 'platformUpdateInProgress'
      | 'platformAboutToBeOutdated'
      | 'signatureOrPlatformEndOfLifeIsPastOrIsImpending'
      | 'windowsSModeSignaturesInUseOnNonWin10SInstall'
    'microsoft.graph.windowsDeviceMalwareState': components['schemas']['microsoft.graph.entity'] & {
      /** @description Information URL to learn more about the malware */
      additionalInformationUrl?: string | null
      category?: components['schemas']['microsoft.graph.windowsMalwareCategory']
      /**
       * Format: int32
       * @description Number of times the malware is detected
       */
      detectionCount?: number | null
      /** @description Malware name */
      displayName?: string | null
      executionState?: components['schemas']['microsoft.graph.windowsMalwareExecutionState']
      /**
       * Format: date-time
       * @description Initial detection datetime of the malware
       */
      initialDetectionDateTime?: string | null
      /**
       * Format: date-time
       * @description The last time this particular threat was changed
       */
      lastStateChangeDateTime?: string | null
      severity?: components['schemas']['microsoft.graph.windowsMalwareSeverity']
      state?: components['schemas']['microsoft.graph.windowsMalwareState']
      threatState?: components['schemas']['microsoft.graph.windowsMalwareThreatState']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * followupFlagStatus
     * @enum {string}
     */
    'microsoft.graph.followupFlagStatus': 'notFlagged' | 'complete' | 'flagged'
    'microsoft.graph.onenoteEntityHierarchyModel': components['schemas']['microsoft.graph.onenoteEntitySchemaObjectModel'] & {
      createdBy?: components['schemas']['microsoft.graph.identitySet']
      /** @description The name of the notebook. */
      displayName?: string | null
      lastModifiedBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      lastModifiedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** notebookLinks */
    'microsoft.graph.notebookLinks': {
      oneNoteClientUrl?: components['schemas']['microsoft.graph.externalLink']
      oneNoteWebUrl?: components['schemas']['microsoft.graph.externalLink']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * onenoteUserRole
     * @enum {string}
     */
    'microsoft.graph.onenoteUserRole':
      | 'None'
      | 'Owner'
      | 'Contributor'
      | 'Reader'
    'microsoft.graph.operation': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description The start time of the operation.
       */
      createdDateTime?: string | null
      /**
       * Format: date-time
       * @description The time of the last action of the operation.
       */
      lastActionDateTime?: string | null
      status?: components['schemas']['microsoft.graph.operationStatus']
      [key: string]: Record<string, never> | undefined
    }
    /** onenoteOperationError */
    'microsoft.graph.onenoteOperationError': {
      /** @description The error code. */
      code?: string | null
      /** @description The error message. */
      message?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onenoteEntitySchemaObjectModel': components['schemas']['microsoft.graph.onenoteEntityBaseModel'] & {
      /**
       * Format: date-time
       * @description The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      createdDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** pageLinks */
    'microsoft.graph.pageLinks': {
      oneNoteClientUrl?: components['schemas']['microsoft.graph.externalLink']
      oneNoteWebUrl?: components['schemas']['microsoft.graph.externalLink']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.onenoteEntityBaseModel': components['schemas']['microsoft.graph.entity'] & {
      /** @description The endpoint where you can get details about the page. Read-only. */
      self?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** sectionLinks */
    'microsoft.graph.sectionLinks': {
      oneNoteClientUrl?: components['schemas']['microsoft.graph.externalLink']
      oneNoteWebUrl?: components['schemas']['microsoft.graph.externalLink']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * onlineMeetingPresenters
     * @enum {string}
     */
    'microsoft.graph.onlineMeetingPresenters':
      | 'everyone'
      | 'organization'
      | 'roleIsPresenter'
      | 'organizer'
      | 'unknownFutureValue'
    /**
     * meetingChatMode
     * @enum {string}
     */
    'microsoft.graph.meetingChatMode':
      | 'enabled'
      | 'disabled'
      | 'limited'
      | 'unknownFutureValue'
    /** audioConferencing */
    'microsoft.graph.audioConferencing': {
      /** @description The conference id of the online meeting. */
      conferenceId?: string | null
      /** @description A URL to the externally-accessible web page that contains dial-in information. */
      dialinUrl?: string | null
      /** @description The toll-free number that connects to the Audio Conference Provider. */
      tollFreeNumber?: string | null
      /** @description List of toll-free numbers that are displayed in the meeting invite. */
      tollFreeNumbers?: (string | null)[]
      /** @description The toll number that connects to the Audio Conference Provider. */
      tollNumber?: string | null
      /** @description List of toll numbers that are displayed in the meeting invite. */
      tollNumbers?: (string | null)[]
      [key: string]: Record<string, never> | undefined
    }
    /** chatInfo */
    'microsoft.graph.chatInfo': {
      /** @description The unique identifier of a message in a Microsoft Teams channel. */
      messageId?: string | null
      /** @description The ID of the reply message. */
      replyChainMessageId?: string | null
      /** @description The unique identifier for a thread in Microsoft Teams. */
      threadId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** joinMeetingIdSettings */
    'microsoft.graph.joinMeetingIdSettings': {
      /** @description Indicates whether a passcode is required to join a meeting when using joinMeetingId. Optional. */
      isPasscodeRequired?: boolean | null
      /** @description The meeting ID to be used to join a meeting. Optional. Read-only. */
      joinMeetingId?: string | null
      /** @description The passcode to join a meeting.  Optional. Read-only. */
      passcode?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** lobbyBypassSettings */
    'microsoft.graph.lobbyBypassSettings': {
      /** @description Specifies whether or not to always let dial-in callers bypass the lobby. Optional. */
      isDialInBypassEnabled?: boolean | null
      scope?: components['schemas']['microsoft.graph.lobbyBypassScope']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * meetingChatHistoryDefaultMode
     * @enum {string}
     */
    'microsoft.graph.meetingChatHistoryDefaultMode':
      | 'none'
      | 'all'
      | 'unknownFutureValue'
    /** watermarkProtectionValues */
    'microsoft.graph.watermarkProtectionValues': {
      /** @description Indicates whether to apply a watermark to any shared content. */
      isEnabledForContentSharing?: boolean | null
      /** @description Indicates whether to apply a watermark to everyone's video feed. */
      isEnabledForVideo?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.meetingAttendanceReport': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description UTC time when the meeting ended. Read-only.
       */
      meetingEndDateTime?: string | null
      /**
       * Format: date-time
       * @description UTC time when the meeting started. Read-only.
       */
      meetingStartDateTime?: string | null
      /**
       * Format: int32
       * @description Total number of participants. Read-only.
       */
      totalParticipantCount?: number | null
      /** @description List of attendance records of an attendance report. Read-only. */
      attendanceRecords?: components['schemas']['microsoft.graph.attendanceRecord'][]
      [key: string]: Record<string, never> | undefined
    }
    /**
     * broadcastMeetingAudience
     * @enum {string}
     */
    'microsoft.graph.broadcastMeetingAudience':
      | 'roleIsAttendee'
      | 'organization'
      | 'everyone'
      | 'unknownFutureValue'
    /** broadcastMeetingCaptionSettings */
    'microsoft.graph.broadcastMeetingCaptionSettings': {
      /** @description Indicates whether captions are enabled for this Teams live event. */
      isCaptionEnabled?: boolean | null
      /** @description The spoken language. */
      spokenLanguage?: string | null
      /** @description The translation languages (choose up to 6). */
      translationLanguages?: (string | null)[]
      [key: string]: Record<string, never> | undefined
    }
    /** meetingParticipantInfo */
    'microsoft.graph.meetingParticipantInfo': {
      identity?: components['schemas']['microsoft.graph.identitySet']
      role?: components['schemas']['microsoft.graph.onlineMeetingRole']
      /** @description User principal name of the participant. */
      upn?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * categoryColor
     * @enum {string}
     */
    'microsoft.graph.categoryColor':
      | 'none'
      | 'preset0'
      | 'preset1'
      | 'preset2'
      | 'preset3'
      | 'preset4'
      | 'preset5'
      | 'preset6'
      | 'preset7'
      | 'preset8'
      | 'preset9'
      | 'preset10'
      | 'preset11'
      | 'preset12'
      | 'preset13'
      | 'preset14'
      | 'preset15'
      | 'preset16'
      | 'preset17'
      | 'preset18'
      | 'preset19'
      | 'preset20'
      | 'preset21'
      | 'preset22'
      | 'preset23'
      | 'preset24'
    /**
     * phoneType
     * @enum {string}
     */
    'microsoft.graph.phoneType':
      | 'home'
      | 'business'
      | 'mobile'
      | 'other'
      | 'assistant'
      | 'homeFax'
      | 'businessFax'
      | 'otherFax'
      | 'pager'
      | 'radio'
    /**
     * selectionLikelihoodInfo
     * @enum {string}
     */
    'microsoft.graph.selectionLikelihoodInfo': 'notSpecified' | 'high'
    /**
     * websiteType
     * @enum {string}
     */
    'microsoft.graph.websiteType':
      | 'other'
      | 'home'
      | 'work'
      | 'blog'
      | 'profile'
    /** plannerPlanContainer */
    'microsoft.graph.plannerPlanContainer': {
      /** @description The identifier of the resource that contains the plan. Optional. */
      containerId?: string | null
      type?: components['schemas']['microsoft.graph.plannerContainerType']
      /** @description The full canonical URL of the container. Optional. */
      url?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerBucket': components['schemas']['microsoft.graph.entity'] & {
      /** @description Name of the bucket. */
      name?: string
      /** @description Hint used to order items of this type in a list view. For details about the supported format, see Using order hints in Planner. */
      orderHint?: string | null
      /** @description Plan ID to which the bucket belongs. */
      planId?: string | null
      /** @description Read-only. Nullable. The collection of tasks in the bucket. */
      tasks?: components['schemas']['microsoft.graph.plannerTask'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerPlanDetails': components['schemas']['microsoft.graph.entity'] & {
      categoryDescriptions?: components['schemas']['microsoft.graph.plannerCategoryDescriptions']
      sharedWith?: components['schemas']['microsoft.graph.plannerUserIds']
      [key: string]: Record<string, never> | undefined
    }
    /** plannerAppliedCategories */
    'microsoft.graph.plannerAppliedCategories': {
      [key: string]: Record<string, never>
    }
    /** plannerAssignments */
    'microsoft.graph.plannerAssignments': {
      [key: string]: Record<string, never>
    }
    /**
     * plannerPreviewType
     * @enum {string}
     */
    'microsoft.graph.plannerPreviewType':
      | 'automatic'
      | 'noPreview'
      | 'checklist'
      | 'description'
      | 'reference'
    'microsoft.graph.plannerAssignedToTaskBoardTaskFormat': components['schemas']['microsoft.graph.entity'] & {
      orderHintsByAssignee?: components['schemas']['microsoft.graph.plannerOrderHintsByAssignee']
      /** @description Hint value used to order the task on the AssignedTo view of the Task Board when the task isn't assigned to anyone, or if the orderHintsByAssignee dictionary doesn't provide an order hint for the user the task is assigned to. The format is defined as outlined here. */
      unassignedOrderHint?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerBucketTaskBoardTaskFormat': components['schemas']['microsoft.graph.entity'] & {
      /** @description Hint used to order tasks in the bucket view of the task board. For details about the supported format, see Using order hints in Planner. */
      orderHint?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerTaskDetails': components['schemas']['microsoft.graph.entity'] & {
      checklist?: components['schemas']['microsoft.graph.plannerChecklistItems']
      /** @description Description of the task. */
      description?: string | null
      previewType?: components['schemas']['microsoft.graph.plannerPreviewType']
      references?: components['schemas']['microsoft.graph.plannerExternalReferences']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.plannerProgressTaskBoardTaskFormat': components['schemas']['microsoft.graph.entity'] & {
      /** @description Hint value used to order the task on the progress view of the task board. For details about the supported format, see Using order hints in Planner. */
      orderHint?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.changeTrackedEntity': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      createdDateTime?: string | null
      lastModifiedBy?: components['schemas']['microsoft.graph.identitySet']
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      lastModifiedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** shiftAvailability */
    'microsoft.graph.shiftAvailability': {
      recurrence?: components['schemas']['microsoft.graph.patternedRecurrence']
      /** @description The time slot(s) preferred by the user. */
      timeSlots?: components['schemas']['microsoft.graph.timeRange'][]
      /** @description Specifies the time zone for the indicated time. */
      timeZone?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.unifiedStorageQuota': components['schemas']['microsoft.graph.entity'] & {
      /** Format: int64 */
      deleted?: number | null
      manageWebUrl?: string | null
      /** Format: int64 */
      remaining?: number | null
      state?: string | null
      /** Format: int64 */
      total?: number | null
      /** Format: int64 */
      used?: number | null
      services?: components['schemas']['microsoft.graph.serviceStorageQuotaBreakdown'][]
      [key: string]: Record<string, never> | undefined
    }
    /**
     * windowsSettingType
     * @enum {string}
     */
    'microsoft.graph.windowsSettingType':
      | 'roaming'
      | 'backup'
      | 'unknownFutureValue'
    'microsoft.graph.windowsSettingInstance': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description Set by the server. Represents the dateTime in UTC when the object was created on the server.
       */
      createdDateTime?: string
      /**
       * Format: date-time
       * @description Set by the server. The object expires at the specified dateTime in UTC, making it unavailable after that time.
       */
      expirationDateTime?: string
      /**
       * Format: date-time
       * @description Set by the server if not provided in the request from the Windows client device. Refers to the user's Windows device that modified the object at the specified dateTime in UTC.
       */
      lastModifiedDateTime?: string | null
      /** @description Base64-encoded JSON setting value. */
      payload?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.teamInfo': components['schemas']['microsoft.graph.entity'] & {
      /** @description The name of the team. */
      displayName?: string | null
      /** @description The ID of the Microsoft Entra tenant. */
      tenantId?: string | null
      team?: components['schemas']['microsoft.graph.team']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * wellknownListName
     * @enum {string}
     */
    'microsoft.graph.wellknownListName':
      | 'none'
      | 'defaultList'
      | 'flaggedEmails'
      | 'unknownFutureValue'
    'microsoft.graph.todoTask': components['schemas']['microsoft.graph.entity'] & {
      body?: components['schemas']['microsoft.graph.itemBody']
      /**
       * Format: date-time
       * @description The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
       */
      bodyLastModifiedDateTime?: string
      /** @description The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined. */
      categories?: (string | null)[]
      completedDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      /**
       * Format: date-time
       * @description The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
       */
      createdDateTime?: string
      dueDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      /** @description Indicates whether the task has attachments. */
      hasAttachments?: boolean | null
      importance?: components['schemas']['microsoft.graph.importance']
      /** @description Set to true if an alert is set to remind the user of the task. */
      isReminderOn?: boolean
      /**
       * Format: date-time
       * @description The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'.
       */
      lastModifiedDateTime?: string
      recurrence?: components['schemas']['microsoft.graph.patternedRecurrence']
      reminderDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      startDateTime?: components['schemas']['microsoft.graph.dateTimeTimeZone']
      status?: components['schemas']['microsoft.graph.taskStatus']
      /** @description A brief description of the task. */
      title?: string | null
      /** @description A collection of file attachments for the task. */
      attachments?: components['schemas']['microsoft.graph.attachmentBase'][]
      attachmentSessions?: components['schemas']['microsoft.graph.attachmentSession'][]
      /** @description A collection of checklistItems linked to a task. */
      checklistItems?: components['schemas']['microsoft.graph.checklistItem'][]
      /** @description The collection of open extensions defined for the task. Nullable. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      /** @description A collection of resources linked to the task. */
      linkedResources?: components['schemas']['microsoft.graph.linkedResource'][]
      [key: string]: Record<string, never> | undefined
    }
    /** localizedDescription */
    'microsoft.graph.termStore.localizedDescription': {
      /** @description The description in the localized language. */
      description?: string | null
      /** @description The language tag for the label. */
      languageTag?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** localizedLabel */
    'microsoft.graph.termStore.localizedLabel': {
      /** @description Indicates whether the label is the default label. */
      isDefault?: boolean | null
      /** @description The language tag for the label. */
      languageTag?: string | null
      /** @description The name of the label. */
      name?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** keyValue */
    'microsoft.graph.keyValue': {
      /** @description Key for the key-value pair. */
      key?: string | null
      /** @description Value for the key-value pair. */
      value?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.termStore.relation': components['schemas']['microsoft.graph.entity'] & {
      relationship?: components['schemas']['microsoft.graph.termStore.relationType']
      fromTerm?: components['schemas']['microsoft.graph.termStore.term']
      set?: components['schemas']['microsoft.graph.termStore.set']
      toTerm?: components['schemas']['microsoft.graph.termStore.term']
      [key: string]: Record<string, never> | undefined
    }
    /** localizedName */
    'microsoft.graph.termStore.localizedName': {
      /** @description The language tag for the label. */
      languageTag?: string | null
      /** @description The name in the localized language. */
      name?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * siteArchiveStatus
     * @enum {string}
     */
    'microsoft.graph.siteArchiveStatus':
      | 'recentlyArchived'
      | 'fullyArchived'
      | 'reactivating'
      | 'unknownFutureValue'
    /**
     * termGroupScope
     * @enum {string}
     */
    'microsoft.graph.termStore.termGroupScope':
      | 'global'
      | 'system'
      | 'siteCollection'
      | 'unknownFutureValue'
    'microsoft.graph.ODataErrors.ErrorDetails': {
      code: string
      message: string
      target?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** @description The structure of this object is service-specific */
    'microsoft.graph.ODataErrors.InnerError': {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.workbookFilter': components['schemas']['microsoft.graph.entity'] & {
      criteria?: components['schemas']['microsoft.graph.workbookFilterCriteria']
      [key: string]: Record<string, never> | undefined
    }
    /** workbookSortField */
    'microsoft.graph.workbookSortField': {
      /** @description Represents whether the sorting is done in an ascending fashion. */
      ascending?: boolean
      /** @description Represents the color that is the target of the condition if the sorting is on font or cell color. */
      color?: string | null
      /** @description Represents additional sorting options for this field. The possible values are: Normal, TextAsNumber. */
      dataOption?: string
      icon?: components['schemas']['microsoft.graph.workbookIcon']
      /**
       * Format: int32
       * @description Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).
       */
      key?: number
      /** @description Represents the type of sorting of this condition. The possible values are: Value, CellColor, FontColor, Icon. */
      sortOn?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartAxes': components['schemas']['microsoft.graph.entity'] & {
      categoryAxis?: components['schemas']['microsoft.graph.workbookChartAxis']
      seriesAxis?: components['schemas']['microsoft.graph.workbookChartAxis']
      valueAxis?: components['schemas']['microsoft.graph.workbookChartAxis']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartDataLabels': components['schemas']['microsoft.graph.entity'] & {
      /** @description DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout. */
      position?: string | null
      /** @description String that represents the separator used for the data labels on a chart. */
      separator?: string | null
      /** @description Boolean value that represents whether the data label bubble size is visible. */
      showBubbleSize?: boolean | null
      /** @description Boolean value that represents whether the data label category name is visible. */
      showCategoryName?: boolean | null
      /** @description Boolean value that represents whether the data label legend key is visible. */
      showLegendKey?: boolean | null
      /** @description Boolean value that represents whether the data label percentage is visible. */
      showPercentage?: boolean | null
      /** @description Boolean value that represents whether the data label series name is visible. */
      showSeriesName?: boolean | null
      /** @description Boolean value that represents whether the data label value is visible. */
      showValue?: boolean | null
      format?: components['schemas']['microsoft.graph.workbookChartDataLabelFormat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartAreaFormat': components['schemas']['microsoft.graph.entity'] & {
      fill?: components['schemas']['microsoft.graph.workbookChartFill']
      font?: components['schemas']['microsoft.graph.workbookChartFont']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartLegend': components['schemas']['microsoft.graph.entity'] & {
      /** @description Indicates whether the chart legend should overlap with the main body of the chart. */
      overlay?: boolean | null
      /** @description Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom. */
      position?: string | null
      /** @description Indicates whether the chart legend is visible. */
      visible?: boolean
      format?: components['schemas']['microsoft.graph.workbookChartLegendFormat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartSeries': components['schemas']['microsoft.graph.entity'] & {
      /** @description The name of a series in a chart. */
      name?: string | null
      format?: components['schemas']['microsoft.graph.workbookChartSeriesFormat']
      /** @description A collection of all points in the series. Read-only. */
      points?: components['schemas']['microsoft.graph.workbookChartPoint'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartTitle': components['schemas']['microsoft.graph.entity'] & {
      /** @description Indicates whether the chart title will overlay the chart or not. */
      overlay?: boolean | null
      /** @description The title text of the chart. */
      text?: string | null
      /** @description Indicates whether the chart title is visible. */
      visible?: boolean
      format?: components['schemas']['microsoft.graph.workbookChartTitleFormat']
      [key: string]: Record<string, never> | undefined
    }
    /** workbookWorksheetProtectionOptions */
    'microsoft.graph.workbookWorksheetProtectionOptions': {
      /** @description Represents the worksheet protection option of allowing using auto filter feature. */
      allowAutoFilter?: boolean
      /** @description Represents the worksheet protection option of allowing deleting columns. */
      allowDeleteColumns?: boolean
      /** @description Represents the worksheet protection option of allowing deleting rows. */
      allowDeleteRows?: boolean
      /** @description Represents the worksheet protection option of allowing formatting cells. */
      allowFormatCells?: boolean
      /** @description Represents the worksheet protection option of allowing formatting columns. */
      allowFormatColumns?: boolean
      /** @description Represents the worksheet protection option of allowing formatting rows. */
      allowFormatRows?: boolean
      /** @description Represents the worksheet protection option of allowing inserting columns. */
      allowInsertColumns?: boolean
      /** @description Represents the worksheet protection option of allowing inserting hyperlinks. */
      allowInsertHyperlinks?: boolean
      /** @description Represents the worksheet protection option of allowing inserting rows. */
      allowInsertRows?: boolean
      /** @description Represents the worksheet protection option of allowing using pivot table feature. */
      allowPivotTables?: boolean
      /** @description Represents the worksheet protection option of allowing using sort feature. */
      allowSort?: boolean
      [key: string]: Record<string, never> | undefined
    }
    /** printerCapabilities */
    'microsoft.graph.printerCapabilities': {
      /** @description A list of supported bottom margins(in microns) for the printer. */
      bottomMargins?: (number | null)[]
      /** @description True if the printer supports collating when printing muliple copies of a multi-page document; false otherwise. */
      collation?: boolean | null
      /** @description The color modes supported by the printer. Valid values are described in the following table. */
      colorModes?: components['schemas']['microsoft.graph.printColorMode'][]
      /** @description A list of supported content (MIME) types that the printer supports. It is not guaranteed that the Universal Print service supports printing all of these MIME types. */
      contentTypes?: (string | null)[]
      copiesPerJob?: components['schemas']['microsoft.graph.integerRange']
      /** @description The list of print resolutions in DPI that are supported by the printer. */
      dpis?: (number | null)[]
      /** @description The list of duplex modes that are supported by the printer. Valid values are described in the following table. */
      duplexModes?: components['schemas']['microsoft.graph.printDuplexMode'][]
      /** @description The list of feed orientations that are supported by the printer. */
      feedOrientations?: components['schemas']['microsoft.graph.printerFeedOrientation'][]
      /** @description Finishing processes the printer supports for a printed document. */
      finishings?: components['schemas']['microsoft.graph.printFinishing'][]
      /** @description Supported input bins for the printer. */
      inputBins?: (string | null)[]
      /** @description True if color printing is supported by the printer; false otherwise. Read-only. */
      isColorPrintingSupported?: boolean | null
      /** @description True if the printer supports printing by page ranges; false otherwise. */
      isPageRangeSupported?: boolean | null
      /** @description A list of supported left margins(in microns) for the printer. */
      leftMargins?: (number | null)[]
      /** @description The media (i.e., paper) colors supported by the printer. */
      mediaColors?: (string | null)[]
      /** @description The media sizes supported by the printer. Supports standard size names for ISO and ANSI media sizes. Valid values are in the following table. */
      mediaSizes?: (string | null)[]
      /** @description The media types supported by the printer. */
      mediaTypes?: (string | null)[]
      /** @description The presentation directions supported by the printer. Supported values are described in the following table. */
      multipageLayouts?: components['schemas']['microsoft.graph.printMultipageLayout'][]
      /** @description The print orientations supported by the printer. Valid values are described in the following table. */
      orientations?: components['schemas']['microsoft.graph.printOrientation'][]
      /** @description The printer's supported output bins (trays). */
      outputBins?: (string | null)[]
      /** @description Supported number of Input Pages to impose upon a single Impression. */
      pagesPerSheet?: (number | null)[]
      /** @description The print qualities supported by the printer. */
      qualities?: components['schemas']['microsoft.graph.printQuality'][]
      /** @description A list of supported right margins(in microns) for the printer. */
      rightMargins?: (number | null)[]
      /** @description Supported print scalings. */
      scalings?: components['schemas']['microsoft.graph.printScaling'][]
      /** @description True if the printer supports scaling PDF pages to match the print media size; false otherwise. */
      supportsFitPdfToPage?: boolean | null
      /** @description A list of supported top margins(in microns) for the printer. */
      topMargins?: (number | null)[]
      [key: string]: Record<string, never> | undefined
    }
    /** printerDefaults */
    'microsoft.graph.printerDefaults': {
      colorMode?: components['schemas']['microsoft.graph.printColorMode']
      /** @description The default content (MIME) type to use when processing documents. */
      contentType?: string | null
      /**
       * Format: int32
       * @description The default number of copies printed per job.
       */
      copiesPerJob?: number | null
      /**
       * Format: int32
       * @description The default resolution in DPI to use when printing the job.
       */
      dpi?: number | null
      duplexMode?: components['schemas']['microsoft.graph.printDuplexMode']
      /** @description The default set of finishings to apply to print jobs. Valid values are described in the following table. */
      finishings?: components['schemas']['microsoft.graph.printFinishing'][]
      /** @description The default fitPdfToPage setting. True to fit each page of a PDF document to a physical sheet of media; false to let the printer decide how to lay out impressions. */
      fitPdfToPage?: boolean | null
      /** @description The default input bin that serves as the paper source. */
      inputBin?: string | null
      /** @description The default media (such as paper) color to print the document on. */
      mediaColor?: string | null
      /** @description The default media size to use. Supports standard size names for ISO and ANSI media sizes. Valid values are listed in the printerCapabilities topic. */
      mediaSize?: string | null
      /** @description The default media (such as paper) type to print the document on. */
      mediaType?: string | null
      multipageLayout?: components['schemas']['microsoft.graph.printMultipageLayout']
      orientation?: components['schemas']['microsoft.graph.printOrientation']
      /** @description The default output bin to place completed prints into. See the printer's capabilities for a list of supported output bins. */
      outputBin?: string | null
      /**
       * Format: int32
       * @description The default number of document pages to print on each sheet.
       */
      pagesPerSheet?: number | null
      quality?: components['schemas']['microsoft.graph.printQuality']
      scaling?: components['schemas']['microsoft.graph.printScaling']
      [key: string]: Record<string, never> | undefined
    }
    /** printerLocation */
    'microsoft.graph.printerLocation': {
      /**
       * Format: int32
       * @description The altitude, in meters, that the printer is located at.
       */
      altitudeInMeters?: number | null
      /** @description The building that the printer is located in. */
      building?: string | null
      /** @description The city that the printer is located in. */
      city?: string | null
      /** @description The country or region that the printer is located in. */
      countryOrRegion?: string | null
      /** @description The floor that the printer is located on. Only numerical values are supported right now. */
      floor?: string | null
      /** @description The description of the floor that the printer is located on. */
      floorDescription?: string | null
      /**
       * Format: double
       * @description The latitude that the printer is located at.
       */
      latitude?: number | null
      /**
       * Format: double
       * @description The longitude that the printer is located at.
       */
      longitude?: number | null
      /** @description The organizational hierarchy that the printer belongs to. The elements should be in hierarchical order. */
      organization?: (string | null)[]
      /** @description The postal code that the printer is located in. */
      postalCode?: string | null
      /** @description The description of the room that the printer is located in. */
      roomDescription?: string | null
      /** @description The room that the printer is located in. Only numerical values are supported right now. */
      roomName?: string | null
      /** @description The site that the printer is located in. */
      site?: string | null
      /** @description The state or province that the printer is located in. */
      stateOrProvince?: string | null
      /** @description The street address where the printer is located. */
      streetAddress?: string | null
      /** @description The subdivision that the printer is located in. The elements should be in hierarchical order. */
      subdivision?: (string | null)[]
      subunit?: (string | null)[]
      [key: string]: Record<string, never> | undefined
    }
    /** printerStatus */
    'microsoft.graph.printerStatus': {
      /** @description A human-readable description of the printer's current processing state. Read-only. */
      description?: string | null
      /** @description The list of details describing why the printer is in the current state. Valid values are described in the following table. Read-only. */
      details?: components['schemas']['microsoft.graph.printerProcessingStateDetail'][]
      state?: components['schemas']['microsoft.graph.printerProcessingState']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.printJob': components['schemas']['microsoft.graph.entity'] & {
      configuration?: components['schemas']['microsoft.graph.printJobConfiguration']
      createdBy?: components['schemas']['microsoft.graph.userIdentity']
      /**
       * Format: date-time
       * @description The DateTimeOffset when the job was created. Read-only.
       */
      createdDateTime?: string
      /** @description If true, document can be fetched by printer. */
      isFetchable?: boolean
      /** @description Contains the source job URL, if the job has been redirected from another printer. */
      redirectedFrom?: string | null
      /** @description Contains the destination job URL, if the job has been redirected to another printer. */
      redirectedTo?: string | null
      status?: components['schemas']['microsoft.graph.printJobStatus']
      documents?: components['schemas']['microsoft.graph.printDocument'][]
      /** @description A list of printTasks that were triggered by this print job. */
      tasks?: components['schemas']['microsoft.graph.printTask'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.printConnector': components['schemas']['microsoft.graph.entity'] & {
      /** @description The connector's version. */
      appVersion?: string
      /** @description The name of the connector. */
      displayName?: string
      /** @description The connector machine's hostname. */
      fullyQualifiedDomainName?: string
      location?: components['schemas']['microsoft.graph.printerLocation']
      /** @description The connector machine's operating system version. */
      operatingSystem?: string
      /**
       * Format: date-time
       * @description The DateTimeOffset when the connector was registered.
       */
      registeredDateTime?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.printTaskTrigger': components['schemas']['microsoft.graph.entity'] & {
      event?: components['schemas']['microsoft.graph.printEvent']
      definition?: components['schemas']['microsoft.graph.printTaskDefinition']
      [key: string]: Record<string, never> | undefined
    }
    /** alternativeSecurityId */
    'microsoft.graph.alternativeSecurityId': {
      /** @description For internal use only. */
      identityProvider?: string | null
      /**
       * Format: base64url
       * @description For internal use only.
       */
      key?: string | null
      /**
       * Format: int32
       * @description For internal use only.
       */
      type?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * attendeeType
     * @enum {string}
     */
    'microsoft.graph.attendeeType': 'required' | 'optional' | 'resource'
    /**
     * weekIndex
     * @enum {string}
     */
    'microsoft.graph.weekIndex':
      | 'first'
      | 'second'
      | 'third'
      | 'fourth'
      | 'last'
    /**
     * recurrencePatternType
     * @enum {string}
     */
    'microsoft.graph.recurrencePatternType':
      | 'daily'
      | 'weekly'
      | 'absoluteMonthly'
      | 'relativeMonthly'
      | 'absoluteYearly'
      | 'relativeYearly'
    /**
     * recurrenceRangeType
     * @enum {string}
     */
    'microsoft.graph.recurrenceRangeType': 'endDate' | 'noEnd' | 'numbered'
    /**
     * teamworkUserIdentityType
     * @enum {string}
     */
    'microsoft.graph.teamworkUserIdentityType':
      | 'aadUser'
      | 'onPremiseAadUser'
      | 'anonymousGuest'
      | 'federatedUser'
      | 'personalMicrosoftAccountUser'
      | 'skypeUser'
      | 'phoneUser'
      | 'unknownFutureValue'
      | 'emailUser'
    /** teamsAppResourceSpecificPermission */
    'microsoft.graph.teamsAppResourceSpecificPermission': {
      permissionType?: components['schemas']['microsoft.graph.teamsAppResourceSpecificPermissionType']
      /** @description The name of the resource-specific permission. */
      permissionValue?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * teamsAppDistributionMethod
     * @enum {string}
     */
    'microsoft.graph.teamsAppDistributionMethod':
      | 'store'
      | 'organization'
      | 'sideloaded'
      | 'unknownFutureValue'
    /** teamsAppAuthorization */
    'microsoft.graph.teamsAppAuthorization': {
      requiredPermissionSet?: components['schemas']['microsoft.graph.teamsAppPermissionSet']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * teamsAppPublishingState
     * @enum {string}
     */
    'microsoft.graph.teamsAppPublishingState':
      | 'submitted'
      | 'rejected'
      | 'published'
      | 'unknownFutureValue'
    'microsoft.graph.teamworkBot': components['schemas']['microsoft.graph.entity'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.chatMessageMentionedIdentitySet': components['schemas']['microsoft.graph.identitySet'] & {
      conversation?: components['schemas']['microsoft.graph.teamworkConversationIdentity']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * chatMessageActions
     * @enum {string}
     */
    'microsoft.graph.chatMessageActions':
      | 'reactionAdded'
      | 'reactionRemoved'
      | 'actionUndefined'
      | 'unknownFutureValue'
    /**
     * chatMessagePolicyViolationDlpActionTypes
     * @enum {string}
     */
    'microsoft.graph.chatMessagePolicyViolationDlpActionTypes':
      | 'none'
      | 'notifySender'
      | 'blockAccess'
      | 'blockAccessExternal'
    /** chatMessagePolicyViolationPolicyTip */
    'microsoft.graph.chatMessagePolicyViolationPolicyTip': {
      /** @description The URL a user can visit to read about the data loss prevention policies for the organization. (ie, policies about what users shouldn't say in chats) */
      complianceUrl?: string | null
      /** @description Explanatory text shown to the sender of the message. */
      generalText?: string | null
      /** @description The list of improper data in the message that was detected by the data loss prevention app. Each DLP app defines its own conditions, examples include 'Credit Card Number' and 'Social Security Number'. */
      matchedConditionDescriptions?: (string | null)[]
      [key: string]: Record<string, never> | undefined
    }
    /**
     * chatMessagePolicyViolationUserActionTypes
     * @enum {string}
     */
    'microsoft.graph.chatMessagePolicyViolationUserActionTypes':
      | 'none'
      | 'override'
      | 'reportFalsePositive'
    /**
     * chatMessagePolicyViolationVerdictDetailsTypes
     * @enum {string}
     */
    'microsoft.graph.chatMessagePolicyViolationVerdictDetailsTypes':
      | 'none'
      | 'allowFalsePositiveOverride'
      | 'allowOverrideWithoutJustification'
      | 'allowOverrideWithJustification'
    'microsoft.graph.chatMessageReactionIdentitySet': components['schemas']['microsoft.graph.identitySet'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.teamworkHostedContent': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: base64url
       * @description Write only. Bytes for the hosted content (such as images).
       */
      contentBytes?: string | null
      /** @description Write only. Content type. such as image/png, image/jpg. */
      contentType?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** sharingDetail */
    'microsoft.graph.sharingDetail': {
      sharedBy?: components['schemas']['microsoft.graph.insightIdentity']
      /**
       * Format: date-time
       * @description The date and time the file was last shared. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      sharedDateTime?: string | null
      sharingReference?: components['schemas']['microsoft.graph.resourceReference']
      /** @description The subject with which the document was shared. */
      sharingSubject?: string | null
      /** @description Determines the way the document was shared. Can be by a 1Link1, 1Attachment1, 1Group1, 1Site1. */
      sharingType?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** resourceReference */
    'microsoft.graph.resourceReference': {
      /** @description The item's unique identifier. */
      id?: string | null
      /** @description A string value that can be used to classify the item, such as 'microsoft.graph.driveItem' */
      type?: string | null
      /** @description A URL leading to the referenced item. */
      webUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** resourceVisualization */
    'microsoft.graph.resourceVisualization': {
      /** @description A string describing where the item is stored. For example, the name of a SharePoint site or the user name identifying the owner of the OneDrive storing the item. */
      containerDisplayName?: string | null
      /** @description Can be used for filtering by the type of container in which the file is stored. Such as Site or OneDriveBusiness. */
      containerType?: string | null
      /** @description A path leading to the folder in which the item is stored. */
      containerWebUrl?: string | null
      /** @description The item's media type. Can be used for filtering for a specific type of file based on supported IANA Media Mime Types. Not all Media Mime Types are supported. */
      mediaType?: string | null
      /** @description A URL leading to the preview image for the item. */
      previewImageUrl?: string | null
      /** @description A preview text for the item. */
      previewText?: string | null
      /** @description The item's title text. */
      title?: string | null
      /** @description The item's media type. Can be used for filtering for a specific file based on a specific type. See the section Type property values for supported types. */
      type?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** usageDetails */
    'microsoft.graph.usageDetails': {
      /**
       * Format: date-time
       * @description The date and time the resource was last accessed by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      lastAccessedDateTime?: string | null
      /**
       * Format: date-time
       * @description The date and time the resource was last modified by the user. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
       */
      lastModifiedDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** settingValue */
    'microsoft.graph.settingValue': {
      /** @description Name of the setting (as defined by the groupSettingTemplate). */
      name?: string | null
      /** @description Value of the setting. */
      value?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.post': components['schemas']['microsoft.graph.outlookItem'] & {
      body?: components['schemas']['microsoft.graph.itemBody']
      /** @description Unique ID of the conversation. Read-only. */
      conversationId?: string | null
      /** @description Unique ID of the conversation thread. Read-only. */
      conversationThreadId?: string | null
      from?: components['schemas']['microsoft.graph.recipient']
      /** @description Indicates whether the post has at least one attachment. This is a default property. */
      hasAttachments?: boolean
      /** @description Conversation participants that were added to the thread as part of this post. */
      newParticipants?: components['schemas']['microsoft.graph.recipient'][]
      /**
       * Format: date-time
       * @description Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
       */
      receivedDateTime?: string
      sender?: components['schemas']['microsoft.graph.recipient']
      /** @description Read-only. Nullable. Supports $expand. */
      attachments?: components['schemas']['microsoft.graph.attachment'][]
      /** @description The collection of open extensions defined for the post. Read-only. Nullable. Supports $expand. */
      extensions?: components['schemas']['microsoft.graph.extension'][]
      inReplyTo?: components['schemas']['microsoft.graph.post']
      /** @description The collection of multi-value extended properties defined for the post. Read-only. Nullable. */
      multiValueExtendedProperties?: components['schemas']['microsoft.graph.multiValueLegacyExtendedProperty'][]
      /** @description The collection of single-value extended properties defined for the post. Read-only. Nullable. */
      singleValueExtendedProperties?: components['schemas']['microsoft.graph.singleValueLegacyExtendedProperty'][]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.scheduleChangeRequest': components['schemas']['microsoft.graph.changeTrackedEntity'] & {
      assignedTo?: components['schemas']['microsoft.graph.scheduleChangeRequestActor']
      /** Format: date-time */
      managerActionDateTime?: string | null
      managerActionMessage?: string | null
      managerUserId?: string | null
      /** Format: date-time */
      senderDateTime?: string | null
      senderMessage?: string | null
      senderUserId?: string | null
      state?: components['schemas']['microsoft.graph.scheduleChangeState']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.openShiftItem': components['schemas']['microsoft.graph.shiftItem'] & {
      /**
       * Format: int32
       * @description Count of the number of slots for the given open shift.
       */
      openSlotCount?: number
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.shiftItem': components['schemas']['microsoft.graph.scheduleEntity'] & {
      /** @description An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required. */
      activities?: components['schemas']['microsoft.graph.shiftActivity'][]
      /** @description The shift label of the shiftItem. */
      displayName?: string | null
      /** @description The shift notes for the shiftItem. */
      notes?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * timeOffReasonIconType
     * @enum {string}
     */
    'microsoft.graph.timeOffReasonIconType':
      | 'none'
      | 'car'
      | 'calendar'
      | 'running'
      | 'plane'
      | 'firstAid'
      | 'doctor'
      | 'notWorking'
      | 'clock'
      | 'juryDuty'
      | 'globe'
      | 'cup'
      | 'phone'
      | 'weather'
      | 'umbrella'
      | 'piggyBank'
      | 'dog'
      | 'cake'
      | 'trafficCone'
      | 'pin'
      | 'sunny'
      | 'unknownFutureValue'
    'microsoft.graph.timeOffItem': components['schemas']['microsoft.graph.scheduleEntity'] & {
      /** @description ID of the timeOffReason for this timeOffItem. Required. */
      timeOffReasonId?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * messageActionFlag
     * @enum {string}
     */
    'microsoft.graph.messageActionFlag':
      | 'any'
      | 'call'
      | 'doNotForward'
      | 'followUp'
      | 'fyi'
      | 'forward'
      | 'noResponseNecessary'
      | 'read'
      | 'reply'
      | 'replyToAll'
      | 'review'
    /** sizeRange */
    'microsoft.graph.sizeRange': {
      /**
       * Format: int32
       * @description The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
       */
      maximumSize?: number | null
      /**
       * Format: int32
       * @description The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.
       */
      minimumSize?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /** settingSource */
    'microsoft.graph.settingSource': {
      /** @description Not yet documented */
      displayName?: string | null
      /** @description Not yet documented */
      id?: string | null
      sourceType?: components['schemas']['microsoft.graph.settingSourceType']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * windowsMalwareCategory
     * @description Malware category id
     * @enum {string}
     */
    'microsoft.graph.windowsMalwareCategory':
      | 'invalid'
      | 'adware'
      | 'spyware'
      | 'passwordStealer'
      | 'trojanDownloader'
      | 'worm'
      | 'backdoor'
      | 'remoteAccessTrojan'
      | 'trojan'
      | 'emailFlooder'
      | 'keylogger'
      | 'dialer'
      | 'monitoringSoftware'
      | 'browserModifier'
      | 'cookie'
      | 'browserPlugin'
      | 'aolExploit'
      | 'nuker'
      | 'securityDisabler'
      | 'jokeProgram'
      | 'hostileActiveXControl'
      | 'softwareBundler'
      | 'stealthNotifier'
      | 'settingsModifier'
      | 'toolBar'
      | 'remoteControlSoftware'
      | 'trojanFtp'
      | 'potentialUnwantedSoftware'
      | 'icqExploit'
      | 'trojanTelnet'
      | 'exploit'
      | 'filesharingProgram'
      | 'malwareCreationTool'
      | 'remote_Control_Software'
      | 'tool'
      | 'trojanDenialOfService'
      | 'trojanDropper'
      | 'trojanMassMailer'
      | 'trojanMonitoringSoftware'
      | 'trojanProxyServer'
      | 'virus'
      | 'known'
      | 'unknown'
      | 'spp'
      | 'behavior'
      | 'vulnerability'
      | 'policy'
      | 'enterpriseUnwantedSoftware'
      | 'ransom'
      | 'hipsRule'
    /**
     * windowsMalwareExecutionState
     * @description Malware execution status
     * @enum {string}
     */
    'microsoft.graph.windowsMalwareExecutionState':
      | 'unknown'
      | 'blocked'
      | 'allowed'
      | 'running'
      | 'notRunning'
    /**
     * windowsMalwareSeverity
     * @description Malware severity
     * @enum {string}
     */
    'microsoft.graph.windowsMalwareSeverity':
      | 'unknown'
      | 'low'
      | 'moderate'
      | 'high'
      | 'severe'
    /**
     * windowsMalwareState
     * @description Malware current status
     * @enum {string}
     */
    'microsoft.graph.windowsMalwareState':
      | 'unknown'
      | 'detected'
      | 'cleaned'
      | 'quarantined'
      | 'removed'
      | 'allowed'
      | 'blocked'
      | 'cleanFailed'
      | 'quarantineFailed'
      | 'removeFailed'
      | 'allowFailed'
      | 'abandoned'
      | 'blockFailed'
    /**
     * windowsMalwareThreatState
     * @description Malware threat status
     * @enum {string}
     */
    'microsoft.graph.windowsMalwareThreatState':
      | 'active'
      | 'actionFailed'
      | 'manualStepsRequired'
      | 'fullScanRequired'
      | 'rebootRequired'
      | 'remediatedWithNonCriticalFailures'
      | 'quarantined'
      | 'removed'
      | 'cleaned'
      | 'allowed'
      | 'noStatusCleared'
    /** externalLink */
    'microsoft.graph.externalLink': {
      /** @description The URL of the link. */
      href?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * lobbyBypassScope
     * @enum {string}
     */
    'microsoft.graph.lobbyBypassScope':
      | 'organizer'
      | 'organization'
      | 'organizationAndFederated'
      | 'everyone'
      | 'unknownFutureValue'
      | 'invited'
      | 'organizationExcludingGuests'
    'microsoft.graph.attendanceRecord': components['schemas']['microsoft.graph.entity'] & {
      /** @description List of time periods between joining and leaving a meeting. */
      attendanceIntervals?: components['schemas']['microsoft.graph.attendanceInterval'][]
      /** @description Email address of the user associated with this attendance record. */
      emailAddress?: string | null
      identity?: components['schemas']['microsoft.graph.identity']
      /** @description Role of the attendee. Possible values are: None, Attendee, Presenter, and Organizer. */
      role?: string | null
      /**
       * Format: int32
       * @description Total duration of the attendances in seconds.
       */
      totalAttendanceInSeconds?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * onlineMeetingRole
     * @enum {string}
     */
    'microsoft.graph.onlineMeetingRole':
      | 'attendee'
      | 'presenter'
      | 'unknownFutureValue'
      | 'producer'
      | 'coorganizer'
    /**
     * plannerContainerType
     * @enum {string}
     */
    'microsoft.graph.plannerContainerType':
      | 'group'
      | 'unknownFutureValue'
      | 'roster'
    /** plannerCategoryDescriptions */
    'microsoft.graph.plannerCategoryDescriptions': {
      /** @description The label associated with Category 1 */
      category1?: string | null
      /** @description The label associated with Category 10 */
      category10?: string | null
      /** @description The label associated with Category 11 */
      category11?: string | null
      /** @description The label associated with Category 12 */
      category12?: string | null
      /** @description The label associated with Category 13 */
      category13?: string | null
      /** @description The label associated with Category 14 */
      category14?: string | null
      /** @description The label associated with Category 15 */
      category15?: string | null
      /** @description The label associated with Category 16 */
      category16?: string | null
      /** @description The label associated with Category 17 */
      category17?: string | null
      /** @description The label associated with Category 18 */
      category18?: string | null
      /** @description The label associated with Category 19 */
      category19?: string | null
      /** @description The label associated with Category 2 */
      category2?: string | null
      /** @description The label associated with Category 20 */
      category20?: string | null
      /** @description The label associated with Category 21 */
      category21?: string | null
      /** @description The label associated with Category 22 */
      category22?: string | null
      /** @description The label associated with Category 23 */
      category23?: string | null
      /** @description The label associated with Category 24 */
      category24?: string | null
      /** @description The label associated with Category 25 */
      category25?: string | null
      /** @description The label associated with Category 3 */
      category3?: string | null
      /** @description The label associated with Category 4 */
      category4?: string | null
      /** @description The label associated with Category 5 */
      category5?: string | null
      /** @description The label associated with Category 6 */
      category6?: string | null
      /** @description The label associated with Category 7 */
      category7?: string | null
      /** @description The label associated with Category 8 */
      category8?: string | null
      /** @description The label associated with Category 9 */
      category9?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** plannerUserIds */
    'microsoft.graph.plannerUserIds': {
      [key: string]: Record<string, never>
    }
    /** plannerOrderHintsByAssignee */
    'microsoft.graph.plannerOrderHintsByAssignee': {
      [key: string]: Record<string, never>
    }
    /** plannerChecklistItems */
    'microsoft.graph.plannerChecklistItems': {
      [key: string]: Record<string, never>
    }
    /** plannerExternalReferences */
    'microsoft.graph.plannerExternalReferences': {
      [key: string]: Record<string, never>
    }
    /** timeRange */
    'microsoft.graph.timeRange': {
      /**
       * Format: time
       * @description End time for the time range.
       */
      endTime?: string | null
      /**
       * Format: time
       * @description Start time for the time range.
       */
      startTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.serviceStorageQuotaBreakdown': components['schemas']['microsoft.graph.storageQuotaBreakdown'] & {
      [key: string]: Record<string, never>
    }
    /**
     * taskStatus
     * @enum {string}
     */
    'microsoft.graph.taskStatus':
      | 'notStarted'
      | 'inProgress'
      | 'completed'
      | 'waitingOnOthers'
      | 'deferred'
    'microsoft.graph.attachmentBase': components['schemas']['microsoft.graph.entity'] & {
      /** @description The MIME type. */
      contentType?: string | null
      /**
       * Format: date-time
       * @description The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
       */
      lastModifiedDateTime?: string | null
      /** @description The display name of the attachment. This doesn't need to be the actual file name. */
      name?: string | null
      /**
       * Format: int32
       * @description The length of the attachment in bytes.
       */
      size?: number
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.attachmentSession': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: base64url
       * @description The content streams that are uploaded.
       */
      content?: string | null
      /**
       * Format: date-time
       * @description The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached.
       */
      expirationDateTime?: string | null
      /** @description Indicates a single value {start} that represents the location in the file where the next upload should begin. */
      nextExpectedRanges?: (string | null)[]
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.checklistItem': components['schemas']['microsoft.graph.entity'] & {
      /**
       * Format: date-time
       * @description The date and time when the checklistItem was finished.
       */
      checkedDateTime?: string | null
      /**
       * Format: date-time
       * @description The date and time when the checklistItem was created.
       */
      createdDateTime?: string
      /** @description Indicates the title of the checklistItem. */
      displayName?: string | null
      /** @description State that indicates whether the item is checked off or not. */
      isChecked?: boolean | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.linkedResource': components['schemas']['microsoft.graph.entity'] & {
      /** @description The app name of the source that sends the linkedResource. */
      applicationName?: string | null
      /** @description The title of the linkedResource. */
      displayName?: string | null
      /** @description ID of the object that is associated with this task on the third-party/partner system. */
      externalId?: string | null
      /** @description Deep link to the linkedResource. */
      webUrl?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * relationType
     * @enum {string}
     */
    'microsoft.graph.termStore.relationType':
      | 'pin'
      | 'reuse'
      | 'unknownFutureValue'
    /** workbookFilterCriteria */
    'microsoft.graph.workbookFilterCriteria': {
      /** @description The color applied to the cell. */
      color?: string | null
      /** @description A custom criterion. */
      criterion1?: string | null
      /** @description A custom criterion. */
      criterion2?: string | null
      /** @description A dynamic formula specified in a custom filter. */
      dynamicCriteria?: string
      /** @description Indicates whether a filter is applied to a column. */
      filterOn?: string
      icon?: components['schemas']['microsoft.graph.workbookIcon']
      /** @description An operator in a cell; for example, =, >, <, <=, or <>. */
      operator?: string
      values?: components['schemas']['microsoft.graph.Json']
      [key: string]: Record<string, never> | undefined
    }
    /** workbookIcon */
    'microsoft.graph.workbookIcon': {
      /**
       * Format: int32
       * @description The index of the icon in the given set.
       */
      index?: number
      /** @description The set that the icon is part of. The possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes. */
      set?: string
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartAxis': components['schemas']['microsoft.graph.entity'] & {
      majorUnit?: components['schemas']['microsoft.graph.Json']
      maximum?: components['schemas']['microsoft.graph.Json']
      minimum?: components['schemas']['microsoft.graph.Json']
      minorUnit?: components['schemas']['microsoft.graph.Json']
      format?: components['schemas']['microsoft.graph.workbookChartAxisFormat']
      majorGridlines?: components['schemas']['microsoft.graph.workbookChartGridlines']
      minorGridlines?: components['schemas']['microsoft.graph.workbookChartGridlines']
      title?: components['schemas']['microsoft.graph.workbookChartAxisTitle']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartDataLabelFormat': components['schemas']['microsoft.graph.entity'] & {
      fill?: components['schemas']['microsoft.graph.workbookChartFill']
      font?: components['schemas']['microsoft.graph.workbookChartFont']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartFill': components['schemas']['microsoft.graph.entity'] & {
      [key: string]: Record<string, never>
    }
    'microsoft.graph.workbookChartFont': components['schemas']['microsoft.graph.entity'] & {
      /** @description Indicates whether the fond is bold. */
      bold?: boolean | null
      /** @description The HTML color code representation of the text color. For example #FF0000 represents Red. */
      color?: string | null
      /** @description Indicates whether the fond is italic. */
      italic?: boolean | null
      /** @description The font name. For example 'Calibri'. */
      name?: string | null
      /**
       * Format: double
       * @description The size of the font. For example,  11.
       */
      size?: number | null
      /** @description The type of underlining applied to the font. The possible values are: None, Single. */
      underline?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartLegendFormat': components['schemas']['microsoft.graph.entity'] & {
      fill?: components['schemas']['microsoft.graph.workbookChartFill']
      font?: components['schemas']['microsoft.graph.workbookChartFont']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartSeriesFormat': components['schemas']['microsoft.graph.entity'] & {
      fill?: components['schemas']['microsoft.graph.workbookChartFill']
      line?: components['schemas']['microsoft.graph.workbookChartLineFormat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartPoint': components['schemas']['microsoft.graph.entity'] & {
      value?: components['schemas']['microsoft.graph.Json']
      format?: components['schemas']['microsoft.graph.workbookChartPointFormat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartTitleFormat': components['schemas']['microsoft.graph.entity'] & {
      fill?: components['schemas']['microsoft.graph.workbookChartFill']
      font?: components['schemas']['microsoft.graph.workbookChartFont']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * printColorMode
     * @enum {string}
     */
    'microsoft.graph.printColorMode':
      | 'blackAndWhite'
      | 'grayscale'
      | 'color'
      | 'auto'
      | 'unknownFutureValue'
    /** integerRange */
    'microsoft.graph.integerRange': {
      /**
       * Format: int64
       * @description The inclusive upper bound of the integer range.
       */
      end?: number | null
      /**
       * Format: int64
       * @description The inclusive lower bound of the integer range.
       */
      start?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * printDuplexMode
     * @enum {string}
     */
    'microsoft.graph.printDuplexMode':
      | 'flipOnLongEdge'
      | 'flipOnShortEdge'
      | 'oneSided'
      | 'unknownFutureValue'
    /**
     * printerFeedOrientation
     * @enum {string}
     */
    'microsoft.graph.printerFeedOrientation':
      | 'longEdgeFirst'
      | 'shortEdgeFirst'
      | 'unknownFutureValue'
    /**
     * printFinishing
     * @enum {string}
     */
    'microsoft.graph.printFinishing':
      | 'none'
      | 'staple'
      | 'punch'
      | 'cover'
      | 'bind'
      | 'saddleStitch'
      | 'stitchEdge'
      | 'stapleTopLeft'
      | 'stapleBottomLeft'
      | 'stapleTopRight'
      | 'stapleBottomRight'
      | 'stitchLeftEdge'
      | 'stitchTopEdge'
      | 'stitchRightEdge'
      | 'stitchBottomEdge'
      | 'stapleDualLeft'
      | 'stapleDualTop'
      | 'stapleDualRight'
      | 'stapleDualBottom'
      | 'unknownFutureValue'
      | 'stapleTripleLeft'
      | 'stapleTripleTop'
      | 'stapleTripleRight'
      | 'stapleTripleBottom'
      | 'bindLeft'
      | 'bindTop'
      | 'bindRight'
      | 'bindBottom'
      | 'foldAccordion'
      | 'foldDoubleGate'
      | 'foldGate'
      | 'foldHalf'
      | 'foldHalfZ'
      | 'foldLeftGate'
      | 'foldLetter'
      | 'foldParallel'
      | 'foldPoster'
      | 'foldRightGate'
      | 'foldZ'
      | 'foldEngineeringZ'
      | 'punchTopLeft'
      | 'punchBottomLeft'
      | 'punchTopRight'
      | 'punchBottomRight'
      | 'punchDualLeft'
      | 'punchDualTop'
      | 'punchDualRight'
      | 'punchDualBottom'
      | 'punchTripleLeft'
      | 'punchTripleTop'
      | 'punchTripleRight'
      | 'punchTripleBottom'
      | 'punchQuadLeft'
      | 'punchQuadTop'
      | 'punchQuadRight'
      | 'punchQuadBottom'
      | 'fold'
      | 'trim'
      | 'bale'
      | 'bookletMaker'
      | 'coat'
      | 'laminate'
      | 'trimAfterPages'
      | 'trimAfterDocuments'
      | 'trimAfterCopies'
      | 'trimAfterJob'
    /**
     * printMultipageLayout
     * @enum {string}
     */
    'microsoft.graph.printMultipageLayout':
      | 'clockwiseFromTopLeft'
      | 'counterclockwiseFromTopLeft'
      | 'counterclockwiseFromTopRight'
      | 'clockwiseFromTopRight'
      | 'counterclockwiseFromBottomLeft'
      | 'clockwiseFromBottomLeft'
      | 'counterclockwiseFromBottomRight'
      | 'clockwiseFromBottomRight'
      | 'unknownFutureValue'
    /**
     * printOrientation
     * @enum {string}
     */
    'microsoft.graph.printOrientation':
      | 'portrait'
      | 'landscape'
      | 'reverseLandscape'
      | 'reversePortrait'
      | 'unknownFutureValue'
    /**
     * printQuality
     * @enum {string}
     */
    'microsoft.graph.printQuality':
      | 'low'
      | 'medium'
      | 'high'
      | 'unknownFutureValue'
    /**
     * printScaling
     * @enum {string}
     */
    'microsoft.graph.printScaling':
      | 'auto'
      | 'shrinkToFit'
      | 'fill'
      | 'fit'
      | 'none'
      | 'unknownFutureValue'
    /**
     * printerProcessingStateDetail
     * @enum {string}
     */
    'microsoft.graph.printerProcessingStateDetail':
      | 'paused'
      | 'mediaJam'
      | 'mediaNeeded'
      | 'mediaLow'
      | 'mediaEmpty'
      | 'coverOpen'
      | 'interlockOpen'
      | 'outputTrayMissing'
      | 'outputAreaFull'
      | 'markerSupplyLow'
      | 'markerSupplyEmpty'
      | 'inputTrayMissing'
      | 'outputAreaAlmostFull'
      | 'markerWasteAlmostFull'
      | 'markerWasteFull'
      | 'fuserOverTemp'
      | 'fuserUnderTemp'
      | 'other'
      | 'none'
      | 'movingToPaused'
      | 'shutdown'
      | 'connectingToDevice'
      | 'timedOut'
      | 'stopping'
      | 'stoppedPartially'
      | 'tonerLow'
      | 'tonerEmpty'
      | 'spoolAreaFull'
      | 'doorOpen'
      | 'opticalPhotoConductorNearEndOfLife'
      | 'opticalPhotoConductorLifeOver'
      | 'developerLow'
      | 'developerEmpty'
      | 'interpreterResourceUnavailable'
      | 'unknownFutureValue'
      | 'alertRemovalOfBinaryChangeEntry'
      | 'banderAdded'
      | 'banderAlmostEmpty'
      | 'banderAlmostFull'
      | 'banderAtLimit'
      | 'banderClosed'
      | 'banderConfigurationChange'
      | 'banderCoverClosed'
      | 'banderCoverOpen'
      | 'banderEmpty'
      | 'banderFull'
      | 'banderInterlockClosed'
      | 'banderInterlockOpen'
      | 'banderJam'
      | 'banderLifeAlmostOver'
      | 'banderLifeOver'
      | 'banderMemoryExhausted'
      | 'banderMissing'
      | 'banderMotorFailure'
      | 'banderNearLimit'
      | 'banderOffline'
      | 'banderOpened'
      | 'banderOverTemperature'
      | 'banderPowerSaver'
      | 'banderRecoverableFailure'
      | 'banderRecoverableStorage'
      | 'banderRemoved'
      | 'banderResourceAdded'
      | 'banderResourceRemoved'
      | 'banderThermistorFailure'
      | 'banderTimingFailure'
      | 'banderTurnedOff'
      | 'banderTurnedOn'
      | 'banderUnderTemperature'
      | 'banderUnrecoverableFailure'
      | 'banderUnrecoverableStorageError'
      | 'banderWarmingUp'
      | 'binderAdded'
      | 'binderAlmostEmpty'
      | 'binderAlmostFull'
      | 'binderAtLimit'
      | 'binderClosed'
      | 'binderConfigurationChange'
      | 'binderCoverClosed'
      | 'binderCoverOpen'
      | 'binderEmpty'
      | 'binderFull'
      | 'binderInterlockClosed'
      | 'binderInterlockOpen'
      | 'binderJam'
      | 'binderLifeAlmostOver'
      | 'binderLifeOver'
      | 'binderMemoryExhausted'
      | 'binderMissing'
      | 'binderMotorFailure'
      | 'binderNearLimit'
      | 'binderOffline'
      | 'binderOpened'
      | 'binderOverTemperature'
      | 'binderPowerSaver'
      | 'binderRecoverableFailure'
      | 'binderRecoverableStorage'
      | 'binderRemoved'
      | 'binderResourceAdded'
      | 'binderResourceRemoved'
      | 'binderThermistorFailure'
      | 'binderTimingFailure'
      | 'binderTurnedOff'
      | 'binderTurnedOn'
      | 'binderUnderTemperature'
      | 'binderUnrecoverableFailure'
      | 'binderUnrecoverableStorageError'
      | 'binderWarmingUp'
      | 'cameraFailure'
      | 'chamberCooling'
      | 'chamberFailure'
      | 'chamberHeating'
      | 'chamberTemperatureHigh'
      | 'chamberTemperatureLow'
      | 'cleanerLifeAlmostOver'
      | 'cleanerLifeOver'
      | 'configurationChange'
      | 'deactivated'
      | 'deleted'
      | 'dieCutterAdded'
      | 'dieCutterAlmostEmpty'
      | 'dieCutterAlmostFull'
      | 'dieCutterAtLimit'
      | 'dieCutterClosed'
      | 'dieCutterConfigurationChange'
      | 'dieCutterCoverClosed'
      | 'dieCutterCoverOpen'
      | 'dieCutterEmpty'
      | 'dieCutterFull'
      | 'dieCutterInterlockClosed'
      | 'dieCutterInterlockOpen'
      | 'dieCutterJam'
      | 'dieCutterLifeAlmostOver'
      | 'dieCutterLifeOver'
      | 'dieCutterMemoryExhausted'
      | 'dieCutterMissing'
      | 'dieCutterMotorFailure'
      | 'dieCutterNearLimit'
      | 'dieCutterOffline'
      | 'dieCutterOpened'
      | 'dieCutterOverTemperature'
      | 'dieCutterPowerSaver'
      | 'dieCutterRecoverableFailure'
      | 'dieCutterRecoverableStorage'
      | 'dieCutterRemoved'
      | 'dieCutterResourceAdded'
      | 'dieCutterResourceRemoved'
      | 'dieCutterThermistorFailure'
      | 'dieCutterTimingFailure'
      | 'dieCutterTurnedOff'
      | 'dieCutterTurnedOn'
      | 'dieCutterUnderTemperature'
      | 'dieCutterUnrecoverableFailure'
      | 'dieCutterUnrecoverableStorageError'
      | 'dieCutterWarmingUp'
      | 'extruderCooling'
      | 'extruderFailure'
      | 'extruderHeating'
      | 'extruderJam'
      | 'extruderTemperatureHigh'
      | 'extruderTemperatureLow'
      | 'fanFailure'
      | 'faxModemLifeAlmostOver'
      | 'faxModemLifeOver'
      | 'faxModemMissing'
      | 'faxModemTurnedOff'
      | 'faxModemTurnedOn'
      | 'folderAdded'
      | 'folderAlmostEmpty'
      | 'folderAlmostFull'
      | 'folderAtLimit'
      | 'folderClosed'
      | 'folderConfigurationChange'
      | 'folderCoverClosed'
      | 'folderCoverOpen'
      | 'folderEmpty'
      | 'folderFull'
      | 'folderInterlockClosed'
      | 'folderInterlockOpen'
      | 'folderJam'
      | 'folderLifeAlmostOver'
      | 'folderLifeOver'
      | 'folderMemoryExhausted'
      | 'folderMissing'
      | 'folderMotorFailure'
      | 'folderNearLimit'
      | 'folderOffline'
      | 'folderOpened'
      | 'folderOverTemperature'
      | 'folderPowerSaver'
      | 'folderRecoverableFailure'
      | 'folderRecoverableStorage'
      | 'folderRemoved'
      | 'folderResourceAdded'
      | 'folderResourceRemoved'
      | 'folderThermistorFailure'
      | 'folderTimingFailure'
      | 'folderTurnedOff'
      | 'folderTurnedOn'
      | 'folderUnderTemperature'
      | 'folderUnrecoverableFailure'
      | 'folderUnrecoverableStorageError'
      | 'folderWarmingUp'
      | 'hibernate'
      | 'holdNewJobs'
      | 'identifyPrinterRequested'
      | 'imprinterAdded'
      | 'imprinterAlmostEmpty'
      | 'imprinterAlmostFull'
      | 'imprinterAtLimit'
      | 'imprinterClosed'
      | 'imprinterConfigurationChange'
      | 'imprinterCoverClosed'
      | 'imprinterCoverOpen'
      | 'imprinterEmpty'
      | 'imprinterFull'
      | 'imprinterInterlockClosed'
      | 'imprinterInterlockOpen'
      | 'imprinterJam'
      | 'imprinterLifeAlmostOver'
      | 'imprinterLifeOver'
      | 'imprinterMemoryExhausted'
      | 'imprinterMissing'
      | 'imprinterMotorFailure'
      | 'imprinterNearLimit'
      | 'imprinterOffline'
      | 'imprinterOpened'
      | 'imprinterOverTemperature'
      | 'imprinterPowerSaver'
      | 'imprinterRecoverableFailure'
      | 'imprinterRecoverableStorage'
      | 'imprinterRemoved'
      | 'imprinterResourceAdded'
      | 'imprinterResourceRemoved'
      | 'imprinterThermistorFailure'
      | 'imprinterTimingFailure'
      | 'imprinterTurnedOff'
      | 'imprinterTurnedOn'
      | 'imprinterUnderTemperature'
      | 'imprinterUnrecoverableFailure'
      | 'imprinterUnrecoverableStorageError'
      | 'imprinterWarmingUp'
      | 'inputCannotFeedSizeSelected'
      | 'inputManualInputRequest'
      | 'inputMediaColorChange'
      | 'inputMediaFormPartsChange'
      | 'inputMediaSizeChange'
      | 'inputMediaTrayFailure'
      | 'inputMediaTrayFeedError'
      | 'inputMediaTrayJam'
      | 'inputMediaTypeChange'
      | 'inputMediaWeightChange'
      | 'inputPickRollerFailure'
      | 'inputPickRollerLifeOver'
      | 'inputPickRollerLifeWarn'
      | 'inputPickRollerMissing'
      | 'inputTrayElevationFailure'
      | 'inputTrayPositionFailure'
      | 'inserterAdded'
      | 'inserterAlmostEmpty'
      | 'inserterAlmostFull'
      | 'inserterAtLimit'
      | 'inserterClosed'
      | 'inserterConfigurationChange'
      | 'inserterCoverClosed'
      | 'inserterCoverOpen'
      | 'inserterEmpty'
      | 'inserterFull'
      | 'inserterInterlockClosed'
      | 'inserterInterlockOpen'
      | 'inserterJam'
      | 'inserterLifeAlmostOver'
      | 'inserterLifeOver'
      | 'inserterMemoryExhausted'
      | 'inserterMissing'
      | 'inserterMotorFailure'
      | 'inserterNearLimit'
      | 'inserterOffline'
      | 'inserterOpened'
      | 'inserterOverTemperature'
      | 'inserterPowerSaver'
      | 'inserterRecoverableFailure'
      | 'inserterRecoverableStorage'
      | 'inserterRemoved'
      | 'inserterResourceAdded'
      | 'inserterResourceRemoved'
      | 'inserterThermistorFailure'
      | 'inserterTimingFailure'
      | 'inserterTurnedOff'
      | 'inserterTurnedOn'
      | 'inserterUnderTemperature'
      | 'inserterUnrecoverableFailure'
      | 'inserterUnrecoverableStorageError'
      | 'inserterWarmingUp'
      | 'interlockClosed'
      | 'interpreterCartridgeAdded'
      | 'interpreterCartridgeDeleted'
      | 'interpreterComplexPageEncountered'
      | 'interpreterMemoryDecrease'
      | 'interpreterMemoryIncrease'
      | 'interpreterResourceAdded'
      | 'interpreterResourceDeleted'
      | 'lampAtEol'
      | 'lampFailure'
      | 'lampNearEol'
      | 'laserAtEol'
      | 'laserFailure'
      | 'laserNearEol'
      | 'makeEnvelopeAdded'
      | 'makeEnvelopeAlmostEmpty'
      | 'makeEnvelopeAlmostFull'
      | 'makeEnvelopeAtLimit'
      | 'makeEnvelopeClosed'
      | 'makeEnvelopeConfigurationChange'
      | 'makeEnvelopeCoverClosed'
      | 'makeEnvelopeCoverOpen'
      | 'makeEnvelopeEmpty'
      | 'makeEnvelopeFull'
      | 'makeEnvelopeInterlockClosed'
      | 'makeEnvelopeInterlockOpen'
      | 'makeEnvelopeJam'
      | 'makeEnvelopeLifeAlmostOver'
      | 'makeEnvelopeLifeOver'
      | 'makeEnvelopeMemoryExhausted'
      | 'makeEnvelopeMissing'
      | 'makeEnvelopeMotorFailure'
      | 'makeEnvelopeNearLimit'
      | 'makeEnvelopeOffline'
      | 'makeEnvelopeOpened'
      | 'makeEnvelopeOverTemperature'
      | 'makeEnvelopePowerSaver'
      | 'makeEnvelopeRecoverableFailure'
      | 'makeEnvelopeRecoverableStorage'
      | 'makeEnvelopeRemoved'
      | 'makeEnvelopeResourceAdded'
      | 'makeEnvelopeResourceRemoved'
      | 'makeEnvelopeThermistorFailure'
      | 'makeEnvelopeTimingFailure'
      | 'makeEnvelopeTurnedOff'
      | 'makeEnvelopeTurnedOn'
      | 'makeEnvelopeUnderTemperature'
      | 'makeEnvelopeUnrecoverableFailure'
      | 'makeEnvelopeUnrecoverableStorageError'
      | 'makeEnvelopeWarmingUp'
      | 'markerAdjustingPrintQuality'
      | 'markerCleanerMissing'
      | 'markerDeveloperAlmostEmpty'
      | 'markerDeveloperEmpty'
      | 'markerDeveloperMissing'
      | 'markerFuserMissing'
      | 'markerFuserThermistorFailure'
      | 'markerFuserTimingFailure'
      | 'markerInkAlmostEmpty'
      | 'markerInkEmpty'
      | 'markerInkMissing'
      | 'markerOpcMissing'
      | 'markerPrintRibbonAlmostEmpty'
      | 'markerPrintRibbonEmpty'
      | 'markerPrintRibbonMissing'
      | 'markerSupplyAlmostEmpty'
      | 'markerSupplyMissing'
      | 'markerTonerCartridgeMissing'
      | 'markerTonerMissing'
      | 'markerWasteInkReceptacleAlmostFull'
      | 'markerWasteInkReceptacleFull'
      | 'markerWasteInkReceptacleMissing'
      | 'markerWasteMissing'
      | 'markerWasteTonerReceptacleAlmostFull'
      | 'markerWasteTonerReceptacleFull'
      | 'markerWasteTonerReceptacleMissing'
      | 'materialEmpty'
      | 'materialLow'
      | 'materialNeeded'
      | 'mediaDrying'
      | 'mediaPathCannotDuplexMediaSelected'
      | 'mediaPathFailure'
      | 'mediaPathInputEmpty'
      | 'mediaPathInputFeedError'
      | 'mediaPathInputJam'
      | 'mediaPathInputRequest'
      | 'mediaPathJam'
      | 'mediaPathMediaTrayAlmostFull'
      | 'mediaPathMediaTrayFull'
      | 'mediaPathMediaTrayMissing'
      | 'mediaPathOutputFeedError'
      | 'mediaPathOutputFull'
      | 'mediaPathOutputJam'
      | 'mediaPathPickRollerFailure'
      | 'mediaPathPickRollerLifeOver'
      | 'mediaPathPickRollerLifeWarn'
      | 'mediaPathPickRollerMissing'
      | 'motorFailure'
      | 'outputMailboxSelectFailure'
      | 'outputMediaTrayFailure'
      | 'outputMediaTrayFeedError'
      | 'outputMediaTrayJam'
      | 'perforaterAdded'
      | 'perforaterAlmostEmpty'
      | 'perforaterAlmostFull'
      | 'perforaterAtLimit'
      | 'perforaterClosed'
      | 'perforaterConfigurationChange'
      | 'perforaterCoverClosed'
      | 'perforaterCoverOpen'
      | 'perforaterEmpty'
      | 'perforaterFull'
      | 'perforaterInterlockClosed'
      | 'perforaterInterlockOpen'
      | 'perforaterJam'
      | 'perforaterLifeAlmostOver'
      | 'perforaterLifeOver'
      | 'perforaterMemoryExhausted'
      | 'perforaterMissing'
      | 'perforaterMotorFailure'
      | 'perforaterNearLimit'
      | 'perforaterOffline'
      | 'perforaterOpened'
      | 'perforaterOverTemperature'
      | 'perforaterPowerSaver'
      | 'perforaterRecoverableFailure'
      | 'perforaterRecoverableStorage'
      | 'perforaterRemoved'
      | 'perforaterResourceAdded'
      | 'perforaterResourceRemoved'
      | 'perforaterThermistorFailure'
      | 'perforaterTimingFailure'
      | 'perforaterTurnedOff'
      | 'perforaterTurnedOn'
      | 'perforaterUnderTemperature'
      | 'perforaterUnrecoverableFailure'
      | 'perforaterUnrecoverableStorageError'
      | 'perforaterWarmingUp'
      | 'platformCooling'
      | 'platformFailure'
      | 'platformHeating'
      | 'platformTemperatureHigh'
      | 'platformTemperatureLow'
      | 'powerDown'
      | 'powerUp'
      | 'printerManualReset'
      | 'printerNmsReset'
      | 'printerReadyToPrint'
      | 'puncherAdded'
      | 'puncherAlmostEmpty'
      | 'puncherAlmostFull'
      | 'puncherAtLimit'
      | 'puncherClosed'
      | 'puncherConfigurationChange'
      | 'puncherCoverClosed'
      | 'puncherCoverOpen'
      | 'puncherEmpty'
      | 'puncherFull'
      | 'puncherInterlockClosed'
      | 'puncherInterlockOpen'
      | 'puncherJam'
      | 'puncherLifeAlmostOver'
      | 'puncherLifeOver'
      | 'puncherMemoryExhausted'
      | 'puncherMissing'
      | 'puncherMotorFailure'
      | 'puncherNearLimit'
      | 'puncherOffline'
      | 'puncherOpened'
      | 'puncherOverTemperature'
      | 'puncherPowerSaver'
      | 'puncherRecoverableFailure'
      | 'puncherRecoverableStorage'
      | 'puncherRemoved'
      | 'puncherResourceAdded'
      | 'puncherResourceRemoved'
      | 'puncherThermistorFailure'
      | 'puncherTimingFailure'
      | 'puncherTurnedOff'
      | 'puncherTurnedOn'
      | 'puncherUnderTemperature'
      | 'puncherUnrecoverableFailure'
      | 'puncherUnrecoverableStorageError'
      | 'puncherWarmingUp'
      | 'resuming'
      | 'scanMediaPathFailure'
      | 'scanMediaPathInputEmpty'
      | 'scanMediaPathInputFeedError'
      | 'scanMediaPathInputJam'
      | 'scanMediaPathInputRequest'
      | 'scanMediaPathJam'
      | 'scanMediaPathOutputFeedError'
      | 'scanMediaPathOutputFull'
      | 'scanMediaPathOutputJam'
      | 'scanMediaPathPickRollerFailure'
      | 'scanMediaPathPickRollerLifeOver'
      | 'scanMediaPathPickRollerLifeWarn'
      | 'scanMediaPathPickRollerMissing'
      | 'scanMediaPathTrayAlmostFull'
      | 'scanMediaPathTrayFull'
      | 'scanMediaPathTrayMissing'
      | 'scannerLightFailure'
      | 'scannerLightLifeAlmostOver'
      | 'scannerLightLifeOver'
      | 'scannerLightMissing'
      | 'scannerSensorFailure'
      | 'scannerSensorLifeAlmostOver'
      | 'scannerSensorLifeOver'
      | 'scannerSensorMissing'
      | 'separationCutterAdded'
      | 'separationCutterAlmostEmpty'
      | 'separationCutterAlmostFull'
      | 'separationCutterAtLimit'
      | 'separationCutterClosed'
      | 'separationCutterConfigurationChange'
      | 'separationCutterCoverClosed'
      | 'separationCutterCoverOpen'
      | 'separationCutterEmpty'
      | 'separationCutterFull'
      | 'separationCutterInterlockClosed'
      | 'separationCutterInterlockOpen'
      | 'separationCutterJam'
      | 'separationCutterLifeAlmostOver'
      | 'separationCutterLifeOver'
      | 'separationCutterMemoryExhausted'
      | 'separationCutterMissing'
      | 'separationCutterMotorFailure'
      | 'separationCutterNearLimit'
      | 'separationCutterOffline'
      | 'separationCutterOpened'
      | 'separationCutterOverTemperature'
      | 'separationCutterPowerSaver'
      | 'separationCutterRecoverableFailure'
      | 'separationCutterRecoverableStorage'
      | 'separationCutterRemoved'
      | 'separationCutterResourceAdded'
      | 'separationCutterResourceRemoved'
      | 'separationCutterThermistorFailure'
      | 'separationCutterTimingFailure'
      | 'separationCutterTurnedOff'
      | 'separationCutterTurnedOn'
      | 'separationCutterUnderTemperature'
      | 'separationCutterUnrecoverableFailure'
      | 'separationCutterUnrecoverableStorageError'
      | 'separationCutterWarmingUp'
      | 'sheetRotatorAdded'
      | 'sheetRotatorAlmostEmpty'
      | 'sheetRotatorAlmostFull'
      | 'sheetRotatorAtLimit'
      | 'sheetRotatorClosed'
      | 'sheetRotatorConfigurationChange'
      | 'sheetRotatorCoverClosed'
      | 'sheetRotatorCoverOpen'
      | 'sheetRotatorEmpty'
      | 'sheetRotatorFull'
      | 'sheetRotatorInterlockClosed'
      | 'sheetRotatorInterlockOpen'
      | 'sheetRotatorJam'
      | 'sheetRotatorLifeAlmostOver'
      | 'sheetRotatorLifeOver'
      | 'sheetRotatorMemoryExhausted'
      | 'sheetRotatorMissing'
      | 'sheetRotatorMotorFailure'
      | 'sheetRotatorNearLimit'
      | 'sheetRotatorOffline'
      | 'sheetRotatorOpened'
      | 'sheetRotatorOverTemperature'
      | 'sheetRotatorPowerSaver'
      | 'sheetRotatorRecoverableFailure'
      | 'sheetRotatorRecoverableStorage'
      | 'sheetRotatorRemoved'
      | 'sheetRotatorResourceAdded'
      | 'sheetRotatorResourceRemoved'
      | 'sheetRotatorThermistorFailure'
      | 'sheetRotatorTimingFailure'
      | 'sheetRotatorTurnedOff'
      | 'sheetRotatorTurnedOn'
      | 'sheetRotatorUnderTemperature'
      | 'sheetRotatorUnrecoverableFailure'
      | 'sheetRotatorUnrecoverableStorageError'
      | 'sheetRotatorWarmingUp'
      | 'slitterAdded'
      | 'slitterAlmostEmpty'
      | 'slitterAlmostFull'
      | 'slitterAtLimit'
      | 'slitterClosed'
      | 'slitterConfigurationChange'
      | 'slitterCoverClosed'
      | 'slitterCoverOpen'
      | 'slitterEmpty'
      | 'slitterFull'
      | 'slitterInterlockClosed'
      | 'slitterInterlockOpen'
      | 'slitterJam'
      | 'slitterLifeAlmostOver'
      | 'slitterLifeOver'
      | 'slitterMemoryExhausted'
      | 'slitterMissing'
      | 'slitterMotorFailure'
      | 'slitterNearLimit'
      | 'slitterOffline'
      | 'slitterOpened'
      | 'slitterOverTemperature'
      | 'slitterPowerSaver'
      | 'slitterRecoverableFailure'
      | 'slitterRecoverableStorage'
      | 'slitterRemoved'
      | 'slitterResourceAdded'
      | 'slitterResourceRemoved'
      | 'slitterThermistorFailure'
      | 'slitterTimingFailure'
      | 'slitterTurnedOff'
      | 'slitterTurnedOn'
      | 'slitterUnderTemperature'
      | 'slitterUnrecoverableFailure'
      | 'slitterUnrecoverableStorageError'
      | 'slitterWarmingUp'
      | 'stackerAdded'
      | 'stackerAlmostEmpty'
      | 'stackerAlmostFull'
      | 'stackerAtLimit'
      | 'stackerClosed'
      | 'stackerConfigurationChange'
      | 'stackerCoverClosed'
      | 'stackerCoverOpen'
      | 'stackerEmpty'
      | 'stackerFull'
      | 'stackerInterlockClosed'
      | 'stackerInterlockOpen'
      | 'stackerJam'
      | 'stackerLifeAlmostOver'
      | 'stackerLifeOver'
      | 'stackerMemoryExhausted'
      | 'stackerMissing'
      | 'stackerMotorFailure'
      | 'stackerNearLimit'
      | 'stackerOffline'
      | 'stackerOpened'
      | 'stackerOverTemperature'
      | 'stackerPowerSaver'
      | 'stackerRecoverableFailure'
      | 'stackerRecoverableStorage'
      | 'stackerRemoved'
      | 'stackerResourceAdded'
      | 'stackerResourceRemoved'
      | 'stackerThermistorFailure'
      | 'stackerTimingFailure'
      | 'stackerTurnedOff'
      | 'stackerTurnedOn'
      | 'stackerUnderTemperature'
      | 'stackerUnrecoverableFailure'
      | 'stackerUnrecoverableStorageError'
      | 'stackerWarmingUp'
      | 'standby'
      | 'staplerAdded'
      | 'staplerAlmostEmpty'
      | 'staplerAlmostFull'
      | 'staplerAtLimit'
      | 'staplerClosed'
      | 'staplerConfigurationChange'
      | 'staplerCoverClosed'
      | 'staplerCoverOpen'
      | 'staplerEmpty'
      | 'staplerFull'
      | 'staplerInterlockClosed'
      | 'staplerInterlockOpen'
      | 'staplerJam'
      | 'staplerLifeAlmostOver'
      | 'staplerLifeOver'
      | 'staplerMemoryExhausted'
      | 'staplerMissing'
      | 'staplerMotorFailure'
      | 'staplerNearLimit'
      | 'staplerOffline'
      | 'staplerOpened'
      | 'staplerOverTemperature'
      | 'staplerPowerSaver'
      | 'staplerRecoverableFailure'
      | 'staplerRecoverableStorage'
      | 'staplerRemoved'
      | 'staplerResourceAdded'
      | 'staplerResourceRemoved'
      | 'staplerThermistorFailure'
      | 'staplerTimingFailure'
      | 'staplerTurnedOff'
      | 'staplerTurnedOn'
      | 'staplerUnderTemperature'
      | 'staplerUnrecoverableFailure'
      | 'staplerUnrecoverableStorageError'
      | 'staplerWarmingUp'
      | 'stitcherAdded'
      | 'stitcherAlmostEmpty'
      | 'stitcherAlmostFull'
      | 'stitcherAtLimit'
      | 'stitcherClosed'
      | 'stitcherConfigurationChange'
      | 'stitcherCoverClosed'
      | 'stitcherCoverOpen'
      | 'stitcherEmpty'
      | 'stitcherFull'
      | 'stitcherInterlockClosed'
      | 'stitcherInterlockOpen'
      | 'stitcherJam'
      | 'stitcherLifeAlmostOver'
      | 'stitcherLifeOver'
      | 'stitcherMemoryExhausted'
      | 'stitcherMissing'
      | 'stitcherMotorFailure'
      | 'stitcherNearLimit'
      | 'stitcherOffline'
      | 'stitcherOpened'
      | 'stitcherOverTemperature'
      | 'stitcherPowerSaver'
      | 'stitcherRecoverableFailure'
      | 'stitcherRecoverableStorage'
      | 'stitcherRemoved'
      | 'stitcherResourceAdded'
      | 'stitcherResourceRemoved'
      | 'stitcherThermistorFailure'
      | 'stitcherTimingFailure'
      | 'stitcherTurnedOff'
      | 'stitcherTurnedOn'
      | 'stitcherUnderTemperature'
      | 'stitcherUnrecoverableFailure'
      | 'stitcherUnrecoverableStorageError'
      | 'stitcherWarmingUp'
      | 'subunitAdded'
      | 'subunitAlmostEmpty'
      | 'subunitAlmostFull'
      | 'subunitAtLimit'
      | 'subunitClosed'
      | 'subunitCoolingDown'
      | 'subunitEmpty'
      | 'subunitFull'
      | 'subunitLifeAlmostOver'
      | 'subunitLifeOver'
      | 'subunitMemoryExhausted'
      | 'subunitMissing'
      | 'subunitMotorFailure'
      | 'subunitNearLimit'
      | 'subunitOffline'
      | 'subunitOpened'
      | 'subunitOverTemperature'
      | 'subunitPowerSaver'
      | 'subunitRecoverableFailure'
      | 'subunitRecoverableStorage'
      | 'subunitRemoved'
      | 'subunitResourceAdded'
      | 'subunitResourceRemoved'
      | 'subunitThermistorFailure'
      | 'subunitTimingFailure'
      | 'subunitTurnedOff'
      | 'subunitTurnedOn'
      | 'subunitUnderTemperature'
      | 'subunitUnrecoverableFailure'
      | 'subunitUnrecoverableStorage'
      | 'subunitWarmingUp'
      | 'suspend'
      | 'testing'
      | 'trimmerAdded'
      | 'trimmerAlmostEmpty'
      | 'trimmerAlmostFull'
      | 'trimmerAtLimit'
      | 'trimmerClosed'
      | 'trimmerConfigurationChange'
      | 'trimmerCoverClosed'
      | 'trimmerCoverOpen'
      | 'trimmerEmpty'
      | 'trimmerFull'
      | 'trimmerInterlockClosed'
      | 'trimmerInterlockOpen'
      | 'trimmerJam'
      | 'trimmerLifeAlmostOver'
      | 'trimmerLifeOver'
      | 'trimmerMemoryExhausted'
      | 'trimmerMissing'
      | 'trimmerMotorFailure'
      | 'trimmerNearLimit'
      | 'trimmerOffline'
      | 'trimmerOpened'
      | 'trimmerOverTemperature'
      | 'trimmerPowerSaver'
      | 'trimmerRecoverableFailure'
      | 'trimmerRecoverableStorage'
      | 'trimmerRemoved'
      | 'trimmerResourceAdded'
      | 'trimmerResourceRemoved'
      | 'trimmerThermistorFailure'
      | 'trimmerTimingFailure'
      | 'trimmerTurnedOff'
      | 'trimmerTurnedOn'
      | 'trimmerUnderTemperature'
      | 'trimmerUnrecoverableFailure'
      | 'trimmerUnrecoverableStorageError'
      | 'trimmerWarmingUp'
      | 'unknown'
      | 'wrapperAdded'
      | 'wrapperAlmostEmpty'
      | 'wrapperAlmostFull'
      | 'wrapperAtLimit'
      | 'wrapperClosed'
      | 'wrapperConfigurationChange'
      | 'wrapperCoverClosed'
      | 'wrapperCoverOpen'
      | 'wrapperEmpty'
      | 'wrapperFull'
      | 'wrapperInterlockClosed'
      | 'wrapperInterlockOpen'
      | 'wrapperJam'
      | 'wrapperLifeAlmostOver'
      | 'wrapperLifeOver'
      | 'wrapperMemoryExhausted'
      | 'wrapperMissing'
      | 'wrapperMotorFailure'
      | 'wrapperNearLimit'
      | 'wrapperOffline'
      | 'wrapperOpened'
      | 'wrapperOverTemperature'
      | 'wrapperPowerSaver'
      | 'wrapperRecoverableFailure'
      | 'wrapperRecoverableStorage'
      | 'wrapperRemoved'
      | 'wrapperResourceAdded'
      | 'wrapperResourceRemoved'
      | 'wrapperThermistorFailure'
      | 'wrapperTimingFailure'
      | 'wrapperTurnedOff'
      | 'wrapperTurnedOn'
      | 'wrapperUnderTemperature'
      | 'wrapperUnrecoverableFailure'
      | 'wrapperUnrecoverableStorageError'
      | 'wrapperWarmingUp'
    /**
     * printerProcessingState
     * @enum {string}
     */
    'microsoft.graph.printerProcessingState':
      | 'unknown'
      | 'idle'
      | 'processing'
      | 'stopped'
      | 'unknownFutureValue'
    /** printJobConfiguration */
    'microsoft.graph.printJobConfiguration': {
      /** @description Whether the printer should collate pages wehen printing multiple copies of a multi-page document. */
      collate?: boolean | null
      colorMode?: components['schemas']['microsoft.graph.printColorMode']
      /**
       * Format: int32
       * @description The number of copies that should be printed. Read-only.
       */
      copies?: number | null
      /**
       * Format: int32
       * @description The resolution to use when printing the job, expressed in dots per inch (DPI). Read-only.
       */
      dpi?: number | null
      duplexMode?: components['schemas']['microsoft.graph.printDuplexMode']
      feedOrientation?: components['schemas']['microsoft.graph.printerFeedOrientation']
      /** @description Finishing processes to use when printing. */
      finishings?: components['schemas']['microsoft.graph.printFinishing'][]
      /** @description True to fit each page of a PDF document to a physical sheet of media; false to let the printer decide how to lay out impressions. */
      fitPdfToPage?: boolean | null
      /** @description The input bin (tray) to use when printing. See the printer's capabilities for a list of supported input bins. */
      inputBin?: string | null
      margin?: components['schemas']['microsoft.graph.printMargin']
      /** @description The media size to use when printing. Supports standard size names for ISO and ANSI media sizes. Valid values listed in the printerCapabilities topic. */
      mediaSize?: string | null
      /** @description The default media (such as paper) type to print the document on. */
      mediaType?: string | null
      multipageLayout?: components['schemas']['microsoft.graph.printMultipageLayout']
      orientation?: components['schemas']['microsoft.graph.printOrientation']
      /** @description The output bin to place completed prints into. See the printer's capabilities for a list of supported output bins. */
      outputBin?: string | null
      /** @description The page ranges to print. Read-only. */
      pageRanges?: components['schemas']['microsoft.graph.integerRange'][]
      /**
       * Format: int32
       * @description The number of document pages to print on each sheet.
       */
      pagesPerSheet?: number | null
      quality?: components['schemas']['microsoft.graph.printQuality']
      scaling?: components['schemas']['microsoft.graph.printScaling']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.userIdentity': components['schemas']['microsoft.graph.identity'] & {
      /** @description Indicates the client IP address associated with the user performing the activity (audit log only). */
      ipAddress?: string | null
      /** @description The userPrincipalName attribute of the user. */
      userPrincipalName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /** printJobStatus */
    'microsoft.graph.printJobStatus': {
      /** @description A human-readable description of the print job's current processing state. Read-only. */
      description?: string
      /** @description Additional details for print job state. Valid values are described in the following table. Read-only. */
      details?: components['schemas']['microsoft.graph.printJobStateDetail'][]
      /** @description True if the job was acknowledged by a printer; false otherwise. Read-only. */
      isAcquiredByPrinter?: boolean
      state?: components['schemas']['microsoft.graph.printJobProcessingState']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.printDocument': components['schemas']['microsoft.graph.entity'] & {
      /** @description The document's content (MIME) type. Read-only. */
      contentType?: string | null
      /** @description The document's name. Read-only. */
      displayName?: string | null
      /**
       * Format: int64
       * @description The document's size in bytes. Read-only.
       */
      size?: number
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.printTask': components['schemas']['microsoft.graph.entity'] & {
      /** @description The URL for the print entity that triggered this task. For example, https://graph.microsoft.com/v1.0/print/printers/{printerId}/jobs/{jobId}. Read-only. */
      parentUrl?: string
      status?: components['schemas']['microsoft.graph.printTaskStatus']
      definition?: components['schemas']['microsoft.graph.printTaskDefinition']
      trigger?: components['schemas']['microsoft.graph.printTaskTrigger']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * printEvent
     * @enum {string}
     */
    'microsoft.graph.printEvent': 'jobStarted' | 'unknownFutureValue'
    'microsoft.graph.printTaskDefinition': components['schemas']['microsoft.graph.entity'] & {
      createdBy?: components['schemas']['microsoft.graph.appIdentity']
      /** @description The name of the printTaskDefinition. */
      displayName?: string
      /** @description A list of tasks that have been created based on this definition. The list includes currently running tasks and recently completed tasks. Read-only. */
      tasks?: components['schemas']['microsoft.graph.printTask'][]
      [key: string]: Record<string, never> | undefined
    }
    /**
     * teamsAppResourceSpecificPermissionType
     * @enum {string}
     */
    'microsoft.graph.teamsAppResourceSpecificPermissionType':
      | 'delegated'
      | 'application'
      | 'unknownFutureValue'
    'microsoft.graph.teamworkConversationIdentity': components['schemas']['microsoft.graph.identity'] & {
      conversationIdentityType?: components['schemas']['microsoft.graph.teamworkConversationIdentityType']
      [key: string]: Record<string, never> | undefined
    }
    /** insightIdentity */
    'microsoft.graph.insightIdentity': {
      /** @description The email address of the user who shared the item. */
      address?: string | null
      /** @description The display name of the user who shared the item. */
      displayName?: string | null
      /** @description The ID of the user who shared the item. */
      id?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * scheduleChangeRequestActor
     * @enum {string}
     */
    'microsoft.graph.scheduleChangeRequestActor':
      | 'sender'
      | 'recipient'
      | 'manager'
      | 'system'
      | 'unknownFutureValue'
    /**
     * scheduleChangeState
     * @enum {string}
     */
    'microsoft.graph.scheduleChangeState':
      | 'pending'
      | 'approved'
      | 'declined'
      | 'unknownFutureValue'
    /** scheduleEntity */
    'microsoft.graph.scheduleEntity': {
      /** Format: date-time */
      endDateTime?: string | null
      /** Format: date-time */
      startDateTime?: string | null
      theme?: components['schemas']['microsoft.graph.scheduleEntityTheme']
      [key: string]: Record<string, never> | undefined
    }
    /** shiftActivity */
    'microsoft.graph.shiftActivity': {
      /** @description Customer defined code for the shiftActivity. Required. */
      code?: string | null
      /** @description The name of the shiftActivity. Required. */
      displayName?: string | null
      /**
       * Format: date-time
       * @description The end date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
       */
      endDateTime?: string | null
      /** @description Indicates whether the microsoft.graph.user should be paid for the activity during their shift. Required. */
      isPaid?: boolean | null
      /**
       * Format: date-time
       * @description The start date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
       */
      startDateTime?: string | null
      theme?: components['schemas']['microsoft.graph.scheduleEntityTheme']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * settingSourceType
     * @enum {string}
     */
    'microsoft.graph.settingSourceType': 'deviceConfiguration' | 'deviceIntent'
    /** attendanceInterval */
    'microsoft.graph.attendanceInterval': {
      /**
       * Format: int32
       * @description Duration of the meeting interval in seconds; that is, the difference between joinDateTime and leaveDateTime.
       */
      durationInSeconds?: number | null
      /**
       * Format: date-time
       * @description The time the attendee joined in UTC.
       */
      joinDateTime?: string | null
      /**
       * Format: date-time
       * @description The time the attendee left in UTC.
       */
      leaveDateTime?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.storageQuotaBreakdown': components['schemas']['microsoft.graph.entity'] & {
      displayName?: string | null
      manageWebUrl?: string | null
      /** Format: int64 */
      used?: number | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartAxisFormat': components['schemas']['microsoft.graph.entity'] & {
      font?: components['schemas']['microsoft.graph.workbookChartFont']
      line?: components['schemas']['microsoft.graph.workbookChartLineFormat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartGridlines': components['schemas']['microsoft.graph.entity'] & {
      /** @description Indicates whether the axis gridlines are visible. */
      visible?: boolean
      format?: components['schemas']['microsoft.graph.workbookChartGridlinesFormat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartAxisTitle': components['schemas']['microsoft.graph.entity'] & {
      /** @description Represents the axis title. */
      text?: string | null
      /** @description A Boolean that specifies the visibility of an axis title. */
      visible?: boolean
      format?: components['schemas']['microsoft.graph.workbookChartAxisTitleFormat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartLineFormat': components['schemas']['microsoft.graph.entity'] & {
      /** @description The HTML color code that represents the color of lines in the chart. */
      color?: string | null
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartPointFormat': components['schemas']['microsoft.graph.entity'] & {
      fill?: components['schemas']['microsoft.graph.workbookChartFill']
      [key: string]: Record<string, never> | undefined
    }
    /** printMargin */
    'microsoft.graph.printMargin': {
      /**
       * Format: int32
       * @description The margin in microns from the bottom edge.
       */
      bottom?: number | null
      /**
       * Format: int32
       * @description The margin in microns from the left edge.
       */
      left?: number | null
      /**
       * Format: int32
       * @description The margin in microns from the right edge.
       */
      right?: number | null
      /**
       * Format: int32
       * @description The margin in microns from the top edge.
       */
      top?: number | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * printJobStateDetail
     * @enum {string}
     */
    'microsoft.graph.printJobStateDetail':
      | 'uploadPending'
      | 'transforming'
      | 'completedSuccessfully'
      | 'completedWithWarnings'
      | 'completedWithErrors'
      | 'releaseWait'
      | 'interpreting'
      | 'unknownFutureValue'
    /**
     * printJobProcessingState
     * @enum {string}
     */
    'microsoft.graph.printJobProcessingState':
      | 'unknown'
      | 'pending'
      | 'processing'
      | 'paused'
      | 'stopped'
      | 'completed'
      | 'canceled'
      | 'aborted'
      | 'unknownFutureValue'
    /** printTaskStatus */
    'microsoft.graph.printTaskStatus': {
      /** @description A human-readable description of the current processing state of the printTask. */
      description?: string
      state?: components['schemas']['microsoft.graph.printTaskProcessingState']
      [key: string]: Record<string, never> | undefined
    }
    /** appIdentity */
    'microsoft.graph.appIdentity': {
      /** @description Refers to the unique ID representing application in Microsoft Entra ID. */
      appId?: string | null
      /** @description Refers to the application name displayed in the Microsoft Entra admin center. */
      displayName?: string | null
      /** @description Refers to the unique ID for the service principal in Microsoft Entra ID. */
      servicePrincipalId?: string | null
      /** @description Refers to the Service Principal Name is the Application name in the tenant. */
      servicePrincipalName?: string | null
      [key: string]: Record<string, never> | undefined
    }
    /**
     * teamworkConversationIdentityType
     * @enum {string}
     */
    'microsoft.graph.teamworkConversationIdentityType':
      | 'team'
      | 'channel'
      | 'chat'
      | 'unknownFutureValue'
    /**
     * scheduleEntityTheme
     * @enum {string}
     */
    'microsoft.graph.scheduleEntityTheme':
      | 'white'
      | 'blue'
      | 'green'
      | 'purple'
      | 'pink'
      | 'yellow'
      | 'gray'
      | 'darkBlue'
      | 'darkGreen'
      | 'darkPurple'
      | 'darkPink'
      | 'darkYellow'
      | 'unknownFutureValue'
    'microsoft.graph.workbookChartGridlinesFormat': components['schemas']['microsoft.graph.entity'] & {
      line?: components['schemas']['microsoft.graph.workbookChartLineFormat']
      [key: string]: Record<string, never> | undefined
    }
    'microsoft.graph.workbookChartAxisTitleFormat': components['schemas']['microsoft.graph.entity'] & {
      font?: components['schemas']['microsoft.graph.workbookChartFont']
      [key: string]: Record<string, never> | undefined
    }
    /**
     * printTaskProcessingState
     * @enum {string}
     */
    'microsoft.graph.printTaskProcessingState':
      | 'pending'
      | 'processing'
      | 'completed'
      | 'aborted'
      | 'unknownFutureValue'
  }
  responses: {
    /** @description Retrieved collection */
    'microsoft.graph.driveCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveCollectionResponse']
      }
    }
    /** @description error */
    error: {
      content: {
        'application/json': components['schemas']['microsoft.graph.ODataErrors.ODataError']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.driveItemCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemCollectionResponse']
      }
    }
    /** @description The count of the resource */
    ODataCountResponse: {
      content: {
        'text/plain': components['schemas']['ODataCountResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.serviceProvisioningErrorCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.itemActivityStatCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStatCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.itemActivityCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.documentSetVersionCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersionCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.listItemVersionCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersionCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.permissionCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.permissionCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.subscriptionCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscriptionCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.thumbnailSetCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSetCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.driveItemVersionCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersionCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.columnDefinitionCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinitionCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.contentTypeCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentTypeCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.columnLinkCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLinkCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.listItemCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemCollectionResponse']
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.richLongRunningOperationCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperationCollectionResponse']
      }
    }
    /** @description Success */
    recentResponse: {
      content: {
        'application/json': {
          value?: components['schemas']['microsoft.graph.driveItem'][]
          '@odata.nextLink'?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    /** @description Success */
    searchResponse: {
      content: {
        'application/json': {
          value?: components['schemas']['microsoft.graph.driveItem'][]
          '@odata.nextLink'?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    /** @description Success */
    sharedWithMeResponse: {
      content: {
        'application/json': {
          value?: components['schemas']['microsoft.graph.driveItem'][]
          '@odata.nextLink'?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    /** @description Retrieved collection */
    'microsoft.graph.sharedDriveItemCollectionResponse': {
      content: {
        'application/json': components['schemas']['microsoft.graph.sharedDriveItemCollectionResponse']
      }
    }
  }
  parameters: {
    /**
     * @description Show only the first n items
     * @example 50
     */
    top?: number
    /** @description Skip the first n items */
    skip?: number
    /** @description Search items by search phrases */
    search?: string
    /** @description Filter items by property values */
    filter?: string
    /** @description Include count of items */
    count?: boolean
  }
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /** Get entities from drives */
  drive_ListDrive: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Add new entity to drives */
  drive_CreateDrive: {
    /** @description New entity */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.drive']
      }
    }
    responses: {
      /** @description Created entity */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get entity from drives by key */
  drive_GetDrive: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved entity */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete entity from drives */
  drive_DeleteDrive: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update entity in drives */
  drive_UpdateDrive: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.drive']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get bundles from drives
   * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
   */
  drive_ListBundle: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to bundles for drives */
  drive_CreateBundle: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get bundles from drives
   * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
   */
  drive_GetBundle: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property bundles from drives
   * @description The content stream, if the item represents a file.
   */
  drive_GetBundlesContent: {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property bundles in drives
   * @description The content stream, if the item represents a file.
   */
  drive_SetBundlesContent: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property bundles in drives
   * @description The content stream, if the item represents a file.
   */
  drive_DeleteBundlesContent: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.bundle_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from drives
   * @description Identity of the user who created the item. Read-only.
   */
  drive_GetCreatedGraphBPreUser: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get following from drives
   * @description The list of items the user is following. Only in OneDrive for Business.
   */
  drive_ListFollowing: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get following from drives
   * @description The list of items the user is following. Only in OneDrive for Business.
   */
  drive_GetFollowing: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property following from drives
   * @description The content stream, if the item represents a file.
   */
  drive_GetFollowingContent: {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property following in drives
   * @description The content stream, if the item represents a file.
   */
  drive_SetFollowingContent: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property following in drives
   * @description The content stream, if the item represents a file.
   */
  drive_DeleteFollowingContent: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.following_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * drive: sharedWithMe
   * @description Get a list of driveItem objects shared with the owner of a drive. The driveItems returned from the sharedWithMe method always include the remoteItem facet that indicates they are items from a different drive.
   */
  drive_ListItem: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to items for drives */
  drive_CreateItem: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from drives
   * @description All items contained in the drive. Read-only. Nullable.
   */
  drive_GetItem: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property items for drives */
  drive_DeleteItem: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property items in drives */
  drive_UpdateItem: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from drives
   * @description Analytics about the view activities that took place on this item.
   */
  'drive.item_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property analytics for drives */
  'drive.item_DeleteAnalytic': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property analytics in drives */
  'drive.item_UpdateAnalytic': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemAnalytics']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get itemAnalytics
   * @description Get itemAnalytics about the views that took place under this resource.
   * The itemAnalytics resource is a convenient way to get activity stats for allTime and the lastSevenDays.
   * For a custom time range or interval, use the getActivitiesByInterval API.
   */
  'drive.item.analytic_GetAllTime': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from drives */
  'drive.item.analytic_ListItemActivityStat': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityStatCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to itemActivityStats for drives */
  'drive.item.analytic_CreateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from drives */
  'drive.item.analytic_GetItemActivityStat': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property itemActivityStats for drives */
  'drive.item.analytic_DeleteItemActivityStat': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property itemActivityStats in drives */
  'drive.item.analytic_UpdateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from drives
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'drive.item.analytic.itemActivityStat_ListActivity': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to activities for drives */
  'drive.item.analytic.itemActivityStat_CreateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from drives
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'drive.item.analytic.itemActivityStat_GetActivity': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property activities for drives */
  'drive.item.analytic.itemActivityStat_DeleteActivity': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property activities in drives */
  'drive.item.analytic.itemActivityStat_UpdateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from drives
   * @description Exposes the driveItem that was the target of this activity.
   */
  'drive.item.analytic.itemActivityStat.activity_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item.analytic.itemActivityStat.activity_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item.analytic.itemActivityStat.activity_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item.analytic.itemActivityStat.activity_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.analytic.itemActivityStat.activity_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.analytic.itemActivityStat_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get lastSevenDays from drives */
  'drive.item.analytic_GetLastSevenDay': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * List children of a driveItem
   * @description Return a collection of DriveItems in the children relationship of a DriveItem. DriveItems with a non-null folder or package facet can have one or more child DriveItems.
   */
  'drive.item_ListChild': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to children for drives */
  'drive.item_CreateChild': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from drives
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'drive.item_GetChild': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property children from drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item_GetChildrenContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property children in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item_SetChildrenContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property children in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item_DeleteChildrenContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.child_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property items from drives
   * @description The content stream, if the item represents a file.
   */
  drive_GetItemsContent: {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property items in drives
   * @description The content stream, if the item represents a file.
   */
  drive_SetItemsContent: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property items in drives
   * @description The content stream, if the item represents a file.
   */
  drive_DeleteItemsContent: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from drives
   * @description Identity of the user who created the item. Read-only.
   */
  'drive.item_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.item.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.item.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.item.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from drives
   * @description Identity of the user who last modified the item. Read-only.
   */
  'drive.item_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.item.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.item.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.item.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get listItem from drives
   * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
   */
  'drive.item_GetListItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property listItem for drives */
  'drive.item_DeleteListItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property listItem in drives */
  'drive.item_UpdateListItem': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from drives
   * @description Analytics about the view activities that took place on this item.
   */
  'drive.item.listItem_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from drives
   * @description Identity of the user who created the item. Read-only.
   */
  'drive.item.listItem_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.item.listItem.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.item.listItem.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.item.listItem.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from drives
   * @description Version information for a document set version created by a user.
   */
  'drive.item.listItem_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for drives */
  'drive.item.listItem_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from drives
   * @description Version information for a document set version created by a user.
   */
  'drive.item.listItem_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for drives */
  'drive.item.listItem_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in drives */
  'drive.item.listItem_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description A collection of the fields and values for this version of the list item.
   */
  'drive.item.listItem.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.item.listItem.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.item.listItem.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restore
   * @description Restore a document set version.
   */
  'drive.item.listItem.documentSetVersion_restore': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.listItem.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from drives
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'drive.item.listItem_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item.listItem_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item.listItem_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.item.listItem_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description The values of the columns set on this list item.
   */
  'drive.item.listItem_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.item.listItem_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.item.listItem_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from drives
   * @description Identity of the user who last modified the item. Read-only.
   */
  'drive.item.listItem_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.item.listItem.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.item.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.item.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke action createLink */
  'drive.item.listItem_createLink': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          type?: string | null
          scope?: string | null
          /** Format: date-time */
          expirationDateTime?: string | null
          password?: string | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          /** @default false */
          sendNotification?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function getActivitiesByInterval */
  'drive.item.listItem_getActivitiesGraphBPreInterval': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description Usage: startDateTime='{startDateTime}' */
        startDateTime: string | null
        /** @description Usage: endDateTime='{endDateTime}' */
        endDateTime: string | null
        /** @description Usage: interval='{interval}' */
        interval: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.itemActivityStat'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the list item.
   */
  'drive.item.listItem_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for drives */
  'drive.item.listItem_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the list item.
   */
  'drive.item.listItem_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for drives */
  'drive.item.listItem_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in drives */
  'drive.item.listItem_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description A collection of the fields and values for this version of the list item.
   */
  'drive.item.listItem.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.item.listItem.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.item.listItem.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restoreVersion
   * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
   */
  'drive.item.listItem.version_restoreVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.listItem.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke action assignSensitivityLabel */
  'drive.item_assignSensitivityLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          sensitivityLabelId?: string | null
          assignmentMethod?: components['schemas']['microsoft.graph.sensitivityLabelAssignmentMethod']
          justificationText?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action checkin
   * @description Check in a checked out driveItem resource, which makes the version of the document available to others.
   */
  'drive.item_checkin': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          checkInAs?: string | null
          comment?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action checkout
   * @description Check out a driveItem resource to prevent others from editing the document, and prevent your changes from being visible until the documented is checked in.
   */
  'drive.item_checkout': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action copy
   * @description Asynchronously creates a copy of an driveItem (including any children), under a new parent item or with a new name.
   */
  'drive.item_copy': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          name?: string | null
          parentReference?: components['schemas']['microsoft.graph.itemReference']
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action createLink
   * @description You can use createLink action to share a DriveItem via a sharing link. The createLink action will create a new sharing link if the specified link type doesn't already exist for the calling application.
   * If a sharing link of the specified type already exists for the app, the existing sharing link will be returned. DriveItem resources inherit sharing permissions from their ancestors.
   */
  'drive.item_createLink': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          type?: string | null
          scope?: string | null
          /** Format: date-time */
          expirationDateTime?: string | null
          password?: string | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          /** @default false */
          sendNotification?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action createUploadSession */
  'drive.item_createUploadSession': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          item?: components['schemas']['microsoft.graph.driveItemUploadableProperties']
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.uploadSession']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function delta */
  'drive.item_delta': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description Usage: token='{token}' */
        token: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.driveItem'][]
            '@odata.nextLink'?: string | null
            '@odata.deltaLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action extractSensitivityLabels */
  'drive.item_extractSensitivityLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.extractSensitivityLabelsResult']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action follow
   * @description Follow a driveItem.
   */
  'drive.item_follow': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function getActivitiesByInterval */
  'drive.item_getActivitiesGraphBPreInterval': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description Usage: startDateTime='{startDateTime}' */
        startDateTime: string | null
        /** @description Usage: endDateTime='{endDateTime}' */
        endDateTime: string | null
        /** @description Usage: interval='{interval}' */
        interval: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.itemActivityStat'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action invite
   * @description Sends a sharing invitation for a driveItem.
   * A sharing invitation provides permissions to the recipients and optionally sends them an email with a sharing link.
   */
  'drive.item_invite': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          /** @default false */
          requireSignIn?: boolean | null
          roles?: (string | null)[]
          /** @default false */
          sendInvitation?: boolean | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          expirationDateTime?: string | null
          password?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.permission'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action permanentDelete */
  'drive.item_permanentDelete': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action preview */
  'drive.item_preview': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          page?: string | null
          /** Format: double */
          zoom?: number | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemPreviewInfo']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restore
   * @description Restore a driveItem that has been deleted and is currently in the recycle bin. NOTE: This functionality is currently only available for OneDrive Personal.
   */
  'drive.item_restore': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          parentReference?: components['schemas']['microsoft.graph.itemReference']
          name?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function search
   * @description Search the hierarchy of items for items matching a query.
   * You can search within a folder hierarchy, a whole drive, or files shared with the current user.
   */
  'drive.item_search': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description Usage: q='{q}' */
        q: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.driveItem'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action unfollow
   * @description Unfollow a driveItem.
   */
  'drive.item_unfollow': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action validatePermission */
  'drive.item_validatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          challengeToken?: string | null
          password?: string
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from drives
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'drive.item_ListPermission': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.permissionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to permissions for drives */
  'drive.item_CreatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from drives
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'drive.item_GetPermission': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property permissions for drives */
  'drive.item_DeletePermission': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property permissions in drives */
  'drive.item_UpdatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action grant
   * @description Grant users access to a link represented by a permission.
   */
  'drive.item.permission_grant': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          roles?: (string | null)[]
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.permission'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.permission_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get retentionLabel from drives
   * @description Information about retention label and settings enforced on the driveItem. Read-write.
   */
  'drive.item_GetRetentionLabel': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * driveItem: removeRetentionLabel
   * @description Remove a retention label from a driveItem. For information about retention labels from an administrator's perspective, see Use retention labels to manage the lifecycle of documents stored in SharePoint.
   */
  'drive.item_DeleteRetentionLabel': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * driveItem: lockOrUnlockRecord
   * @description Lock or unlock a retention label on a driveItem that classifies content as records. For information about retention labels from an administrator's perspective, see Use retention labels to manage the lifecycle of documents stored in SharePoint. For more information about how you can lock and unlock retention labels, see Use record versioning to update records stored in SharePoint or OneDrive.
   */
  'drive.item_UpdateRetentionLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from drives
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'drive.item_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for drives */
  'drive.item_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from drives
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'drive.item_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for drives */
  'drive.item_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in drives */
  'drive.item_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action reauthorize
   * @description Reauthorize a subscription when you receive a reauthorizationRequired challenge.
   */
  'drive.item.subscription_reauthorize': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from drives
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'drive.item_ListThumbnail': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.thumbnailSetCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to thumbnails for drives */
  'drive.item_CreateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from drives
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'drive.item_GetThumbnail': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property thumbnails for drives */
  'drive.item_DeleteThumbnail': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property thumbnails in drives */
  'drive.item_UpdateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.thumbnail_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'drive.item_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for drives */
  'drive.item_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'drive.item_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for drives */
  'drive.item_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in drives */
  'drive.item_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property versions from drives
   * @description The content stream for this version of the item.
   */
  'drive.item_GetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property versions in drives
   * @description The content stream for this version of the item.
   */
  'drive.item_SetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property versions in drives
   * @description The content stream for this version of the item.
   */
  'drive.item_DeleteVersionsContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restoreVersion
   * @description Restore a previous version of a DriveItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the file.
   */
  'drive.item.version_restoreVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.item_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from drives
   * @description Identity of the user who last modified the item. Read-only.
   */
  drive_GetLastModifiedGraphBPreUser: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get list from drives
   * @description For drives in SharePoint, the underlying document library list. Read-only. Nullable.
   */
  drive_GetList: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.list']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property list for drives */
  drive_DeleteList: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property list in drives */
  drive_UpdateList: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.list']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.list']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from drives
   * @description The collection of field definitions for this list.
   */
  'drive.list_ListColumn': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columns for drives */
  'drive.list_CreateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from drives
   * @description The collection of field definitions for this list.
   */
  'drive.list_GetColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columns for drives */
  'drive.list_DeleteColumn': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columns in drives */
  'drive.list_UpdateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get sourceColumn from drives
   * @description The source column for the content type column.
   */
  'drive.list.column_GetSourceColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.column_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get contentTypes from drives
   * @description The collection of content types present in this list.
   */
  'drive.list_ListContentType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.contentTypeCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to contentTypes for drives */
  'drive.list_CreateContentType': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentType']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get contentTypes from drives
   * @description The collection of content types present in this list.
   */
  'drive.list_GetContentType': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property contentTypes for drives */
  'drive.list_DeleteContentType': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property contentTypes in drives */
  'drive.list_UpdateContentType': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentType']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get base from drives
   * @description Parent contentType from which this content type is derived.
   */
  'drive.list.contentType_GetBase': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get baseTypes from drives
   * @description The collection of content types that are ancestors of this content type.
   */
  'drive.list.contentType_ListBaseType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.contentTypeCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get baseTypes from drives
   * @description The collection of content types that are ancestors of this content type.
   */
  'drive.list.contentType_GetBaseType': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of contentType */
        'contentType-id1': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.contentType.baseType_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnLinks from drives
   * @description The collection of columns that are required by this content type.
   */
  'drive.list.contentType_ListColumnLink': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnLinkCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columnLinks for drives */
  'drive.list.contentType_CreateColumnLink': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLink']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columnLinks from drives
   * @description The collection of columns that are required by this content type.
   */
  'drive.list.contentType_GetColumnLink': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columnLinks for drives */
  'drive.list.contentType_DeleteColumnLink': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columnLinks in drives */
  'drive.list.contentType_UpdateColumnLink': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLink']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.contentType.columnLink_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnPositions from drives
   * @description Column order information in a content type.
   */
  'drive.list.contentType_ListColumnPosition': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnPositions from drives
   * @description Column order information in a content type.
   */
  'drive.list.contentType_GetColumnPosition': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.contentType.columnPosition_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from drives
   * @description The collection of column definitions for this content type.
   */
  'drive.list.contentType_ListColumn': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columns for drives */
  'drive.list.contentType_CreateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from drives
   * @description The collection of column definitions for this content type.
   */
  'drive.list.contentType_GetColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columns for drives */
  'drive.list.contentType_DeleteColumn': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columns in drives */
  'drive.list.contentType_UpdateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get sourceColumn from drives
   * @description The source column for the content type column.
   */
  'drive.list.contentType.column_GetSourceColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.contentType.column_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action associateWithHubSites
   * @description Associate a published content type present in a content type hub with a list of hub sites.
   */
  'drive.list.contentType_associateGraphWPreHubSite': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          hubSiteUrls?: string[]
          /** @default false */
          propagateToExistingLists?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action copyToDefaultContentLocation
   * @description Copy a file to a default content location in a content type. The file can then be added as a default file or template via a POST operation.
   */
  'drive.list.contentType_copyToDefaultContentLocation': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          sourceFile?: components['schemas']['microsoft.graph.itemReference']
          destinationFileName?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function isPublished
   * @description Check the publishing status of a contentType in a content type hub site.
   */
  'drive.list.contentType_isPublished': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            /** @default false */
            value?: boolean
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action publish
   * @description Publishes a contentType present in the content type hub site.
   */
  'drive.list.contentType_publish': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action unpublish
   * @description Unpublish a contentType from a content type hub site.
   */
  'drive.list.contentType_unpublish': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.contentType_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action addCopy
   * @description Add a copy of a content type from a site to a list.
   */
  'drive.list.contentType_addCopy': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          contentType?: string
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action addCopyFromContentTypeHub
   * @description Add or sync a copy of a published content type from the content type hub to a target site or a list. This method is part of the content type publishing changes to optimize the syncing of published content types to sites and lists, effectively switching from a 'push everywhere' to 'pull as needed' approach. The method allows users to pull content types directly from the content type hub to a site or list. For more information, see contentType: getCompatibleHubContentTypes and the blog post Syntex Product Updates – August 2021.
   */
  'drive.list.contentType_addCopyFromContentTypeHub': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          contentTypeId?: string
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function getCompatibleHubContentTypes
   * @description Get a list of compatible content types from the content type hub that can be added to a target site or a list. This method is part of the content type publishing changes to optimize the syncing of published content types to sites and lists, effectively switching from a 'push everywhere' to 'pull as needed' approach. The method allows users to pull content types directly from the content type hub to a site or list. For more information, see contentType: addCopyFromContentTypeHub and the blog post Syntex Product Updates – August 2021.
   */
  'drive.list.contentType_getCompatibleHubContentType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.contentType'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from drives
   * @description Identity of the user who created the item. Read-only.
   */
  'drive.list_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.list.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.list.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.list.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get drive from drives
   * @description Allows access to the list as a drive resource with driveItems. Only present on document libraries.
   */
  'drive.list_GetDrive': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from drives
   * @description All items contained in the list.
   */
  'drive.list_ListItem': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to items for drives */
  'drive.list_CreateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from drives
   * @description All items contained in the list.
   */
  'drive.list_GetItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property items for drives */
  'drive.list_DeleteItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property items in drives */
  'drive.list_UpdateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from drives
   * @description Analytics about the view activities that took place on this item.
   */
  'drive.list.item_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from drives
   * @description Identity of the user who created the item. Read-only.
   */
  'drive.list.item_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.list.item.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.list.item.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.list.item.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.item.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from drives
   * @description Version information for a document set version created by a user.
   */
  'drive.list.item_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for drives */
  'drive.list.item_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from drives
   * @description Version information for a document set version created by a user.
   */
  'drive.list.item_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for drives */
  'drive.list.item_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in drives */
  'drive.list.item_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description A collection of the fields and values for this version of the list item.
   */
  'drive.list.item.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.list.item.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.list.item.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restore
   * @description Restore a document set version.
   */
  'drive.list.item.documentSetVersion_restore': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.item.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from drives
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'drive.list.item_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from drives
   * @description The content stream, if the item represents a file.
   */
  'drive.list.item_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.list.item_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.list.item_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description The values of the columns set on this list item.
   */
  'drive.list.item_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.list.item_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.list.item_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from drives
   * @description Identity of the user who last modified the item. Read-only.
   */
  'drive.list.item_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.list.item.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.list.item.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.list.item.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke action createLink */
  'drive.list.item_createLink': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          type?: string | null
          scope?: string | null
          /** Format: date-time */
          expirationDateTime?: string | null
          password?: string | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          /** @default false */
          sendNotification?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function getActivitiesByInterval */
  'drive.list.item_getActivitiesGraphBPreInterval': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description Usage: startDateTime='{startDateTime}' */
        startDateTime: string | null
        /** @description Usage: endDateTime='{endDateTime}' */
        endDateTime: string | null
        /** @description Usage: interval='{interval}' */
        interval: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.itemActivityStat'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the list item.
   */
  'drive.list.item_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for drives */
  'drive.list.item_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the list item.
   */
  'drive.list.item_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for drives */
  'drive.list.item_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in drives */
  'drive.list.item_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description A collection of the fields and values for this version of the list item.
   */
  'drive.list.item.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.list.item.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.list.item.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restoreVersion
   * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
   */
  'drive.list.item.version_restoreVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.item.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.item_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke function delta */
  'drive.list.item_delta': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description Usage: token='{token}' */
        token: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.listItem'][]
            '@odata.nextLink'?: string | null
            '@odata.deltaLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from drives
   * @description Identity of the user who last modified the item. Read-only.
   */
  'drive.list_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.list.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.list.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.list.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get operations from drives
   * @description The collection of long-running operations on the list.
   */
  'drive.list_ListOperation': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.richLongRunningOperationCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to operations for drives */
  'drive.list_CreateOperation': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get operations from drives
   * @description The collection of long-running operations on the list.
   */
  'drive.list_GetOperation': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property operations for drives */
  'drive.list_DeleteOperation': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property operations in drives */
  'drive.list_UpdateOperation': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.operation_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from drives
   * @description The set of subscriptions on the list.
   */
  'drive.list_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for drives */
  'drive.list_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from drives
   * @description The set of subscriptions on the list.
   */
  'drive.list_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for drives */
  'drive.list_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in drives */
  'drive.list_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action reauthorize
   * @description Reauthorize a subscription when you receive a reauthorizationRequired challenge.
   */
  'drive.list.subscription_reauthorize': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.list.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function recent
   * @description List a set of items that have been recently used by the signed in user.
   * This collection includes items that are in the user's drive and items they have access to from other drives.
   */
  drive_recent: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['recentResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function search
   * @description Search the hierarchy of items for items matching a query.
   * You can search within a folder hierarchy, a whole drive, or files shared with the current user.
   */
  drive_search: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description Usage: q='{q}' */
        q: string | null
      }
    }
    responses: {
      '2XX': components['responses']['searchResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function sharedWithMe
   * @description Get a list of driveItem objects shared with the owner of a drive. The driveItems returned from the sharedWithMe method always include the remoteItem facet that indicates they are items from a different drive.
   */
  drive_sharedGraphWPreMe: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['sharedWithMeResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get root from drives
   * @description The root folder of the drive. Read-only.
   */
  drive_GetRoot: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property root for drives */
  drive_DeleteRoot: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property root in drives */
  drive_UpdateRoot: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from drives
   * @description Analytics about the view activities that took place on this item.
   */
  'drive.root_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property analytics for drives */
  'drive.root_DeleteAnalytic': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property analytics in drives */
  'drive.root_UpdateAnalytic': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemAnalytics']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get allTime from drives */
  'drive.root.analytic_GetAllTime': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from drives */
  'drive.root.analytic_ListItemActivityStat': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityStatCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to itemActivityStats for drives */
  'drive.root.analytic_CreateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from drives */
  'drive.root.analytic_GetItemActivityStat': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property itemActivityStats for drives */
  'drive.root.analytic_DeleteItemActivityStat': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property itemActivityStats in drives */
  'drive.root.analytic_UpdateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from drives
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'drive.root.analytic.itemActivityStat_ListActivity': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to activities for drives */
  'drive.root.analytic.itemActivityStat_CreateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from drives
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'drive.root.analytic.itemActivityStat_GetActivity': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property activities for drives */
  'drive.root.analytic.itemActivityStat_DeleteActivity': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property activities in drives */
  'drive.root.analytic.itemActivityStat_UpdateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from drives
   * @description Exposes the driveItem that was the target of this activity.
   */
  'drive.root.analytic.itemActivityStat.activity_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root.analytic.itemActivityStat.activity_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root.analytic.itemActivityStat.activity_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root.analytic.itemActivityStat.activity_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.analytic.itemActivityStat.activity_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.analytic.itemActivityStat_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get lastSevenDays from drives */
  'drive.root.analytic_GetLastSevenDay': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from drives
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'drive.root_ListChild': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to children for drives */
  'drive.root_CreateChild': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from drives
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'drive.root_GetChild': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property children from drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root_GetChildrenContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property children in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root_SetChildrenContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property children in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root_DeleteChildrenContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.child_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property root from drives
   * @description The content stream, if the item represents a file.
   */
  drive_GetRootContent: {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property root in drives
   * @description The content stream, if the item represents a file.
   */
  drive_SetRootContent: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property root in drives
   * @description The content stream, if the item represents a file.
   */
  drive_DeleteRootContent: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from drives
   * @description Identity of the user who created the item. Read-only.
   */
  'drive.root_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.root.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.root.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.root.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from drives
   * @description Identity of the user who last modified the item. Read-only.
   */
  'drive.root_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.root.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.root.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.root.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get listItem from drives
   * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
   */
  'drive.root_GetListItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property listItem for drives */
  'drive.root_DeleteListItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property listItem in drives */
  'drive.root_UpdateListItem': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from drives
   * @description Analytics about the view activities that took place on this item.
   */
  'drive.root.listItem_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from drives
   * @description Identity of the user who created the item. Read-only.
   */
  'drive.root.listItem_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.root.listItem.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.root.listItem.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.root.listItem.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from drives
   * @description Version information for a document set version created by a user.
   */
  'drive.root.listItem_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for drives */
  'drive.root.listItem_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from drives
   * @description Version information for a document set version created by a user.
   */
  'drive.root.listItem_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for drives */
  'drive.root.listItem_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in drives */
  'drive.root.listItem_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description A collection of the fields and values for this version of the list item.
   */
  'drive.root.listItem.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.root.listItem.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.root.listItem.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restore
   * @description Restore a document set version.
   */
  'drive.root.listItem.documentSetVersion_restore': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.listItem.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from drives
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'drive.root.listItem_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root.listItem_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root.listItem_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in drives
   * @description The content stream, if the item represents a file.
   */
  'drive.root.listItem_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description The values of the columns set on this list item.
   */
  'drive.root.listItem_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.root.listItem_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.root.listItem_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from drives
   * @description Identity of the user who last modified the item. Read-only.
   */
  'drive.root.listItem_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'drive.root.listItem.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'drive.root.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'drive.root.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke action createLink */
  'drive.root.listItem_createLink': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          type?: string | null
          scope?: string | null
          /** Format: date-time */
          expirationDateTime?: string | null
          password?: string | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          /** @default false */
          sendNotification?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function getActivitiesByInterval */
  'drive.root.listItem_getActivitiesGraphBPreInterval': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description Usage: startDateTime='{startDateTime}' */
        startDateTime: string | null
        /** @description Usage: endDateTime='{endDateTime}' */
        endDateTime: string | null
        /** @description Usage: interval='{interval}' */
        interval: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.itemActivityStat'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the list item.
   */
  'drive.root.listItem_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for drives */
  'drive.root.listItem_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the list item.
   */
  'drive.root.listItem_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for drives */
  'drive.root.listItem_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in drives */
  'drive.root.listItem_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from drives
   * @description A collection of the fields and values for this version of the list item.
   */
  'drive.root.listItem.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for drives */
  'drive.root.listItem.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in drives */
  'drive.root.listItem.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restoreVersion
   * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
   */
  'drive.root.listItem.version_restoreVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.listItem.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke action assignSensitivityLabel */
  'drive.root_assignSensitivityLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          sensitivityLabelId?: string | null
          assignmentMethod?: components['schemas']['microsoft.graph.sensitivityLabelAssignmentMethod']
          justificationText?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action checkin
   * @description Check in a checked out driveItem resource, which makes the version of the document available to others.
   */
  'drive.root_checkin': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          checkInAs?: string | null
          comment?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action checkout
   * @description Check out a driveItem resource to prevent others from editing the document, and prevent your changes from being visible until the documented is checked in.
   */
  'drive.root_checkout': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action copy
   * @description Asynchronously creates a copy of an driveItem (including any children), under a new parent item or with a new name.
   */
  'drive.root_copy': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          name?: string | null
          parentReference?: components['schemas']['microsoft.graph.itemReference']
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action createLink
   * @description You can use createLink action to share a DriveItem via a sharing link. The createLink action will create a new sharing link if the specified link type doesn't already exist for the calling application.
   * If a sharing link of the specified type already exists for the app, the existing sharing link will be returned. DriveItem resources inherit sharing permissions from their ancestors.
   */
  'drive.root_createLink': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          type?: string | null
          scope?: string | null
          /** Format: date-time */
          expirationDateTime?: string | null
          password?: string | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          /** @default false */
          sendNotification?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action createUploadSession */
  'drive.root_createUploadSession': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          item?: components['schemas']['microsoft.graph.driveItemUploadableProperties']
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.uploadSession']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function delta */
  'drive.root_delta': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description Usage: token='{token}' */
        token: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.driveItem'][]
            '@odata.nextLink'?: string | null
            '@odata.deltaLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action extractSensitivityLabels */
  'drive.root_extractSensitivityLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.extractSensitivityLabelsResult']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action follow
   * @description Follow a driveItem.
   */
  'drive.root_follow': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function getActivitiesByInterval */
  'drive.root_getActivitiesGraphBPreInterval': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description Usage: startDateTime='{startDateTime}' */
        startDateTime: string | null
        /** @description Usage: endDateTime='{endDateTime}' */
        endDateTime: string | null
        /** @description Usage: interval='{interval}' */
        interval: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.itemActivityStat'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action invite
   * @description Sends a sharing invitation for a driveItem.
   * A sharing invitation provides permissions to the recipients and optionally sends them an email with a sharing link.
   */
  'drive.root_invite': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          /** @default false */
          requireSignIn?: boolean | null
          roles?: (string | null)[]
          /** @default false */
          sendInvitation?: boolean | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          expirationDateTime?: string | null
          password?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.permission'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action permanentDelete */
  'drive.root_permanentDelete': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action preview */
  'drive.root_preview': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          page?: string | null
          /** Format: double */
          zoom?: number | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemPreviewInfo']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restore
   * @description Restore a driveItem that has been deleted and is currently in the recycle bin. NOTE: This functionality is currently only available for OneDrive Personal.
   */
  'drive.root_restore': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          parentReference?: components['schemas']['microsoft.graph.itemReference']
          name?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function search
   * @description Search the hierarchy of items for items matching a query.
   * You can search within a folder hierarchy, a whole drive, or files shared with the current user.
   */
  'drive.root_search': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description Usage: q='{q}' */
        q: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.driveItem'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action unfollow
   * @description Unfollow a driveItem.
   */
  'drive.root_unfollow': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Invoke action validatePermission */
  'drive.root_validatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          challengeToken?: string | null
          password?: string
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from drives
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'drive.root_ListPermission': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.permissionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to permissions for drives */
  'drive.root_CreatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from drives
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'drive.root_GetPermission': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property permissions for drives */
  'drive.root_DeletePermission': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property permissions in drives */
  'drive.root_UpdatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action grant
   * @description Grant users access to a link represented by a permission.
   */
  'drive.root.permission_grant': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          roles?: (string | null)[]
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.permission'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.permission_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get retentionLabel from drives
   * @description Information about retention label and settings enforced on the driveItem. Read-write.
   */
  'drive.root_GetRetentionLabel': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property retentionLabel for drives */
  'drive.root_DeleteRetentionLabel': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property retentionLabel in drives */
  'drive.root_UpdateRetentionLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from drives
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'drive.root_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for drives */
  'drive.root_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from drives
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'drive.root_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for drives */
  'drive.root_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in drives */
  'drive.root_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action reauthorize
   * @description Reauthorize a subscription when you receive a reauthorizationRequired challenge.
   */
  'drive.root.subscription_reauthorize': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from drives
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'drive.root_ListThumbnail': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.thumbnailSetCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to thumbnails for drives */
  'drive.root_CreateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from drives
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'drive.root_GetThumbnail': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property thumbnails for drives */
  'drive.root_DeleteThumbnail': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property thumbnails in drives */
  'drive.root_UpdateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.thumbnail_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'drive.root_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for drives */
  'drive.root_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from drives
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'drive.root_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for drives */
  'drive.root_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in drives */
  'drive.root_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property versions from drives
   * @description The content stream for this version of the item.
   */
  'drive.root_GetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property versions in drives
   * @description The content stream for this version of the item.
   */
  'drive.root_SetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property versions in drives
   * @description The content stream for this version of the item.
   */
  'drive.root_DeleteVersionsContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restoreVersion
   * @description Restore a previous version of a DriveItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the file.
   */
  'drive.root.version_restoreVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.root.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get special from drives
   * @description Collection of common folders available in OneDrive. Read-only. Nullable.
   */
  drive_ListSpecial: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get special from drives
   * @description Collection of common folders available in OneDrive. Read-only. Nullable.
   */
  drive_GetSpecial: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property special from drives
   * @description The content stream, if the item represents a file.
   */
  drive_GetSpecialContent: {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property special in drives
   * @description The content stream, if the item represents a file.
   */
  drive_SetSpecialContent: {
    parameters: {
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property special in drives
   * @description The content stream, if the item represents a file.
   */
  drive_DeleteSpecialContent: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'drive.special_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get drives from groups
   * @description The group's drives. Read-only.
   */
  group_GetDrive: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get drives from groups
   * @description The group's drives. Read-only.
   */
  group_ListDrive: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to drives for groups */
  group_CreateDrive: {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.drive']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property drives for groups */
  group_DeleteDrive: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property drives in groups */
  group_UpdateDrive: {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.drive']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get bundles from groups
   * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
   */
  'group.drive_ListBundle': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to bundles for groups */
  'group.drive_CreateBundle': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get bundles from groups
   * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
   */
  'group.drive_GetBundle': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property bundles from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_GetBundlesContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property bundles in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_SetBundlesContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property bundles in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_DeleteBundlesContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.bundle_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from groups
   * @description Identity of the user who created the item. Read-only.
   */
  'group.drive_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get following from groups
   * @description The list of items the user is following. Only in OneDrive for Business.
   */
  'group.drive_ListFollowing': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get following from groups
   * @description The list of items the user is following. Only in OneDrive for Business.
   */
  'group.drive_GetFollowing': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property following from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_GetFollowingContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property following in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_SetFollowingContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property following in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_DeleteFollowingContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.following_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get items from groups
   * @description All items contained in the drive. Read-only. Nullable.
   */
  'group.drive_ListItem': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to items for groups */
  'group.drive_CreateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from groups
   * @description All items contained in the drive. Read-only. Nullable.
   */
  'group.drive_GetItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property items for groups */
  'group.drive_DeleteItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property items in groups */
  'group.drive_UpdateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from groups
   * @description Analytics about the view activities that took place on this item.
   */
  'group.drive.item_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property analytics for groups */
  'group.drive.item_DeleteAnalytic': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property analytics in groups */
  'group.drive.item_UpdateAnalytic': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemAnalytics']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get allTime from groups */
  'group.drive.item.analytic_GetAllTime': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from groups */
  'group.drive.item.analytic_ListItemActivityStat': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityStatCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to itemActivityStats for groups */
  'group.drive.item.analytic_CreateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from groups */
  'group.drive.item.analytic_GetItemActivityStat': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property itemActivityStats for groups */
  'group.drive.item.analytic_DeleteItemActivityStat': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property itemActivityStats in groups */
  'group.drive.item.analytic_UpdateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from groups
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'group.drive.item.analytic.itemActivityStat_ListActivity': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to activities for groups */
  'group.drive.item.analytic.itemActivityStat_CreateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from groups
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'group.drive.item.analytic.itemActivityStat_GetActivity': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property activities for groups */
  'group.drive.item.analytic.itemActivityStat_DeleteActivity': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property activities in groups */
  'group.drive.item.analytic.itemActivityStat_UpdateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from groups
   * @description Exposes the driveItem that was the target of this activity.
   */
  'group.drive.item.analytic.itemActivityStat.activity_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item.analytic.itemActivityStat.activity_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item.analytic.itemActivityStat.activity_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item.analytic.itemActivityStat.activity_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.analytic.itemActivityStat.activity_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.analytic.itemActivityStat_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get lastSevenDays from groups */
  'group.drive.item.analytic_GetLastSevenDay': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from groups
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'group.drive.item_ListChild': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to children for groups */
  'group.drive.item_CreateChild': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from groups
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'group.drive.item_GetChild': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property children from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item_GetChildrenContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property children in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item_SetChildrenContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property children in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item_DeleteChildrenContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.child_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property items from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_GetItemsContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property items in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_SetItemsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property items in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_DeleteItemsContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from groups
   * @description Identity of the user who created the item. Read-only.
   */
  'group.drive.item_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.item.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.item.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.item.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from groups
   * @description Identity of the user who last modified the item. Read-only.
   */
  'group.drive.item_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.item.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.item.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.item.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get listItem from groups
   * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
   */
  'group.drive.item_GetListItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property listItem for groups */
  'group.drive.item_DeleteListItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property listItem in groups */
  'group.drive.item_UpdateListItem': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from groups
   * @description Analytics about the view activities that took place on this item.
   */
  'group.drive.item.listItem_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from groups
   * @description Identity of the user who created the item. Read-only.
   */
  'group.drive.item.listItem_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.item.listItem.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.item.listItem.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.item.listItem.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from groups
   * @description Version information for a document set version created by a user.
   */
  'group.drive.item.listItem_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for groups */
  'group.drive.item.listItem_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from groups
   * @description Version information for a document set version created by a user.
   */
  'group.drive.item.listItem_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for groups */
  'group.drive.item.listItem_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in groups */
  'group.drive.item.listItem_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description A collection of the fields and values for this version of the list item.
   */
  'group.drive.item.listItem.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.item.listItem.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.item.listItem.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.listItem.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from groups
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'group.drive.item.listItem_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item.listItem_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item.listItem_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.item.listItem_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description The values of the columns set on this list item.
   */
  'group.drive.item.listItem_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.item.listItem_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.item.listItem_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from groups
   * @description Identity of the user who last modified the item. Read-only.
   */
  'group.drive.item.listItem_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.item.listItem.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.item.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.item.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the list item.
   */
  'group.drive.item.listItem_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for groups */
  'group.drive.item.listItem_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the list item.
   */
  'group.drive.item.listItem_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for groups */
  'group.drive.item.listItem_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in groups */
  'group.drive.item.listItem_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description A collection of the fields and values for this version of the list item.
   */
  'group.drive.item.listItem.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.item.listItem.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.item.listItem.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.listItem.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from groups
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'group.drive.item_ListPermission': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.permissionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to permissions for groups */
  'group.drive.item_CreatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from groups
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'group.drive.item_GetPermission': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property permissions for groups */
  'group.drive.item_DeletePermission': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property permissions in groups */
  'group.drive.item_UpdatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.permission_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get retentionLabel from groups
   * @description Information about retention label and settings enforced on the driveItem. Read-write.
   */
  'group.drive.item_GetRetentionLabel': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property retentionLabel for groups */
  'group.drive.item_DeleteRetentionLabel': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property retentionLabel in groups */
  'group.drive.item_UpdateRetentionLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from groups
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'group.drive.item_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for groups */
  'group.drive.item_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from groups
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'group.drive.item_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for groups */
  'group.drive.item_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in groups */
  'group.drive.item_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from groups
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'group.drive.item_ListThumbnail': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.thumbnailSetCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to thumbnails for groups */
  'group.drive.item_CreateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from groups
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'group.drive.item_GetThumbnail': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property thumbnails for groups */
  'group.drive.item_DeleteThumbnail': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property thumbnails in groups */
  'group.drive.item_UpdateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.thumbnail_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'group.drive.item_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for groups */
  'group.drive.item_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'group.drive.item_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for groups */
  'group.drive.item_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in groups */
  'group.drive.item_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property versions from groups
   * @description The content stream for this version of the item.
   */
  'group.drive.item_GetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property versions in groups
   * @description The content stream for this version of the item.
   */
  'group.drive.item_SetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property versions in groups
   * @description The content stream for this version of the item.
   */
  'group.drive.item_DeleteVersionsContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.item_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from groups
   * @description Identity of the user who last modified the item. Read-only.
   */
  'group.drive_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get list from groups
   * @description For drives in SharePoint, the underlying document library list. Read-only. Nullable.
   */
  'group.drive_GetList': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.list']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property list for groups */
  'group.drive_DeleteList': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property list in groups */
  'group.drive_UpdateList': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.list']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.list']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from groups
   * @description The collection of field definitions for this list.
   */
  'group.drive.list_ListColumn': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columns for groups */
  'group.drive.list_CreateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from groups
   * @description The collection of field definitions for this list.
   */
  'group.drive.list_GetColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columns for groups */
  'group.drive.list_DeleteColumn': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columns in groups */
  'group.drive.list_UpdateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get sourceColumn from groups
   * @description The source column for the content type column.
   */
  'group.drive.list.column_GetSourceColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.column_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get contentTypes from groups
   * @description The collection of content types present in this list.
   */
  'group.drive.list_ListContentType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.contentTypeCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to contentTypes for groups */
  'group.drive.list_CreateContentType': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentType']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get contentTypes from groups
   * @description The collection of content types present in this list.
   */
  'group.drive.list_GetContentType': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property contentTypes for groups */
  'group.drive.list_DeleteContentType': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property contentTypes in groups */
  'group.drive.list_UpdateContentType': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentType']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get base from groups
   * @description Parent contentType from which this content type is derived.
   */
  'group.drive.list.contentType_GetBase': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get baseTypes from groups
   * @description The collection of content types that are ancestors of this content type.
   */
  'group.drive.list.contentType_ListBaseType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.contentTypeCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get baseTypes from groups
   * @description The collection of content types that are ancestors of this content type.
   */
  'group.drive.list.contentType_GetBaseType': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of contentType */
        'contentType-id1': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.contentType.baseType_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnLinks from groups
   * @description The collection of columns that are required by this content type.
   */
  'group.drive.list.contentType_ListColumnLink': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnLinkCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columnLinks for groups */
  'group.drive.list.contentType_CreateColumnLink': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLink']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columnLinks from groups
   * @description The collection of columns that are required by this content type.
   */
  'group.drive.list.contentType_GetColumnLink': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columnLinks for groups */
  'group.drive.list.contentType_DeleteColumnLink': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columnLinks in groups */
  'group.drive.list.contentType_UpdateColumnLink': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLink']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.contentType.columnLink_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnPositions from groups
   * @description Column order information in a content type.
   */
  'group.drive.list.contentType_ListColumnPosition': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnPositions from groups
   * @description Column order information in a content type.
   */
  'group.drive.list.contentType_GetColumnPosition': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.contentType.columnPosition_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from groups
   * @description The collection of column definitions for this content type.
   */
  'group.drive.list.contentType_ListColumn': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columns for groups */
  'group.drive.list.contentType_CreateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from groups
   * @description The collection of column definitions for this content type.
   */
  'group.drive.list.contentType_GetColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columns for groups */
  'group.drive.list.contentType_DeleteColumn': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columns in groups */
  'group.drive.list.contentType_UpdateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get sourceColumn from groups
   * @description The source column for the content type column.
   */
  'group.drive.list.contentType.column_GetSourceColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.contentType.column_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.contentType_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from groups
   * @description Identity of the user who created the item. Read-only.
   */
  'group.drive.list_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.list.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.list.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.list.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get drive from groups
   * @description Allows access to the list as a drive resource with driveItems. Only present on document libraries.
   */
  'group.drive.list_GetDrive': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from groups
   * @description All items contained in the list.
   */
  'group.drive.list_ListItem': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to items for groups */
  'group.drive.list_CreateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from groups
   * @description All items contained in the list.
   */
  'group.drive.list_GetItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property items for groups */
  'group.drive.list_DeleteItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property items in groups */
  'group.drive.list_UpdateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from groups
   * @description Analytics about the view activities that took place on this item.
   */
  'group.drive.list.item_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from groups
   * @description Identity of the user who created the item. Read-only.
   */
  'group.drive.list.item_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.list.item.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.list.item.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.list.item.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.item.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from groups
   * @description Version information for a document set version created by a user.
   */
  'group.drive.list.item_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for groups */
  'group.drive.list.item_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from groups
   * @description Version information for a document set version created by a user.
   */
  'group.drive.list.item_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for groups */
  'group.drive.list.item_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in groups */
  'group.drive.list.item_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description A collection of the fields and values for this version of the list item.
   */
  'group.drive.list.item.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.list.item.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.list.item.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.item.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from groups
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'group.drive.list.item_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.list.item_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.list.item_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.list.item_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description The values of the columns set on this list item.
   */
  'group.drive.list.item_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.list.item_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.list.item_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from groups
   * @description Identity of the user who last modified the item. Read-only.
   */
  'group.drive.list.item_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.list.item.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.list.item.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.list.item.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the list item.
   */
  'group.drive.list.item_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for groups */
  'group.drive.list.item_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the list item.
   */
  'group.drive.list.item_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for groups */
  'group.drive.list.item_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in groups */
  'group.drive.list.item_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description A collection of the fields and values for this version of the list item.
   */
  'group.drive.list.item.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.list.item.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.list.item.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.item.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from groups
   * @description Identity of the user who last modified the item. Read-only.
   */
  'group.drive.list_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.list.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.list.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.list.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get operations from groups
   * @description The collection of long-running operations on the list.
   */
  'group.drive.list_ListOperation': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.richLongRunningOperationCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to operations for groups */
  'group.drive.list_CreateOperation': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get operations from groups
   * @description The collection of long-running operations on the list.
   */
  'group.drive.list_GetOperation': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property operations for groups */
  'group.drive.list_DeleteOperation': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property operations in groups */
  'group.drive.list_UpdateOperation': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.operation_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from groups
   * @description The set of subscriptions on the list.
   */
  'group.drive.list_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for groups */
  'group.drive.list_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from groups
   * @description The set of subscriptions on the list.
   */
  'group.drive.list_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for groups */
  'group.drive.list_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in groups */
  'group.drive.list_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.list.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get root from groups
   * @description The root folder of the drive. Read-only.
   */
  'group.drive_GetRoot': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property root for groups */
  'group.drive_DeleteRoot': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property root in groups */
  'group.drive_UpdateRoot': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from groups
   * @description Analytics about the view activities that took place on this item.
   */
  'group.drive.root_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property analytics for groups */
  'group.drive.root_DeleteAnalytic': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property analytics in groups */
  'group.drive.root_UpdateAnalytic': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemAnalytics']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get allTime from groups */
  'group.drive.root.analytic_GetAllTime': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from groups */
  'group.drive.root.analytic_ListItemActivityStat': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityStatCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to itemActivityStats for groups */
  'group.drive.root.analytic_CreateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from groups */
  'group.drive.root.analytic_GetItemActivityStat': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property itemActivityStats for groups */
  'group.drive.root.analytic_DeleteItemActivityStat': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property itemActivityStats in groups */
  'group.drive.root.analytic_UpdateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from groups
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'group.drive.root.analytic.itemActivityStat_ListActivity': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to activities for groups */
  'group.drive.root.analytic.itemActivityStat_CreateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from groups
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'group.drive.root.analytic.itemActivityStat_GetActivity': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property activities for groups */
  'group.drive.root.analytic.itemActivityStat_DeleteActivity': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property activities in groups */
  'group.drive.root.analytic.itemActivityStat_UpdateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from groups
   * @description Exposes the driveItem that was the target of this activity.
   */
  'group.drive.root.analytic.itemActivityStat.activity_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root.analytic.itemActivityStat.activity_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root.analytic.itemActivityStat.activity_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root.analytic.itemActivityStat.activity_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.analytic.itemActivityStat.activity_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.analytic.itemActivityStat_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get lastSevenDays from groups */
  'group.drive.root.analytic_GetLastSevenDay': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from groups
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'group.drive.root_ListChild': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to children for groups */
  'group.drive.root_CreateChild': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from groups
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'group.drive.root_GetChild': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property children from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root_GetChildrenContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property children in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root_SetChildrenContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property children in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root_DeleteChildrenContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.child_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property root from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_GetRootContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property root in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_SetRootContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property root in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_DeleteRootContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from groups
   * @description Identity of the user who created the item. Read-only.
   */
  'group.drive.root_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.root.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.root.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.root.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from groups
   * @description Identity of the user who last modified the item. Read-only.
   */
  'group.drive.root_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.root.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.root.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.root.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get listItem from groups
   * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
   */
  'group.drive.root_GetListItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property listItem for groups */
  'group.drive.root_DeleteListItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property listItem in groups */
  'group.drive.root_UpdateListItem': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from groups
   * @description Analytics about the view activities that took place on this item.
   */
  'group.drive.root.listItem_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from groups
   * @description Identity of the user who created the item. Read-only.
   */
  'group.drive.root.listItem_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.root.listItem.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.root.listItem.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.root.listItem.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from groups
   * @description Version information for a document set version created by a user.
   */
  'group.drive.root.listItem_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for groups */
  'group.drive.root.listItem_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from groups
   * @description Version information for a document set version created by a user.
   */
  'group.drive.root.listItem_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for groups */
  'group.drive.root.listItem_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in groups */
  'group.drive.root.listItem_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description A collection of the fields and values for this version of the list item.
   */
  'group.drive.root.listItem.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.root.listItem.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.root.listItem.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.listItem.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from groups
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'group.drive.root.listItem_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root.listItem_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root.listItem_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive.root.listItem_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description The values of the columns set on this list item.
   */
  'group.drive.root.listItem_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.root.listItem_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.root.listItem_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from groups
   * @description Identity of the user who last modified the item. Read-only.
   */
  'group.drive.root.listItem_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'group.drive.root.listItem.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'group.drive.root.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'group.drive.root.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the list item.
   */
  'group.drive.root.listItem_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for groups */
  'group.drive.root.listItem_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the list item.
   */
  'group.drive.root.listItem_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for groups */
  'group.drive.root.listItem_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in groups */
  'group.drive.root.listItem_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from groups
   * @description A collection of the fields and values for this version of the list item.
   */
  'group.drive.root.listItem.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for groups */
  'group.drive.root.listItem.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in groups */
  'group.drive.root.listItem.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.listItem.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from groups
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'group.drive.root_ListPermission': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.permissionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to permissions for groups */
  'group.drive.root_CreatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from groups
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'group.drive.root_GetPermission': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property permissions for groups */
  'group.drive.root_DeletePermission': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property permissions in groups */
  'group.drive.root_UpdatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.permission_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get retentionLabel from groups
   * @description Information about retention label and settings enforced on the driveItem. Read-write.
   */
  'group.drive.root_GetRetentionLabel': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property retentionLabel for groups */
  'group.drive.root_DeleteRetentionLabel': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property retentionLabel in groups */
  'group.drive.root_UpdateRetentionLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from groups
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'group.drive.root_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for groups */
  'group.drive.root_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from groups
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'group.drive.root_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for groups */
  'group.drive.root_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in groups */
  'group.drive.root_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from groups
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'group.drive.root_ListThumbnail': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.thumbnailSetCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to thumbnails for groups */
  'group.drive.root_CreateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from groups
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'group.drive.root_GetThumbnail': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property thumbnails for groups */
  'group.drive.root_DeleteThumbnail': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property thumbnails in groups */
  'group.drive.root_UpdateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.thumbnail_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'group.drive.root_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for groups */
  'group.drive.root_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from groups
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'group.drive.root_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for groups */
  'group.drive.root_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in groups */
  'group.drive.root_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property versions from groups
   * @description The content stream for this version of the item.
   */
  'group.drive.root_GetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property versions in groups
   * @description The content stream for this version of the item.
   */
  'group.drive.root_SetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property versions in groups
   * @description The content stream for this version of the item.
   */
  'group.drive.root_DeleteVersionsContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.root.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get special from groups
   * @description Collection of common folders available in OneDrive. Read-only. Nullable.
   */
  'group.drive_ListSpecial': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get special from groups
   * @description Collection of common folders available in OneDrive. Read-only. Nullable.
   */
  'group.drive_GetSpecial': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property special from groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_GetSpecialContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property special in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_SetSpecialContent': {
    parameters: {
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property special in groups
   * @description The content stream, if the item represents a file.
   */
  'group.drive_DeleteSpecialContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive.special_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'group.drive_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of group */
        'group-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Accessing shared DriveItems
   * @description Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
   */
  'share.sharedDriveItem_ListSharedDriveItem': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.sharedDriveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Add new entity to shares */
  'share.sharedDriveItem_CreateSharedDriveItem': {
    /** @description New entity */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.sharedDriveItem']
      }
    }
    responses: {
      /** @description Created entity */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.sharedDriveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Accessing shared DriveItems
   * @description Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
   */
  'share.sharedDriveItem_GetSharedDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved entity */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.sharedDriveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete entity from shares */
  'share.sharedDriveItem_DeleteSharedDriveItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update entity in shares */
  'share.sharedDriveItem_UpdateSharedDriveItem': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.sharedDriveItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.sharedDriveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from shares
   * @description Identity of the user who created the item. Read-only.
   */
  share_GetCreatedGraphBPreUser: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'share.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'share.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'share.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      header?: {
        /** @description Indicates the requested consistency level. Documentation URL: https://docs.microsoft.com/graph/aad-advanced-queries */
        ConsistencyLevel?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Accessing shared DriveItems
   * @description Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
   */
  share_GetDriveItem: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from shares
   * @description The content stream, if the item represents a file.
   */
  share_GetDriveItemContent: {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in shares
   * @description The content stream, if the item represents a file.
   */
  share_SetDriveItemContent: {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in shares
   * @description The content stream, if the item represents a file.
   */
  share_DeleteDriveItemContent: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from shares
   * @description All driveItems contained in the sharing root. This collection cannot be enumerated.
   */
  share_ListItem: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get items from shares
   * @description All driveItems contained in the sharing root. This collection cannot be enumerated.
   */
  share_GetItem: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property items from shares
   * @description The content stream, if the item represents a file.
   */
  share_GetItemsContent: {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property items in shares
   * @description The content stream, if the item represents a file.
   */
  share_SetItemsContent: {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property items in shares
   * @description The content stream, if the item represents a file.
   */
  share_DeleteItemsContent: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.item_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from shares
   * @description Identity of the user who last modified the item. Read-only.
   */
  share_GetLastModifiedGraphBPreUser: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'share.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'share.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'share.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get list from shares
   * @description Used to access the underlying list
   */
  share_GetList: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.list']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property list for shares */
  share_DeleteList: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property list in shares */
  share_UpdateList: {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.list']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.list']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from shares
   * @description The collection of field definitions for this list.
   */
  'share.list_ListColumn': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columns for shares */
  'share.list_CreateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from shares
   * @description The collection of field definitions for this list.
   */
  'share.list_GetColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columns for shares */
  'share.list_DeleteColumn': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columns in shares */
  'share.list_UpdateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get sourceColumn from shares
   * @description The source column for the content type column.
   */
  'share.list.column_GetSourceColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.column_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get contentTypes from shares
   * @description The collection of content types present in this list.
   */
  'share.list_ListContentType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.contentTypeCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to contentTypes for shares */
  'share.list_CreateContentType': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentType']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get contentTypes from shares
   * @description The collection of content types present in this list.
   */
  'share.list_GetContentType': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property contentTypes for shares */
  'share.list_DeleteContentType': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property contentTypes in shares */
  'share.list_UpdateContentType': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentType']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get base from shares
   * @description Parent contentType from which this content type is derived.
   */
  'share.list.contentType_GetBase': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get baseTypes from shares
   * @description The collection of content types that are ancestors of this content type.
   */
  'share.list.contentType_ListBaseType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.contentTypeCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get baseTypes from shares
   * @description The collection of content types that are ancestors of this content type.
   */
  'share.list.contentType_GetBaseType': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of contentType */
        'contentType-id1': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.contentType.baseType_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnLinks from shares
   * @description The collection of columns that are required by this content type.
   */
  'share.list.contentType_ListColumnLink': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnLinkCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columnLinks for shares */
  'share.list.contentType_CreateColumnLink': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLink']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columnLinks from shares
   * @description The collection of columns that are required by this content type.
   */
  'share.list.contentType_GetColumnLink': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columnLinks for shares */
  'share.list.contentType_DeleteColumnLink': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columnLinks in shares */
  'share.list.contentType_UpdateColumnLink': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLink']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.contentType.columnLink_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnPositions from shares
   * @description Column order information in a content type.
   */
  'share.list.contentType_ListColumnPosition': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnPositions from shares
   * @description Column order information in a content type.
   */
  'share.list.contentType_GetColumnPosition': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.contentType.columnPosition_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from shares
   * @description The collection of column definitions for this content type.
   */
  'share.list.contentType_ListColumn': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columns for shares */
  'share.list.contentType_CreateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from shares
   * @description The collection of column definitions for this content type.
   */
  'share.list.contentType_GetColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columns for shares */
  'share.list.contentType_DeleteColumn': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columns in shares */
  'share.list.contentType_UpdateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get sourceColumn from shares
   * @description The source column for the content type column.
   */
  'share.list.contentType.column_GetSourceColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.contentType.column_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action associateWithHubSites
   * @description Associate a published content type present in a content type hub with a list of hub sites.
   */
  'share.list.contentType_associateGraphWPreHubSite': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          hubSiteUrls?: string[]
          /** @default false */
          propagateToExistingLists?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action copyToDefaultContentLocation
   * @description Copy a file to a default content location in a content type. The file can then be added as a default file or template via a POST operation.
   */
  'share.list.contentType_copyToDefaultContentLocation': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          sourceFile?: components['schemas']['microsoft.graph.itemReference']
          destinationFileName?: string | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function isPublished
   * @description Check the publishing status of a contentType in a content type hub site.
   */
  'share.list.contentType_isPublished': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            /** @default false */
            value?: boolean
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action publish
   * @description Publishes a contentType present in the content type hub site.
   */
  'share.list.contentType_publish': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action unpublish
   * @description Unpublish a contentType from a content type hub site.
   */
  'share.list.contentType_unpublish': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.contentType_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action addCopy
   * @description Add a copy of a content type from a site to a list.
   */
  'share.list.contentType_addCopy': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          contentType?: string
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action addCopyFromContentTypeHub
   * @description Add or sync a copy of a published content type from the content type hub to a target site or a list. This method is part of the content type publishing changes to optimize the syncing of published content types to sites and lists, effectively switching from a 'push everywhere' to 'pull as needed' approach. The method allows users to pull content types directly from the content type hub to a site or list. For more information, see contentType: getCompatibleHubContentTypes and the blog post Syntex Product Updates – August 2021.
   */
  'share.list.contentType_addCopyFromContentTypeHub': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          contentTypeId?: string
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke function getCompatibleHubContentTypes
   * @description Get a list of compatible content types from the content type hub that can be added to a target site or a list. This method is part of the content type publishing changes to optimize the syncing of published content types to sites and lists, effectively switching from a 'push everywhere' to 'pull as needed' approach. The method allows users to pull content types directly from the content type hub to a site or list. For more information, see contentType: addCopyFromContentTypeHub and the blog post Syntex Product Updates – August 2021.
   */
  'share.list.contentType_getCompatibleHubContentType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.contentType'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from shares
   * @description Identity of the user who created the item. Read-only.
   */
  'share.list_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'share.list.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'share.list.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'share.list.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get drive from shares
   * @description Allows access to the list as a drive resource with driveItems. Only present on document libraries.
   */
  'share.list_GetDrive': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from shares
   * @description All items contained in the list.
   */
  'share.list_ListItem': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to items for shares */
  'share.list_CreateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from shares
   * @description All items contained in the list.
   */
  'share.list_GetItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property items for shares */
  'share.list_DeleteItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property items in shares */
  'share.list_UpdateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from shares
   * @description Analytics about the view activities that took place on this item.
   */
  'share.list.item_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from shares
   * @description Identity of the user who created the item. Read-only.
   */
  'share.list.item_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'share.list.item.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'share.list.item.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'share.list.item.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.item.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from shares
   * @description Version information for a document set version created by a user.
   */
  'share.list.item_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for shares */
  'share.list.item_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from shares
   * @description Version information for a document set version created by a user.
   */
  'share.list.item_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for shares */
  'share.list.item_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in shares */
  'share.list.item_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from shares
   * @description A collection of the fields and values for this version of the list item.
   */
  'share.list.item.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for shares */
  'share.list.item.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in shares */
  'share.list.item.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restore
   * @description Restore a document set version.
   */
  'share.list.item.documentSetVersion_restore': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.item.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from shares
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'share.list.item_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from shares
   * @description The content stream, if the item represents a file.
   */
  'share.list.item_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in shares
   * @description The content stream, if the item represents a file.
   */
  'share.list.item_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in shares
   * @description The content stream, if the item represents a file.
   */
  'share.list.item_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from shares
   * @description The values of the columns set on this list item.
   */
  'share.list.item_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for shares */
  'share.list.item_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in shares */
  'share.list.item_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from shares
   * @description Identity of the user who last modified the item. Read-only.
   */
  'share.list.item_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'share.list.item.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'share.list.item.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'share.list.item.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke action createLink */
  'share.list.item_createLink': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          type?: string | null
          scope?: string | null
          /** Format: date-time */
          expirationDateTime?: string | null
          password?: string | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          /** @default false */
          sendNotification?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function getActivitiesByInterval */
  'share.list.item_getActivitiesGraphBPreInterval': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description Usage: startDateTime='{startDateTime}' */
        startDateTime: string | null
        /** @description Usage: endDateTime='{endDateTime}' */
        endDateTime: string | null
        /** @description Usage: interval='{interval}' */
        interval: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.itemActivityStat'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from shares
   * @description The list of previous versions of the list item.
   */
  'share.list.item_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for shares */
  'share.list.item_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from shares
   * @description The list of previous versions of the list item.
   */
  'share.list.item_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for shares */
  'share.list.item_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in shares */
  'share.list.item_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from shares
   * @description A collection of the fields and values for this version of the list item.
   */
  'share.list.item.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for shares */
  'share.list.item.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in shares */
  'share.list.item.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restoreVersion
   * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
   */
  'share.list.item.version_restoreVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.item.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke function delta */
  'share.list.item_delta': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description Usage: token='{token}' */
        token: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.listItem'][]
            '@odata.nextLink'?: string | null
            '@odata.deltaLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from shares
   * @description Identity of the user who last modified the item. Read-only.
   */
  'share.list_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'share.list.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'share.list.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'share.list.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get operations from shares
   * @description The collection of long-running operations on the list.
   */
  'share.list_ListOperation': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.richLongRunningOperationCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to operations for shares */
  'share.list_CreateOperation': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get operations from shares
   * @description The collection of long-running operations on the list.
   */
  'share.list_GetOperation': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property operations for shares */
  'share.list_DeleteOperation': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property operations in shares */
  'share.list_UpdateOperation': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.operation_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from shares
   * @description The set of subscriptions on the list.
   */
  'share.list_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for shares */
  'share.list_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from shares
   * @description The set of subscriptions on the list.
   */
  'share.list_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for shares */
  'share.list_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in shares */
  'share.list_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action reauthorize
   * @description Reauthorize a subscription when you receive a reauthorizationRequired challenge.
   */
  'share.list.subscription_reauthorize': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.list.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get listItem from shares
   * @description Used to access the underlying listItem
   */
  share_GetListItem: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property listItem for shares */
  share_DeleteListItem: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property listItem in shares */
  share_UpdateListItem: {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from shares
   * @description Analytics about the view activities that took place on this item.
   */
  'share.listItem_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from shares
   * @description Identity of the user who created the item. Read-only.
   */
  'share.listItem_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'share.listItem.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'share.listItem.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'share.listItem.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from shares
   * @description Version information for a document set version created by a user.
   */
  'share.listItem_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for shares */
  'share.listItem_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from shares
   * @description Version information for a document set version created by a user.
   */
  'share.listItem_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for shares */
  'share.listItem_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in shares */
  'share.listItem_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from shares
   * @description A collection of the fields and values for this version of the list item.
   */
  'share.listItem.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for shares */
  'share.listItem.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in shares */
  'share.listItem.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restore
   * @description Restore a document set version.
   */
  'share.listItem.documentSetVersion_restore': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.listItem.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from shares
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'share.listItem_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from shares
   * @description The content stream, if the item represents a file.
   */
  'share.listItem_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in shares
   * @description The content stream, if the item represents a file.
   */
  'share.listItem_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in shares
   * @description The content stream, if the item represents a file.
   */
  'share.listItem_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from shares
   * @description The values of the columns set on this list item.
   */
  'share.listItem_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for shares */
  'share.listItem_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in shares */
  'share.listItem_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from shares
   * @description Identity of the user who last modified the item. Read-only.
   */
  'share.listItem_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'share.listItem.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'share.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'share.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Invoke action createLink */
  'share.listItem_createLink': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          type?: string | null
          scope?: string | null
          /** Format: date-time */
          expirationDateTime?: string | null
          password?: string | null
          message?: string | null
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          /** @default false */
          retainInheritedPermissions?: boolean | null
          /** @default false */
          sendNotification?: boolean | null
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Invoke function getActivitiesByInterval */
  'share.listItem_getActivitiesGraphBPreInterval': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description Usage: startDateTime='{startDateTime}' */
        startDateTime: string | null
        /** @description Usage: endDateTime='{endDateTime}' */
        endDateTime: string | null
        /** @description Usage: interval='{interval}' */
        interval: string | null
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.itemActivityStat'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from shares
   * @description The list of previous versions of the list item.
   */
  'share.listItem_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for shares */
  'share.listItem_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from shares
   * @description The list of previous versions of the list item.
   */
  'share.listItem_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for shares */
  'share.listItem_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in shares */
  'share.listItem_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from shares
   * @description A collection of the fields and values for this version of the list item.
   */
  'share.listItem.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for shares */
  'share.listItem.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in shares */
  'share.listItem.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action restoreVersion
   * @description Restore a previous version of a ListItem to be the current version. This will create a new version with the contents of the previous version, but preserves all existing versions of the item.
   */
  'share.listItem.version_restoreVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'share.listItem.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get permission from shares
   * @description Used to access the permission representing the underlying sharing link
   */
  share_GetPermission: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property permission for shares */
  share_DeletePermission: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property permission in shares */
  share_UpdatePermission: {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Invoke action grant
   * @description Grant users access to a link represented by a permission.
   */
  'share.permission_grant': {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description Action parameters */
    requestBody: {
      content: {
        'application/json': {
          roles?: (string | null)[]
          recipients?: components['schemas']['microsoft.graph.driveRecipient'][]
          [key: string]: Record<string, never> | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': {
            value?: components['schemas']['microsoft.graph.permission'][]
            '@odata.nextLink'?: string | null
            [key: string]: Record<string, never> | undefined
          }
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get root from shares
   * @description Used to access the underlying driveItem. Deprecated -- use driveItem instead.
   */
  share_GetRoot: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property root from shares
   * @description The content stream, if the item represents a file.
   */
  share_GetRootContent: {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property root in shares
   * @description The content stream, if the item represents a file.
   */
  share_SetRootContent: {
    parameters: {
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property root in shares
   * @description The content stream, if the item represents a file.
   */
  share_DeleteRootContent: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get site from shares
   * @description Used to access the underlying site
   */
  share_GetSite: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of sharedDriveItem */
        'sharedDriveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.site']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  share_GetCount: {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get drives from users
   * @description A collection of drives available for this user. Read-only.
   */
  user_GetDrive: {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get drives from users
   * @description A collection of drives available for this user. Read-only.
   */
  user_ListDrive: {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to drives for users */
  user_CreateDrive: {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.drive']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property drives for users */
  user_DeleteDrive: {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property drives in users */
  user_UpdateDrive: {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.drive']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get bundles from users
   * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
   */
  'user.drive_ListBundle': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to bundles for users */
  'user.drive_CreateBundle': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get bundles from users
   * @description Collection of bundles (albums and multi-select-shared sets of items). Only in personal OneDrive.
   */
  'user.drive_GetBundle': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property bundles from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_GetBundlesContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property bundles in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_SetBundlesContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property bundles in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_DeleteBundlesContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.bundle_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from users
   * @description Identity of the user who created the item. Read-only.
   */
  'user.drive_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get following from users
   * @description The list of items the user is following. Only in OneDrive for Business.
   */
  'user.drive_ListFollowing': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get following from users
   * @description The list of items the user is following. Only in OneDrive for Business.
   */
  'user.drive_GetFollowing': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property following from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_GetFollowingContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property following in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_SetFollowingContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property following in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_DeleteFollowingContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.following_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get items from users
   * @description All items contained in the drive. Read-only. Nullable.
   */
  'user.drive_ListItem': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to items for users */
  'user.drive_CreateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from users
   * @description All items contained in the drive. Read-only. Nullable.
   */
  'user.drive_GetItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property items for users */
  'user.drive_DeleteItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property items in users */
  'user.drive_UpdateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from users
   * @description Analytics about the view activities that took place on this item.
   */
  'user.drive.item_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property analytics for users */
  'user.drive.item_DeleteAnalytic': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property analytics in users */
  'user.drive.item_UpdateAnalytic': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemAnalytics']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get allTime from users */
  'user.drive.item.analytic_GetAllTime': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from users */
  'user.drive.item.analytic_ListItemActivityStat': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityStatCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to itemActivityStats for users */
  'user.drive.item.analytic_CreateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from users */
  'user.drive.item.analytic_GetItemActivityStat': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property itemActivityStats for users */
  'user.drive.item.analytic_DeleteItemActivityStat': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property itemActivityStats in users */
  'user.drive.item.analytic_UpdateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from users
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'user.drive.item.analytic.itemActivityStat_ListActivity': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to activities for users */
  'user.drive.item.analytic.itemActivityStat_CreateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from users
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'user.drive.item.analytic.itemActivityStat_GetActivity': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property activities for users */
  'user.drive.item.analytic.itemActivityStat_DeleteActivity': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property activities in users */
  'user.drive.item.analytic.itemActivityStat_UpdateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from users
   * @description Exposes the driveItem that was the target of this activity.
   */
  'user.drive.item.analytic.itemActivityStat.activity_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item.analytic.itemActivityStat.activity_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item.analytic.itemActivityStat.activity_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item.analytic.itemActivityStat.activity_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.analytic.itemActivityStat.activity_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.analytic.itemActivityStat_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get lastSevenDays from users */
  'user.drive.item.analytic_GetLastSevenDay': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from users
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'user.drive.item_ListChild': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to children for users */
  'user.drive.item_CreateChild': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from users
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'user.drive.item_GetChild': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property children from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item_GetChildrenContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property children in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item_SetChildrenContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property children in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item_DeleteChildrenContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id1': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.child_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property items from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_GetItemsContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property items in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_SetItemsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property items in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_DeleteItemsContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from users
   * @description Identity of the user who created the item. Read-only.
   */
  'user.drive.item_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.item.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.item.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.item.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from users
   * @description Identity of the user who last modified the item. Read-only.
   */
  'user.drive.item_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.item.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.item.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.item.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get listItem from users
   * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
   */
  'user.drive.item_GetListItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property listItem for users */
  'user.drive.item_DeleteListItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property listItem in users */
  'user.drive.item_UpdateListItem': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from users
   * @description Analytics about the view activities that took place on this item.
   */
  'user.drive.item.listItem_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from users
   * @description Identity of the user who created the item. Read-only.
   */
  'user.drive.item.listItem_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.item.listItem.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.item.listItem.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.item.listItem.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from users
   * @description Version information for a document set version created by a user.
   */
  'user.drive.item.listItem_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for users */
  'user.drive.item.listItem_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from users
   * @description Version information for a document set version created by a user.
   */
  'user.drive.item.listItem_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for users */
  'user.drive.item.listItem_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in users */
  'user.drive.item.listItem_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description A collection of the fields and values for this version of the list item.
   */
  'user.drive.item.listItem.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.item.listItem.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.item.listItem.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.listItem.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from users
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'user.drive.item.listItem_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item.listItem_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item.listItem_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.item.listItem_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description The values of the columns set on this list item.
   */
  'user.drive.item.listItem_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.item.listItem_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.item.listItem_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from users
   * @description Identity of the user who last modified the item. Read-only.
   */
  'user.drive.item.listItem_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.item.listItem.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.item.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.item.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the list item.
   */
  'user.drive.item.listItem_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for users */
  'user.drive.item.listItem_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the list item.
   */
  'user.drive.item.listItem_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for users */
  'user.drive.item.listItem_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in users */
  'user.drive.item.listItem_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description A collection of the fields and values for this version of the list item.
   */
  'user.drive.item.listItem.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.item.listItem.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.item.listItem.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.listItem.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from users
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'user.drive.item_ListPermission': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.permissionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to permissions for users */
  'user.drive.item_CreatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from users
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'user.drive.item_GetPermission': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property permissions for users */
  'user.drive.item_DeletePermission': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property permissions in users */
  'user.drive.item_UpdatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.permission_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get retentionLabel from users
   * @description Information about retention label and settings enforced on the driveItem. Read-write.
   */
  'user.drive.item_GetRetentionLabel': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property retentionLabel for users */
  'user.drive.item_DeleteRetentionLabel': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property retentionLabel in users */
  'user.drive.item_UpdateRetentionLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from users
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'user.drive.item_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for users */
  'user.drive.item_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from users
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'user.drive.item_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for users */
  'user.drive.item_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in users */
  'user.drive.item_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from users
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'user.drive.item_ListThumbnail': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.thumbnailSetCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to thumbnails for users */
  'user.drive.item_CreateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from users
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'user.drive.item_GetThumbnail': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property thumbnails for users */
  'user.drive.item_DeleteThumbnail': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property thumbnails in users */
  'user.drive.item_UpdateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.thumbnail_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'user.drive.item_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for users */
  'user.drive.item_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'user.drive.item_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for users */
  'user.drive.item_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in users */
  'user.drive.item_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property versions from users
   * @description The content stream for this version of the item.
   */
  'user.drive.item_GetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property versions in users
   * @description The content stream for this version of the item.
   */
  'user.drive.item_SetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property versions in users
   * @description The content stream for this version of the item.
   */
  'user.drive.item_DeleteVersionsContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.item_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from users
   * @description Identity of the user who last modified the item. Read-only.
   */
  'user.drive_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get list from users
   * @description For drives in SharePoint, the underlying document library list. Read-only. Nullable.
   */
  'user.drive_GetList': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.list']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property list for users */
  'user.drive_DeleteList': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property list in users */
  'user.drive_UpdateList': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.list']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.list']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from users
   * @description The collection of field definitions for this list.
   */
  'user.drive.list_ListColumn': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columns for users */
  'user.drive.list_CreateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from users
   * @description The collection of field definitions for this list.
   */
  'user.drive.list_GetColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columns for users */
  'user.drive.list_DeleteColumn': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columns in users */
  'user.drive.list_UpdateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get sourceColumn from users
   * @description The source column for the content type column.
   */
  'user.drive.list.column_GetSourceColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.column_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get contentTypes from users
   * @description The collection of content types present in this list.
   */
  'user.drive.list_ListContentType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.contentTypeCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to contentTypes for users */
  'user.drive.list_CreateContentType': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentType']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get contentTypes from users
   * @description The collection of content types present in this list.
   */
  'user.drive.list_GetContentType': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property contentTypes for users */
  'user.drive.list_DeleteContentType': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property contentTypes in users */
  'user.drive.list_UpdateContentType': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.contentType']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get base from users
   * @description Parent contentType from which this content type is derived.
   */
  'user.drive.list.contentType_GetBase': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get baseTypes from users
   * @description The collection of content types that are ancestors of this content type.
   */
  'user.drive.list.contentType_ListBaseType': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.contentTypeCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get baseTypes from users
   * @description The collection of content types that are ancestors of this content type.
   */
  'user.drive.list.contentType_GetBaseType': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of contentType */
        'contentType-id1': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.contentType']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.contentType.baseType_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnLinks from users
   * @description The collection of columns that are required by this content type.
   */
  'user.drive.list.contentType_ListColumnLink': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnLinkCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columnLinks for users */
  'user.drive.list.contentType_CreateColumnLink': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLink']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columnLinks from users
   * @description The collection of columns that are required by this content type.
   */
  'user.drive.list.contentType_GetColumnLink': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columnLinks for users */
  'user.drive.list.contentType_DeleteColumnLink': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columnLinks in users */
  'user.drive.list.contentType_UpdateColumnLink': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnLink */
        'columnLink-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnLink']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnLink']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.contentType.columnLink_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnPositions from users
   * @description Column order information in a content type.
   */
  'user.drive.list.contentType_ListColumnPosition': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columnPositions from users
   * @description Column order information in a content type.
   */
  'user.drive.list.contentType_GetColumnPosition': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.contentType.columnPosition_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from users
   * @description The collection of column definitions for this content type.
   */
  'user.drive.list.contentType_ListColumn': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.columnDefinitionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to columns for users */
  'user.drive.list.contentType_CreateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get columns from users
   * @description The collection of column definitions for this content type.
   */
  'user.drive.list.contentType_GetColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property columns for users */
  'user.drive.list.contentType_DeleteColumn': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property columns in users */
  'user.drive.list.contentType_UpdateColumn': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.columnDefinition']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get sourceColumn from users
   * @description The source column for the content type column.
   */
  'user.drive.list.contentType.column_GetSourceColumn': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
        /** @description The unique identifier of columnDefinition */
        'columnDefinition-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.columnDefinition']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.contentType.column_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of contentType */
        'contentType-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.contentType_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from users
   * @description Identity of the user who created the item. Read-only.
   */
  'user.drive.list_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.list.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.list.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.list.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get drive from users
   * @description Allows access to the list as a drive resource with driveItems. Only present on document libraries.
   */
  'user.drive.list_GetDrive': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.drive']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from users
   * @description All items contained in the list.
   */
  'user.drive.list_ListItem': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to items for users */
  'user.drive.list_CreateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get items from users
   * @description All items contained in the list.
   */
  'user.drive.list_GetItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property items for users */
  'user.drive.list_DeleteItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property items in users */
  'user.drive.list_UpdateItem': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from users
   * @description Analytics about the view activities that took place on this item.
   */
  'user.drive.list.item_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from users
   * @description Identity of the user who created the item. Read-only.
   */
  'user.drive.list.item_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.list.item.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.list.item.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.list.item.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.item.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from users
   * @description Version information for a document set version created by a user.
   */
  'user.drive.list.item_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for users */
  'user.drive.list.item_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from users
   * @description Version information for a document set version created by a user.
   */
  'user.drive.list.item_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for users */
  'user.drive.list.item_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in users */
  'user.drive.list.item_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description A collection of the fields and values for this version of the list item.
   */
  'user.drive.list.item.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.list.item.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.list.item.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.item.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from users
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'user.drive.list.item_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.list.item_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.list.item_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.list.item_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description The values of the columns set on this list item.
   */
  'user.drive.list.item_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.list.item_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.list.item_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from users
   * @description Identity of the user who last modified the item. Read-only.
   */
  'user.drive.list.item_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.list.item.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.list.item.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.list.item.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.item.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the list item.
   */
  'user.drive.list.item_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for users */
  'user.drive.list.item_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the list item.
   */
  'user.drive.list.item_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for users */
  'user.drive.list.item_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in users */
  'user.drive.list.item_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description A collection of the fields and values for this version of the list item.
   */
  'user.drive.list.item.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.list.item.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.list.item.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.item.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItem */
        'listItem-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from users
   * @description Identity of the user who last modified the item. Read-only.
   */
  'user.drive.list_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.list.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.list.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.list.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get operations from users
   * @description The collection of long-running operations on the list.
   */
  'user.drive.list_ListOperation': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.richLongRunningOperationCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to operations for users */
  'user.drive.list_CreateOperation': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get operations from users
   * @description The collection of long-running operations on the list.
   */
  'user.drive.list_GetOperation': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property operations for users */
  'user.drive.list_DeleteOperation': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property operations in users */
  'user.drive.list_UpdateOperation': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of richLongRunningOperation */
        'richLongRunningOperation-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.richLongRunningOperation']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.operation_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from users
   * @description The set of subscriptions on the list.
   */
  'user.drive.list_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for users */
  'user.drive.list_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from users
   * @description The set of subscriptions on the list.
   */
  'user.drive.list_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for users */
  'user.drive.list_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in users */
  'user.drive.list_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.list.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get root from users
   * @description The root folder of the drive. Read-only.
   */
  'user.drive_GetRoot': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property root for users */
  'user.drive_DeleteRoot': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property root in users */
  'user.drive_UpdateRoot': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from users
   * @description Analytics about the view activities that took place on this item.
   */
  'user.drive.root_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property analytics for users */
  'user.drive.root_DeleteAnalytic': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property analytics in users */
  'user.drive.root_UpdateAnalytic': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemAnalytics']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get allTime from users */
  'user.drive.root.analytic_GetAllTime': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from users */
  'user.drive.root.analytic_ListItemActivityStat': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityStatCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to itemActivityStats for users */
  'user.drive.root.analytic_CreateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get itemActivityStats from users */
  'user.drive.root.analytic_GetItemActivityStat': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property itemActivityStats for users */
  'user.drive.root.analytic_DeleteItemActivityStat': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property itemActivityStats in users */
  'user.drive.root.analytic_UpdateItemActivityStat': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivityStat']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from users
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'user.drive.root.analytic.itemActivityStat_ListActivity': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.itemActivityCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to activities for users */
  'user.drive.root.analytic.itemActivityStat_CreateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get activities from users
   * @description Exposes the itemActivities represented in this itemActivityStat resource.
   */
  'user.drive.root.analytic.itemActivityStat_GetActivity': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property activities for users */
  'user.drive.root.analytic.itemActivityStat_DeleteActivity': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property activities in users */
  'user.drive.root.analytic.itemActivityStat_UpdateActivity': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemActivity']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivity']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from users
   * @description Exposes the driveItem that was the target of this activity.
   */
  'user.drive.root.analytic.itemActivityStat.activity_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root.analytic.itemActivityStat.activity_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root.analytic.itemActivityStat.activity_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root.analytic.itemActivityStat.activity_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
        /** @description The unique identifier of itemActivity */
        'itemActivity-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.analytic.itemActivityStat.activity_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of itemActivityStat */
        'itemActivityStat-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.analytic.itemActivityStat_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get lastSevenDays from users */
  'user.drive.root.analytic_GetLastSevenDay': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemActivityStat']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from users
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'user.drive.root_ListChild': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to children for users */
  'user.drive.root_CreateChild': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItem']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get children from users
   * @description Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.
   */
  'user.drive.root_GetChild': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property children from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root_GetChildrenContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property children in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root_SetChildrenContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property children in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root_DeleteChildrenContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.child_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property root from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_GetRootContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property root in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_SetRootContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property root in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_DeleteRootContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from users
   * @description Identity of the user who created the item. Read-only.
   */
  'user.drive.root_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.root.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.root.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.root.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from users
   * @description Identity of the user who last modified the item. Read-only.
   */
  'user.drive.root_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.root.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.root.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.root.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get listItem from users
   * @description For drives in SharePoint, the associated document library list item. Read-only. Nullable.
   */
  'user.drive.root_GetListItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property listItem for users */
  'user.drive.root_DeleteListItem': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property listItem in users */
  'user.drive.root_UpdateListItem': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItem']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get analytics from users
   * @description Analytics about the view activities that took place on this item.
   */
  'user.drive.root.listItem_GetAnalytic': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemAnalytics']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get createdByUser from users
   * @description Identity of the user who created the item. Read-only.
   */
  'user.drive.root.listItem_GetCreatedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.root.listItem.createdGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.root.listItem.createdGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.root.listItem.createdGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.listItem.createdGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from users
   * @description Version information for a document set version created by a user.
   */
  'user.drive.root.listItem_ListDocumentSetVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.documentSetVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to documentSetVersions for users */
  'user.drive.root.listItem_CreateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get documentSetVersions from users
   * @description Version information for a document set version created by a user.
   */
  'user.drive.root.listItem_GetDocumentSetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property documentSetVersions for users */
  'user.drive.root.listItem_DeleteDocumentSetVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property documentSetVersions in users */
  'user.drive.root.listItem_UpdateDocumentSetVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.documentSetVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.documentSetVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description A collection of the fields and values for this version of the list item.
   */
  'user.drive.root.listItem.documentSetVersion_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.root.listItem.documentSetVersion_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.root.listItem.documentSetVersion_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of documentSetVersion */
        'documentSetVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.listItem.documentSetVersion_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get driveItem from users
   * @description For document libraries, the driveItem relationship exposes the listItem as a driveItem
   */
  'user.drive.root.listItem_GetDriveItem': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property driveItem from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root.listItem_GetDriveItemContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root.listItem_SetDriveItemContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property driveItem in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive.root.listItem_DeleteDriveItemContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description The values of the columns set on this list item.
   */
  'user.drive.root.listItem_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.root.listItem_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.root.listItem_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get lastModifiedByUser from users
   * @description Identity of the user who last modified the item. Read-only.
   */
  'user.drive.root.listItem_GetLastModifiedGraphBPreUser': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.user']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get mailboxSettings property value
   * @description Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale, and time zone. Returned only on $select.
   */
  'user.drive.root.listItem.lastModifiedGraphBPreUser_GetMailboxSetting': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Entity result. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Update property mailboxSettings value. */
  'user.drive.root.listItem.lastModifiedGraphBPreUser_UpdateMailboxSetting': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.mailboxSettings']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.mailboxSettings']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get serviceProvisioningErrors property value
   * @description Errors published by a federated service describing a nontransient, service-specific error regarding the properties or link from a user object.  Supports $filter (eq, not, for isResolved and serviceInstance).
   */
  'user.drive.root.listItem.lastModifiedGraphBPreUser_ListServiceProvisioningError': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.serviceProvisioningErrorCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.listItem.lastModifiedGraphBPreUser.ServiceProvisioningError_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the list item.
   */
  'user.drive.root.listItem_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.listItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for users */
  'user.drive.root.listItem_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the list item.
   */
  'user.drive.root.listItem_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for users */
  'user.drive.root.listItem_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in users */
  'user.drive.root.listItem_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.listItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.listItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get fields from users
   * @description A collection of the fields and values for this version of the list item.
   */
  'user.drive.root.listItem.version_GetField': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property fields for users */
  'user.drive.root.listItem.version_DeleteField': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property fields in users */
  'user.drive.root.listItem.version_UpdateField': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of listItemVersion */
        'listItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.fieldValueSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.fieldValueSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.listItem.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from users
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'user.drive.root_ListPermission': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.permissionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to permissions for users */
  'user.drive.root_CreatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get permissions from users
   * @description The set of permissions for the item. Read-only. Nullable.
   */
  'user.drive.root_GetPermission': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property permissions for users */
  'user.drive.root_DeletePermission': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property permissions in users */
  'user.drive.root_UpdatePermission': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of permission */
        'permission-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.permission']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.permission']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.permission_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get retentionLabel from users
   * @description Information about retention label and settings enforced on the driveItem. Read-write.
   */
  'user.drive.root_GetRetentionLabel': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property retentionLabel for users */
  'user.drive.root_DeleteRetentionLabel': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property retentionLabel in users */
  'user.drive.root_UpdateRetentionLabel': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.itemRetentionLabel']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from users
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'user.drive.root_ListSubscription': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.subscriptionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to subscriptions for users */
  'user.drive.root_CreateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get subscriptions from users
   * @description The set of subscriptions on the item. Only supported on the root of a drive.
   */
  'user.drive.root_GetSubscription': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property subscriptions for users */
  'user.drive.root_DeleteSubscription': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property subscriptions in users */
  'user.drive.root_UpdateSubscription': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of subscription */
        'subscription-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.subscription']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.subscription']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.subscription_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from users
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'user.drive.root_ListThumbnail': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.thumbnailSetCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to thumbnails for users */
  'user.drive.root_CreateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get thumbnails from users
   * @description Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable.
   */
  'user.drive.root_GetThumbnail': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property thumbnails for users */
  'user.drive.root_DeleteThumbnail': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property thumbnails in users */
  'user.drive.root_UpdateThumbnail': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of thumbnailSet */
        'thumbnailSet-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.thumbnailSet']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.thumbnailSet']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.thumbnail_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'user.drive.root_ListVersion': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemVersionCollectionResponse']
      default: components['responses']['error']
    }
  }
  /** Create new navigation property to versions for users */
  'user.drive.root_CreateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    /** @description New navigation property */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Created navigation property. */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get versions from users
   * @description The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable.
   */
  'user.drive.root_GetVersion': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /** Delete navigation property versions for users */
  'user.drive.root_DeleteVersion': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Update the navigation property versions in users */
  'user.drive.root_UpdateVersion': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New navigation property values */
    requestBody: {
      content: {
        'application/json': components['schemas']['microsoft.graph.driveItemVersion']
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property versions from users
   * @description The content stream for this version of the item.
   */
  'user.drive.root_GetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property versions in users
   * @description The content stream for this version of the item.
   */
  'user.drive.root_SetVersionsContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItemVersion']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property versions in users
   * @description The content stream for this version of the item.
   */
  'user.drive.root_DeleteVersionsContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItemVersion */
        'driveItemVersion-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.root.version_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get special from users
   * @description Collection of common folders available in OneDrive. Read-only. Nullable.
   */
  'user.drive_ListSpecial': {
    parameters: {
      query?: {
        $top?: components['parameters']['top']
        $skip?: components['parameters']['skip']
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
        $count?: components['parameters']['count']
        /** @description Order items by property values */
        $orderby?: string[]
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['microsoft.graph.driveItemCollectionResponse']
      default: components['responses']['error']
    }
  }
  /**
   * Get special from users
   * @description Collection of common folders available in OneDrive. Read-only. Nullable.
   */
  'user.drive_GetSpecial': {
    parameters: {
      query?: {
        /** @description Select properties to be returned */
        $select?: string[]
        /** @description Expand related entities */
        $expand?: string[]
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved navigation property */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Get content for the navigation property special from users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_GetSpecialContent': {
    parameters: {
      query?: {
        /** @description Format of the content */
        $format?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Retrieved media content */
      '2XX': {
        content: {
          'application/octet-stream': string
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Update content for the navigation property special in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_SetSpecialContent': {
    parameters: {
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    /** @description New media content. */
    requestBody: {
      content: {
        'application/octet-stream': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: {
          'application/json': components['schemas']['microsoft.graph.driveItem']
        }
      }
      default: components['responses']['error']
    }
  }
  /**
   * Delete content for the navigation property special in users
   * @description The content stream, if the item represents a file.
   */
  'user.drive_DeleteSpecialContent': {
    parameters: {
      header?: {
        /** @description ETag */
        'If-Match'?: string
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
        /** @description The unique identifier of driveItem */
        'driveItem-id': string
      }
    }
    responses: {
      /** @description Success */
      '2XX': {
        content: never
      }
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive.special_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
        /** @description The unique identifier of drive */
        'drive-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
  /** Get the number of the resource */
  'user.drive_GetCount': {
    parameters: {
      query?: {
        $search?: components['parameters']['search']
        $filter?: components['parameters']['filter']
      }
      path: {
        /** @description The unique identifier of user */
        'user-id': string
      }
    }
    responses: {
      '2XX': components['responses']['ODataCountResponse']
      default: components['responses']['error']
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}
