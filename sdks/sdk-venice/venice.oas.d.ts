/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/health": {
    /** Health check */
    get: operations["health"];
  };
  "/debug/raw-schemas": {
    /** @description Get raw schemas */
    get: operations["getRawSchemas"];
  };
  "/connect/token": {
    post: operations["createConnectToken"];
  };
  "/connect/magic-link": {
    post: operations["createMagicLink"];
  };
  "/passthrough": {
    post: operations["passthrough"];
  };
  "/core/resource/{id}/source_sync": {
    post: operations["sourceSync"];
  };
  "/core/resource": {
    get: operations["listResources"];
    post: operations["createResource"];
  };
  "/core/resource/{id}": {
    get: operations["getResource"];
    delete: operations["deleteResource"];
    patch: operations["updateResource"];
  };
  "/core/connector_config": {
    get: operations["adminListConnectorConfigs"];
    post: operations["adminUpsertConnectorConfig"];
  };
  "/core/connector_config/{id}": {
    get: operations["adminGetConnectorConfig"];
    delete: operations["adminDeleteConnectorConfig"];
    patch: operations["adminUpdateConnectorConfig"];
  };
  "/core/connector_config_info": {
    get: operations["listConnectorConfigInfos"];
  };
  "/connector": {
    /** @description Get catalog of all available connectors */
    get: operations["listConnectorMetas"];
  };
  "/connector/{name}": {
    get: operations["getConnectorMeta"];
  };
  "/connector/{name}/oas": {
    get: operations["getConnectorOpenApiSpec"];
  };
  "/connector/{name}/schemas": {
    get: operations["getConnectorSchemas"];
  };
  "/core/pipeline": {
    get: operations["listPipelines"];
  };
  "/core/pipeline/{id}": {
    delete: operations["deletePipeline"];
    patch: operations["updatePipeline"];
  };
  "/verticals/accounting/account": {
    get: operations["verticals-accounting-account_list"];
  };
  "/verticals/accounting/expense": {
    get: operations["verticals-accounting-expense_list"];
  };
  "/verticals/accounting/vendor": {
    get: operations["verticals-accounting-vendor_list"];
  };
  "/verticals/pta/account": {
    get: operations["verticals-pta-account_list"];
  };
  "/verticals/pta/transaction": {
    get: operations["verticals-pta-transaction_list"];
  };
  "/verticals/pta/commodity": {
    get: operations["verticals-pta-commodity_list"];
  };
  "/verticals/investment/account": {
    get: operations["verticals-investment-account_list"];
  };
  "/verticals/investment/transaction": {
    get: operations["verticals-investment-transaction_list"];
  };
  "/verticals/investment/holding": {
    get: operations["verticals-investment-holding_list"];
  };
  "/verticals/investment/security": {
    get: operations["verticals-investment-security_list"];
  };
  "/openapi.json": {
    get: operations["getOpenapiDocument"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * Error
     * @description The error information
     * @example {
     *   "code": "INTERNAL_SERVER_ERROR",
     *   "message": "Internal server error",
     *   "issues": []
     * }
     */
    "error.INTERNAL_SERVER_ERROR": {
      /**
       * @description The error message
       * @example Internal server error
       */
      message: string;
      /**
       * @description The error code
       * @example INTERNAL_SERVER_ERROR
       */
      code: string;
      /**
       * @description An array of issues that were responsible for the error
       * @example []
       */
      issues?: {
          message: string;
        }[];
    };
    /**
     * Error
     * @description The error information
     * @example {
     *   "code": "BAD_REQUEST",
     *   "message": "Invalid input data",
     *   "issues": []
     * }
     */
    "error.BAD_REQUEST": {
      /**
       * @description The error message
       * @example Invalid input data
       */
      message: string;
      /**
       * @description The error code
       * @example BAD_REQUEST
       */
      code: string;
      /**
       * @description An array of issues that were responsible for the error
       * @example []
       */
      issues?: {
          message: string;
        }[];
    };
    Resource: {
      createdAt: string;
      updatedAt: string;
      /** @description Must start with 'reso_' */
      id: string;
      /** @description Unique name of the connector */
      connectorName: string;
      displayName?: string | null;
      endUserId?: string | null;
      /** @description Must start with 'ccfg_' */
      connectorConfigId: string;
      /** @description Must start with 'int_' */
      integrationId?: string | null;
      settings?: {
        [key: string]: unknown;
      } | null;
      standard?: ({
        displayName: string;
        /** @enum {string|null} */
        status?: "healthy" | "disconnected" | "error" | "manual";
        statusMessage?: string | null;
        labels?: string[];
      }) | null;
      disabled?: boolean;
      /**
       * @description
       *   JSON object can can be used to associate arbitrary metadata to
       *   avoid needing a separate 1-1 table just for simple key values in your application.
       *   During updates this object will be shallowly merged
       */
      metadata?: unknown;
    };
    /**
     * Error
     * @description The error information
     * @example {
     *   "code": "NOT_FOUND",
     *   "message": "Not found",
     *   "issues": []
     * }
     */
    "error.NOT_FOUND": {
      /**
       * @description The error message
       * @example Not found
       */
      message: string;
      /**
       * @description The error code
       * @example NOT_FOUND
       */
      code: string;
      /**
       * @description An array of issues that were responsible for the error
       * @example []
       */
      issues?: {
          message: string;
        }[];
    };
    ConnectorConfig: {
      createdAt: string;
      updatedAt: string;
      /** @description Must start with 'ccfg_' */
      id: string;
      connectorName: string;
      config?: {
        [key: string]: unknown;
      } | null;
      /** @description Must start with 'org_' */
      orgId: string;
      displayName?: string | null;
      disabled?: boolean;
      /** @description Automatically sync data from any resources associated with this config to the destination resource, which is typically a Postgres database. Think ETL */
      defaultPipeOut?: ({
        streams?: {
          [key: string]: boolean;
        } | null;
        /** @description Array of transformations that the data gets piped through on the way out. Typically used for things like unification / normalization. */
        links?: components["schemas"]["Link"][] | null;
        /** @description Must start with 'reso_' */
        destination_id: string;
      }) | null;
      /** @description Automatically sync data from any resources associated with this config to the destination resource, which is typically a Postgres database. Think ETL */
      defaultPipeIn?: ({
        /** @description Array of transformations that the data gets piped through on the way out. Typically used for things like unification / normalization. */
        links?: components["schemas"]["Link"][] | null;
        /** @description Must start with 'reso_' */
        source_id: string;
      }) | null;
      envName?: string | null;
      /**
       * @description
       *   JSON object can can be used to associate arbitrary metadata to
       *   avoid needing a separate 1-1 table just for simple key values in your application.
       *   During updates this object will be shallowly merged
       */
      metadata?: unknown;
    };
    /** @enum {string} */
    Link: "banking";
    Pipeline: {
      createdAt: string;
      updatedAt: string;
      /** @description Must start with 'pipe_' */
      id: string;
      /** @description Must start with 'reso_' */
      sourceId?: string;
      sourceState?: {
        [key: string]: unknown;
      };
      /** @description Must start with 'reso_' */
      destinationId?: string;
      destinationState?: {
        [key: string]: unknown;
      };
      linkOptions?: unknown[] | null;
      lastSyncStartedAt?: string | null;
      lastSyncCompletedAt?: string | null;
      disabled?: boolean;
      /**
       * @description
       *   JSON object can can be used to associate arbitrary metadata to
       *   avoid needing a separate 1-1 table just for simple key values in your application.
       *   During updates this object will be shallowly merged
       */
      metadata?: unknown;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Health check */
  health: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  /** @description Get raw schemas */
  getRawSchemas: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  createConnectToken: {
    requestBody: {
      content: {
        "application/json": {
          /** @description Anything that uniquely identifies the end user that you will be sending the magic link to */
          endUserId?: string;
          /**
           * @description How long the magic link will be valid for (in seconds) before it expires
           * @default 3600
           */
          validityInSeconds?: number;
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            token: string;
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  createMagicLink: {
    requestBody: {
      content: {
        "application/json": {
          /** @description Anything that uniquely identifies the end user that you will be sending the magic link to */
          endUserId?: string;
          /**
           * @description How long the magic link will be valid for (in seconds) before it expires
           * @default 3600
           */
          validityInSeconds?: number;
          /** @description What to call user by */
          displayName?: string | null;
          /** @description Where to send user to after connect / if they press back button */
          redirectUrl?: string | null;
          /** @description Which provider to use */
          connectorName?: string | null;
          /** @description Must start with 'ccfg_' */
          connectorConfigId?: string;
          /** @default true */
          showExisting?: boolean;
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            url: string;
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  passthrough: {
    requestBody: {
      content: {
        "application/json": {
          /** @enum {string} */
          method: "GET" | "POST" | "PUT" | "PATCH" | "DELETE" | "OPTIONS";
          path: string;
          query?: {
            [key: string]: unknown;
          };
          headers?: {
            [key: string]: unknown;
          };
          body?: {
            [key: string]: unknown;
          };
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  sourceSync: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          state?: {
            [key: string]: unknown;
          };
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
              [key: string]: unknown;
            }[];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  listResources: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
        endUserId?: string | null;
        connectorConfigId?: string | null;
        connectorName?: string | null;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Resource"][];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  createResource: {
    requestBody: {
      content: {
        "application/json": {
          /** @description Must start with 'ccfg_' */
          connectorConfigId: string;
          settings?: {
            [key: string]: unknown;
          } | null;
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  getResource: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Resource"];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  deleteResource: {
    parameters: {
      query?: {
        skipRevoke?: boolean;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  updateResource: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          settings?: {
            [key: string]: unknown;
          } | null;
          displayName?: string | null;
          /**
           * @description
           *   JSON object can can be used to associate arbitrary metadata to
           *   avoid needing a separate 1-1 table just for simple key values in your application.
           *   During updates this object will be shallowly merged
           */
          metadata?: unknown;
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Resource"];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  adminListConnectorConfigs: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ConnectorConfig"][];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  adminUpsertConnectorConfig: {
    requestBody: {
      content: {
        "application/json": {
          /** @description Must start with 'ccfg_' */
          id?: string;
          connectorName?: string;
          /** @description Must start with 'org_' */
          orgId: string;
          config?: {
            [key: string]: unknown;
          } | null;
          displayName?: string | null;
          /** @description Automatically sync data from any resources associated with this config to the destination resource, which is typically a Postgres database. Think ETL */
          defaultPipeOut?: ({
            streams?: {
              [key: string]: boolean;
            } | null;
            /** @description Array of transformations that the data gets piped through on the way out. Typically used for things like unification / normalization. */
            links?: components["schemas"]["Link"][] | null;
            /** @description Must start with 'reso_' */
            destination_id: string;
          }) | null;
          /** @description Automatically sync data from any resources associated with this config to the destination resource, which is typically a Postgres database. Think ETL */
          defaultPipeIn?: ({
            /** @description Array of transformations that the data gets piped through on the way out. Typically used for things like unification / normalization. */
            links?: components["schemas"]["Link"][] | null;
            /** @description Must start with 'reso_' */
            source_id: string;
          }) | null;
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ConnectorConfig"];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  adminGetConnectorConfig: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ConnectorConfig"];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  adminDeleteConnectorConfig: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  adminUpdateConnectorConfig: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description
           *   JSON object can can be used to associate arbitrary metadata to
           *   avoid needing a separate 1-1 table just for simple key values in your application.
           *   During updates this object will be shallowly merged
           */
          metadata?: unknown;
          displayName?: string | null;
          disabled?: boolean;
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ConnectorConfig"];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  listConnectorConfigInfos: {
    parameters: {
      query?: {
        type?: "source" | "destination";
        id?: string | null;
        connectorName?: string | null;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": ({
              /** @description Must start with 'ccfg_' */
              id: string;
              envName?: string | null;
              displayName?: string | null;
              connectorName: string;
              isSource: boolean;
              isDestination: boolean;
            })[];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  /** @description Get catalog of all available connectors */
  listConnectorMetas: {
    parameters: {
      query?: {
        includeOas?: boolean;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  getConnectorMeta: {
    parameters: {
      query?: {
        includeOas?: boolean;
      };
      path: {
        name: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  getConnectorOpenApiSpec: {
    parameters: {
      query?: {
        original?: boolean;
      };
      path: {
        name: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  getConnectorSchemas: {
    parameters: {
      query?: {
        type?: string;
      };
      path: {
        name: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  listPipelines: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
        resourceIds?: string[];
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Pipeline"][];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  deletePipeline: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": true;
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  updatePipeline: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description
           *   JSON object can can be used to associate arbitrary metadata to
           *   avoid needing a separate 1-1 table just for simple key values in your application.
           *   During updates this object will be shallowly merged
           */
          metadata?: unknown;
          disabled?: boolean;
        };
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Pipeline"];
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-accounting-account_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: ({
                id: string;
                number?: string | null;
                name: string;
                type: string;
                _original?: unknown;
              })[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-accounting-expense_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                id: string;
                amount: number;
                currency: string;
                payment_account: string;
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-accounting-vendor_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                id: string;
                name: string;
                url: string;
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-pta-account_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-pta-transaction_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-pta-commodity_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-investment-account_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                id: string;
                name: string;
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-investment-transaction_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                id: string;
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-investment-holding_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                id: string;
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  "verticals-investment-security_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            hasNextPage: boolean;
            items: {
                id: string;
                _original?: unknown;
              }[];
          };
        };
      };
      /** @description Invalid input data */
      400: {
        content: {
          "application/json": components["schemas"]["error.BAD_REQUEST"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["error.NOT_FOUND"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
  getOpenapiDocument: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["error.INTERNAL_SERVER_ERROR"];
        };
      };
    };
  };
}


export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
