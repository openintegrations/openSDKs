export interface paths {
  '/account-details': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get details for a linked account. */
    get: operations['account_details_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/account-token/{public_token}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns the account token for the end user with the provided public token. */
    get: operations['account_token_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/accounting-periods': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `AccountingPeriod` objects. */
    get: operations['accounting_periods_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/accounting-periods/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `AccountingPeriod` object with the given `id`. */
    get: operations['accounting_periods_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/accounts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `Account` objects. */
    get: operations['accounts_list']
    put?: never
    /** @description Creates an `Account` object with the given values. */
    post: operations['accounts_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/accounts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `Account` object with the given `id`. */
    get: operations['accounts_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/accounts/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `Account` POSTs. */
    get: operations['accounts_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/addresses/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `Address` object with the given `id`. */
    get: operations['addresses_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/async-passthrough': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Asynchronously pull data from an endpoint not currently supported by Merge. */
    post: operations['async_passthrough_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/async-passthrough/{async_passthrough_receipt_id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieves data from earlier async-passthrough POST request */
    get: operations['async_passthrough_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/async-tasks/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `AsyncPostTask` object with the given `id`. */
    get: operations['async_tasks_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/attachments': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `AccountingAttachment` objects. */
    get: operations['attachments_list']
    put?: never
    /** @description Creates an `AccountingAttachment` object with the given values. */
    post: operations['attachments_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/attachments/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `AccountingAttachment` object with the given `id`. */
    get: operations['attachments_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/attachments/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `AccountingAttachment` POSTs. */
    get: operations['attachments_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/audit-trail': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Gets a list of audit trail events. */
    get: operations['audit_trail_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/available-actions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of models and actions available for an account. */
    get: operations['available_actions_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/balance-sheets': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `BalanceSheet` objects. */
    get: operations['balance_sheets_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/balance-sheets/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `BalanceSheet` object with the given `id`. */
    get: operations['balance_sheets_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/bank-feed-accounts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `BankFeedAccount` objects. */
    get: operations['bank_feed_accounts_list']
    put?: never
    /** @description Creates a `BankFeedAccount` object with the given values. */
    post: operations['bank_feed_accounts_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/bank-feed-accounts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `BankFeedAccount` object with the given `id`. */
    get: operations['bank_feed_accounts_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/bank-feed-accounts/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `BankFeedAccount` POSTs. */
    get: operations['bank_feed_accounts_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/bank-feed-transactions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `BankFeedTransaction` objects. */
    get: operations['bank_feed_transactions_list']
    put?: never
    /** @description Creates a `BankFeedTransaction` object with the given values. */
    post: operations['bank_feed_transactions_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/bank-feed-transactions/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `BankFeedTransaction` object with the given `id`. */
    get: operations['bank_feed_transactions_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/bank-feed-transactions/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `BankFeedTransaction` POSTs. */
    get: operations['bank_feed_transactions_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cash-flow-statements': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `CashFlowStatement` objects. */
    get: operations['cash_flow_statements_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cash-flow-statements/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `CashFlowStatement` object with the given `id`. */
    get: operations['cash_flow_statements_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/company-info': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `CompanyInfo` objects. */
    get: operations['company_info_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/company-info/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `CompanyInfo` object with the given `id`. */
    get: operations['company_info_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/contacts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `Contact` objects. */
    get: operations['contacts_list']
    put?: never
    /** @description Creates a `Contact` object with the given values. */
    post: operations['contacts_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/contacts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `Contact` object with the given `id`. */
    get: operations['contacts_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/contacts/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `Contact` POSTs. */
    get: operations['contacts_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/contacts/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['contacts_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/credit-notes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `CreditNote` objects. */
    get: operations['credit_notes_list']
    put?: never
    /** @description Creates a `CreditNote` object with the given values. */
    post: operations['credit_notes_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/credit-notes/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `CreditNote` object with the given `id`. */
    get: operations['credit_notes_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/credit-notes/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `CreditNote` POSTs. */
    get: operations['credit_notes_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/default-scopes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get the default permissions for Merge Common Models and fields across all Linked Accounts of a given category. [Learn more](https://help.merge.dev/en/articles/5950052-common-model-and-field-scopes). */
    get: operations['default_scopes_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/delete-account': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Delete a linked account. */
    post: operations['delete_account_delete']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/employees': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `Employee` objects. */
    get: operations['employees_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/employees/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `Employee` object with the given `id`. */
    get: operations['employees_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/expenses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `Expense` objects. */
    get: operations['expenses_list']
    put?: never
    /** @description Creates an `Expense` object with the given values. */
    post: operations['expenses_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/expenses/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `Expense` object with the given `id`. */
    get: operations['expenses_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/expenses/lines/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['expenses_lines_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/expenses/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `Expense` POSTs. */
    get: operations['expenses_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/expenses/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['expenses_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/field-mappings': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get all Field Mappings for this Linked Account. Field Mappings are mappings between third-party Remote Fields and user defined Merge fields. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/). */
    get: operations['field_mappings_retrieve']
    put?: never
    /** @description Create new Field Mappings that will be available after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start. */
    post: operations['field_mappings_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/field-mappings/{field_mapping_id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** @description Deletes Field Mappings for a Linked Account. All data related to this Field Mapping will be deleted and these changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start. */
    delete: operations['field_mappings_destroy']
    options?: never
    head?: never
    /** @description Create or update existing Field Mappings for a Linked Account. Changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start. */
    patch: operations['field_mappings_partial_update']
    trace?: never
  }
  '/general-ledger-transactions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `GeneralLedgerTransaction` objects. */
    get: operations['general_ledger_transactions_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/general-ledger-transactions/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `GeneralLedgerTransaction` object with the given `id`. */
    get: operations['general_ledger_transactions_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/generate-key': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Create a remote key. */
    post: operations['generate_key_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/income-statements': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `IncomeStatement` objects. */
    get: operations['income_statements_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/income-statements/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `IncomeStatement` object with the given `id`. */
    get: operations['income_statements_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/invoices': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `Invoice` objects. */
    get: operations['invoices_list']
    put?: never
    /** @description Creates an `Invoice` object with the given values.
     *                 Including a `PurchaseOrder` id in the `purchase_orders` property will generate an Accounts Payable Invoice from the specified Purchase Order(s).
     *                  */
    post: operations['invoices_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/invoices/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `Invoice` object with the given `id`. */
    get: operations['invoices_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /** @description Updates an `Invoice` object with the given `id`. */
    patch: operations['invoices_partial_update']
    trace?: never
  }
  '/invoices/line-items/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['invoices_line_items_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/invoices/meta/patch/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `Invoice` PATCHs. */
    get: operations['invoices_meta_patch_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/invoices/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `Invoice` POSTs. */
    get: operations['invoices_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/invoices/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['invoices_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/issues': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Gets all issues for Organization. */
    get: operations['issues_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/issues/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get a specific issue. */
    get: operations['issues_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/items': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `Item` objects. */
    get: operations['items_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/items/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `Item` object with the given `id`. */
    get: operations['items_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/journal-entries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `JournalEntry` objects. */
    get: operations['journal_entries_list']
    put?: never
    /** @description Creates a `JournalEntry` object with the given values. */
    post: operations['journal_entries_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/journal-entries/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `JournalEntry` object with the given `id`. */
    get: operations['journal_entries_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/journal-entries/lines/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['journal_entries_lines_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/journal-entries/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `JournalEntry` POSTs. */
    get: operations['journal_entries_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/journal-entries/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['journal_entries_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/link-token': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Creates a link token to be used when linking a new end user. */
    post: operations['link_token_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/linked-account-scopes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get all available permissions for Merge Common Models and fields for a single Linked Account. [Learn more](https://help.merge.dev/en/articles/5950052-common-model-and-field-scopes). */
    get: operations['linked_account_scopes_retrieve']
    put?: never
    /** @description Update permissions for any Common Model or field for a single Linked Account. Any Scopes not set in this POST request will inherit the default Scopes. [Learn more](https://help.merge.dev/en/articles/5950052-common-model-and-field-scopes) */
    post: operations['linked_account_scopes_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/linked-accounts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description List linked accounts for your organization. */
    get: operations['linked_accounts_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/passthrough': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Pull data from an endpoint not currently supported by Merge. */
    post: operations['passthrough_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/payments': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `Payment` objects. */
    get: operations['payments_list']
    put?: never
    /** @description Creates a `Payment` object with the given values. */
    post: operations['payments_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/payments/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `Payment` object with the given `id`. */
    get: operations['payments_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /** @description Updates a `Payment` object with the given `id`. */
    patch: operations['payments_partial_update']
    trace?: never
  }
  '/payments/line-items/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['payments_line_items_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/payments/meta/patch/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `Payment` PATCHs. */
    get: operations['payments_meta_patch_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/payments/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `Payment` POSTs. */
    get: operations['payments_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/payments/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['payments_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/phone-numbers/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns an `AccountingPhoneNumber` object with the given `id`. */
    get: operations['phone_numbers_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/purchase-orders': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `PurchaseOrder` objects. */
    get: operations['purchase_orders_list']
    put?: never
    /** @description Creates a `PurchaseOrder` object with the given values. */
    post: operations['purchase_orders_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/purchase-orders/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `PurchaseOrder` object with the given `id`. */
    get: operations['purchase_orders_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/purchase-orders/line-items/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['purchase_orders_line_items_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/purchase-orders/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `PurchaseOrder` POSTs. */
    get: operations['purchase_orders_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/purchase-orders/remote-field-classes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `RemoteFieldClass` objects. */
    get: operations['purchase_orders_remote_field_classes_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/regenerate-key': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Exchange remote keys. */
    post: operations['regenerate_key_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/remote-fields': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get all remote fields for a Linked Account. Remote fields are third-party fields that are accessible after initial sync if remote_data is enabled. You can use remote fields to override existing Merge fields or map a new Merge field. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/). */
    get: operations['remote_fields_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sync-status': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`. Learn more about sync status in our [Help Center](https://help.merge.dev/en/articles/8184193-merge-sync-statuses). */
    get: operations['sync_status_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sync-status/resync': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Professional or Enterprise plans. Doing so will consume a sync credit for the relevant linked account. */
    post: operations['sync_status_resync_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/target-fields': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Get all organization-wide Target Fields, this will not include any Linked Account specific Target Fields. Organization-wide Target Fields are additional fields appended to the Merge Common Model for all Linked Accounts in a category. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/target-fields/). */
    get: operations['target_fields_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/tax-rates': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `TaxRate` objects. */
    get: operations['tax_rates_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/tax-rates/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `TaxRate` object with the given `id`. */
    get: operations['tax_rates_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/tracking-categories': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `TrackingCategory` objects. */
    get: operations['tracking_categories_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/tracking-categories/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `TrackingCategory` object with the given `id`. */
    get: operations['tracking_categories_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/transactions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `Transaction` objects. */
    get: operations['transactions_list']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/transactions/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `Transaction` object with the given `id`. */
    get: operations['transactions_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/vendor-credits': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `VendorCredit` objects. */
    get: operations['vendor_credits_list']
    put?: never
    /** @description Creates a `VendorCredit` object with the given values. */
    post: operations['vendor_credits_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/vendor-credits/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a `VendorCredit` object with the given `id`. */
    get: operations['vendor_credits_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/vendor-credits/meta/post': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns metadata for `VendorCredit` POSTs. */
    get: operations['vendor_credits_meta_post_retrieve']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/webhook-receivers': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Returns a list of `WebhookReceiver` objects. */
    get: operations['webhook_receivers_list']
    put?: never
    /** @description Creates a `WebhookReceiver` object with the given values. */
    post: operations['webhook_receivers_create']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /** @description # The Account Object
     *     ### Description
     *     An `Account` represents a category in a company’s ledger in which a financial transaction is recorded against. The aggregation of each `Account` object is often referred to as the **Chart of Accounts**.
     *
     *     An `Account` can be classified into one of the following categories, determined through the `classification` field:
     *     * __Asset:__ Accounts Receivable and Bank Accounts
     *     * __Liability:__ Accounts Payable and Credit Card Accounts
     *     * __Equity:__ Treasury Accounts and Retained Earnings
     *     * __Revenue:__ Income and Other Income
     *     * __Expense:__ Cost of Goods Sold and Office Expenses
     *
     *     ### Usage Example
     *     Fetch from the `LIST Accounts` endpoint and view a company's accounts. */
    Account: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 21
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The account's name.
       * @example Cash
       */
      name?: string | null
      /**
       * @description The account's description.
       * @example Cash
       */
      description?: string | null
      /**
       * @description The account's broadest grouping.
       *
       *     * `ASSET` - ASSET
       *     * `EQUITY` - EQUITY
       *     * `EXPENSE` - EXPENSE
       *     * `LIABILITY` - LIABILITY
       *     * `REVENUE` - REVENUE
       * @example ASSET
       */
      classification?: components['schemas']['ClassificationEnum'] | null
      /**
       * @description The account's type is a narrower and more specific grouping within the account's classification.
       * @example Asset
       */
      type?: string | null
      /**
       * @description Normalized account type- which is a narrower and more specific grouping within the account's classification.
       *
       *     * `BANK` - BANK
       *     * `CREDIT_CARD` - CREDIT_CARD
       *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
       *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
       *     * `FIXED_ASSET` - FIXED_ASSET
       *     * `OTHER_ASSET` - OTHER_ASSET
       *     * `OTHER_CURRENT_ASSET` - OTHER_CURRENT_ASSET
       *     * `OTHER_EXPENSE` - OTHER_EXPENSE
       *     * `OTHER_INCOME` - OTHER_INCOME
       *     * `COST_OF_GOODS_SOLD` - COST_OF_GOODS_SOLD
       *     * `OTHER_CURRENT_LIABILITY` - OTHER_CURRENT_LIABILITY
       *     * `LONG_TERM_LIABILITY` - LONG_TERM_LIABILITY
       *     * `NON_POSTING` - NON_POSTING
       * @example FIXED_ASSET
       */
      account_type?: components['schemas']['AccountAccountTypeEnum'] | null
      /**
       * @description The account's status.
       *
       *     * `ACTIVE` - ACTIVE
       *     * `PENDING` - PENDING
       *     * `INACTIVE` - INACTIVE
       * @example ACTIVE
       */
      status?: components['schemas']['AccountStatusEnum'] | null
      /**
       * Format: double
       * @description The account's current balance.
       */
      current_balance?: number | null
      /**
       * @description The account's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * @description The account's number.
       * @example X12Y9AB
       */
      account_number?: string | null
      /**
       * Format: uuid
       * @description ID of the parent account.
       * @example 22d92d6c-22f9-11ed-861d-0242ac120002
       */
      parent_account?: string | null
      /**
       * Format: uuid
       * @description The company the account belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /**
     * @description * `BANK` - BANK
     *     * `CREDIT_CARD` - CREDIT_CARD
     *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
     *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
     *     * `FIXED_ASSET` - FIXED_ASSET
     *     * `OTHER_ASSET` - OTHER_ASSET
     *     * `OTHER_CURRENT_ASSET` - OTHER_CURRENT_ASSET
     *     * `OTHER_EXPENSE` - OTHER_EXPENSE
     *     * `OTHER_INCOME` - OTHER_INCOME
     *     * `COST_OF_GOODS_SOLD` - COST_OF_GOODS_SOLD
     *     * `OTHER_CURRENT_LIABILITY` - OTHER_CURRENT_LIABILITY
     *     * `LONG_TERM_LIABILITY` - LONG_TERM_LIABILITY
     *     * `NON_POSTING` - NON_POSTING
     * @enum {string}
     */
    AccountAccountTypeEnum:
      | 'BANK'
      | 'CREDIT_CARD'
      | 'ACCOUNTS_PAYABLE'
      | 'ACCOUNTS_RECEIVABLE'
      | 'FIXED_ASSET'
      | 'OTHER_ASSET'
      | 'OTHER_CURRENT_ASSET'
      | 'OTHER_EXPENSE'
      | 'OTHER_INCOME'
      | 'COST_OF_GOODS_SOLD'
      | 'OTHER_CURRENT_LIABILITY'
      | 'LONG_TERM_LIABILITY'
      | 'NON_POSTING'
    AccountDetails: {
      /**
       * Format: uuid
       * @example 0496d4c2-42e6-4072-80b3-7b69bfdc76fd
       */
      readonly id?: string
      /** @example BambooHR */
      readonly integration?: string
      /** @example bamboohr */
      readonly integration_slug?: string
      /** @example hris */
      category?: components['schemas']['CategoryEnum'] | null
      /** @example 3fa85f64-5717-4562-b3fc-2c963f66afa6 */
      readonly end_user_origin_id?: string
      /** @example Waystar Royco */
      readonly end_user_organization_name?: string
      /**
       * Format: email
       * @example kendall.roy@waystar-royco.com
       */
      readonly end_user_email_address?: string
      /** @example COMPLETE */
      readonly status?: string
      /**
       * Format: uri
       * @example https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4
       */
      readonly webhook_listener_url?: string
      /**
       * @description Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.
       * @example true
       */
      readonly is_duplicate?: boolean | null
      /** @example PRODUCTION */
      readonly account_type?: string
      /**
       * Format: date-time
       * @description The time at which account completes the linking flow.
       * @example 2024-08-26T20:11:19.277118Z
       */
      completed_at?: string | null
    }
    /** @description # The LinkedAccount Object
     *     ### Description
     *     The `LinkedAccount` object is used to represent an end user's link with a specific integration.
     *
     *     ### Usage Example
     *     View a list of your organization's `LinkedAccount` objects. */
    AccountDetailsAndActions: {
      /** @example e59b1821-f85c-4e28-a6b3-1804156f3563 */
      id: string
      /** @example hris */
      category?: components['schemas']['CategoryEnum']
      /** @example INCOMPLETE */
      status: components['schemas']['AccountDetailsAndActionsStatusEnum']
      /** @example Invalid login credentials */
      status_detail?: string
      /** @example 3ac95cde-6c7f-4eef-afec-be710b42308d */
      end_user_origin_id?: string
      /** @example Foo Bar, LLC */
      end_user_organization_name: string
      /** @example hradmin@foobar.dev */
      end_user_email_address: string
      /**
       * @description The tenant or domain the customer has provided access to.
       * @example foobar
       */
      subdomain?: string
      /** @example https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4 */
      webhook_listener_url: string
      /**
       * @description Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.
       * @example true
       */
      is_duplicate?: boolean | null
      /** @example {
       *       "name": "SAP SuccessFactors",
       *       "categories": [
       *         "hris",
       *         "ats"
       *       ],
       *       "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
       *       "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
       *       "color": "#F6A704",
       *       "slug": "sap-successfactors",
       *       "passthrough_available": true,
       *       "available_model_operations": [
       *         {
       *           "model_name": "Candidate",
       *           "available_operations": [
       *             "FETCH",
       *             "CREATE"
       *           ],
       *           "required_post_parameters": [
       *             "remote_user_id"
       *           ],
       *           "supported_fields": [
       *             "first_name",
       *             "last_name",
       *             "company",
       *             "title"
       *           ]
       *         }
       *       ]
       *     } */
      integration?: components['schemas']['AccountDetailsAndActionsIntegration']
      /** @example PRODUCTION */
      account_type: string
      /**
       * Format: date-time
       * @example 2024-08-26T20:11:19.277118Z
       */
      completed_at: string
    }
    AccountDetailsAndActionsIntegration: {
      name: string
      categories: components['schemas']['CategoriesEnum'][]
      image?: string
      square_image?: string
      color: string
      slug: string
      passthrough_available: boolean
      available_model_operations?: components['schemas']['ModelOperation'][]
    }
    /**
     * @description * `COMPLETE` - COMPLETE
     *     * `INCOMPLETE` - INCOMPLETE
     *     * `RELINK_NEEDED` - RELINK_NEEDED
     *     * `IDLE` - IDLE
     * @enum {string}
     */
    AccountDetailsAndActionsStatusEnum:
      | 'COMPLETE'
      | 'INCOMPLETE'
      | 'RELINK_NEEDED'
      | 'IDLE'
    AccountEndpointRequest: {
      model: components['schemas']['AccountRequest']
    }
    AccountIntegration: {
      /** @description Company name. */
      name: string
      /** @description Optional. This shortened name appears in places with limited space, usually in conjunction with the platform's logo (e.g., Merge Link menu).<br><br>Example: <i>Workforce Now (in lieu of ADP Workforce Now), SuccessFactors (in lieu of SAP SuccessFactors)</i> */
      abbreviated_name?: string | null
      /** @description Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris]. */
      readonly categories?: components['schemas']['CategoriesEnum'][]
      /**
       * Format: uri
       * @description Company logo in rectangular shape.
       */
      image?: string | null
      /**
       * Format: uri
       * @description Company logo in square shape.
       */
      square_image?: string | null
      /** @description The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b> */
      color?: string
      readonly slug?: string
      /** @description Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []} */
      api_endpoints_to_documentation_urls?: {
        [key: string]: unknown
      }
      /** @description Setup guide URL for third party webhook creation. Exposed in Merge Docs. */
      webhook_setup_guide_url?: string | null
      /** @description Category or categories this integration is in beta status for. */
      readonly category_beta_status?: Record<string, never>
    }
    /** @description # The Account Object
     *     ### Description
     *     An `Account` represents a category in a company’s ledger in which a financial transaction is recorded against. The aggregation of each `Account` object is often referred to as the **Chart of Accounts**.
     *
     *     An `Account` can be classified into one of the following categories, determined through the `classification` field:
     *     * __Asset:__ Accounts Receivable and Bank Accounts
     *     * __Liability:__ Accounts Payable and Credit Card Accounts
     *     * __Equity:__ Treasury Accounts and Retained Earnings
     *     * __Revenue:__ Income and Other Income
     *     * __Expense:__ Cost of Goods Sold and Office Expenses
     *
     *     ### Usage Example
     *     Fetch from the `LIST Accounts` endpoint and view a company's accounts. */
    AccountRequest: {
      /**
       * @description The account's name.
       * @example Cash
       */
      name?: string | null
      /**
       * @description The account's description.
       * @example Cash
       */
      description?: string | null
      /**
       * @description The account's broadest grouping.
       *
       *     * `ASSET` - ASSET
       *     * `EQUITY` - EQUITY
       *     * `EXPENSE` - EXPENSE
       *     * `LIABILITY` - LIABILITY
       *     * `REVENUE` - REVENUE
       * @example ASSET
       */
      classification?: components['schemas']['ClassificationEnum'] | null
      /**
       * @description The account's type is a narrower and more specific grouping within the account's classification.
       * @example Asset
       */
      type?: string | null
      /**
       * @description Normalized account type- which is a narrower and more specific grouping within the account's classification.
       *
       *     * `BANK` - BANK
       *     * `CREDIT_CARD` - CREDIT_CARD
       *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
       *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
       *     * `FIXED_ASSET` - FIXED_ASSET
       *     * `OTHER_ASSET` - OTHER_ASSET
       *     * `OTHER_CURRENT_ASSET` - OTHER_CURRENT_ASSET
       *     * `OTHER_EXPENSE` - OTHER_EXPENSE
       *     * `OTHER_INCOME` - OTHER_INCOME
       *     * `COST_OF_GOODS_SOLD` - COST_OF_GOODS_SOLD
       *     * `OTHER_CURRENT_LIABILITY` - OTHER_CURRENT_LIABILITY
       *     * `LONG_TERM_LIABILITY` - LONG_TERM_LIABILITY
       *     * `NON_POSTING` - NON_POSTING
       * @example FIXED_ASSET
       */
      account_type?: components['schemas']['AccountAccountTypeEnum'] | null
      /**
       * @description The account's status.
       *
       *     * `ACTIVE` - ACTIVE
       *     * `PENDING` - PENDING
       *     * `INACTIVE` - INACTIVE
       * @example ACTIVE
       */
      status?: components['schemas']['AccountStatusEnum'] | null
      /**
       * Format: double
       * @description The account's current balance.
       */
      current_balance?: number | null
      /**
       * @description The account's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * @description The account's number.
       * @example X12Y9AB
       */
      account_number?: string | null
      /**
       * Format: uuid
       * @description ID of the parent account.
       * @example 22d92d6c-22f9-11ed-861d-0242ac120002
       */
      parent_account?: string | null
      /**
       * Format: uuid
       * @description The company the account belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    AccountResponse: {
      model: components['schemas']['Account']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /**
     * @description * `ACTIVE` - ACTIVE
     *     * `PENDING` - PENDING
     *     * `INACTIVE` - INACTIVE
     * @enum {string}
     */
    AccountStatusEnum: 'ACTIVE' | 'PENDING' | 'INACTIVE'
    AccountToken: {
      /** @example T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB */
      account_token: string
      /** @example {
       *       "name": "SAP SuccessFactors",
       *       "categories": [
       *         "hris",
       *         "ats"
       *       ],
       *       "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
       *       "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
       *       "color": "#F6A704",
       *       "slug": "sap-successfactors"
       *     } */
      integration: components['schemas']['AccountIntegration']
    }
    /** @description # The Accounting Attachment Object
     *     ### Description
     *     The `AccountingAttachment` object is used to represent a company's attachments.
     *
     *     ### Usage Example
     *     Fetch from the `LIST AccountingAttachments` endpoint and view a company's attachments. */
    AccountingAttachment: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 1018270
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The attachment's name.
       * @example invoice.png
       */
      file_name?: string | null
      /**
       * Format: uri
       * @description The attachment's url.
       * @example https://merge-brand.s3.amazonaws.com/20210315/rect-logo-270x80%402x.png
       */
      file_url?: string | null
      /**
       * Format: uuid
       * @description The company the accounting attachment belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    AccountingAttachmentEndpointRequest: {
      model: components['schemas']['AccountingAttachmentRequest']
    }
    /** @description # The Accounting Attachment Object
     *     ### Description
     *     The `AccountingAttachment` object is used to represent a company's attachments.
     *
     *     ### Usage Example
     *     Fetch from the `LIST AccountingAttachments` endpoint and view a company's attachments. */
    AccountingAttachmentRequest: {
      /**
       * @description The attachment's name.
       * @example invoice.png
       */
      file_name?: string | null
      /**
       * Format: uri
       * @description The attachment's url.
       * @example https://merge-brand.s3.amazonaws.com/20210315/rect-logo-270x80%402x.png
       */
      file_url?: string | null
      /**
       * Format: uuid
       * @description The company the accounting attachment belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    AccountingAttachmentResponse: {
      model: components['schemas']['AccountingAttachment']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /** @description # The AccountingPeriod Object
     *     ### Description
     *     The `AccountingPeriod` object is used to define a period of time in which events occurred.
     *
     *     ### Usage Example
     *     Common models like `Invoice` and `Transaction` will have `AccountingPeriod` objects which will denote when they occurred. */
    AccountingPeriod: {
      /**
       * Format: uuid
       * @example 3015f7b1-4d01-460d-bfab-02a52d16cbd0
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 2804580
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description Name of the accounting period.
       * @example April 2020 Financials
       */
      name?: string | null
      /** @example ACTIVE */
      status?: components['schemas']['Status895Enum'] | null
      /**
       * Format: date-time
       * @description Beginning date of the period
       * @example 2020-03-31T00:00:00Z
       */
      start_date?: string | null
      /**
       * Format: date-time
       * @description End date of the period
       * @example 2020-04-31T00:00:00Z
       */
      end_date?: string | null
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /** @description # The AccountingPhoneNumber Object
     *     ### Description
     *     The `AccountingPhoneNumber` object is used to represent a contact's or company's phone number.
     *
     *     ### Usage Example
     *     Fetch from the `GET CompanyInfo` endpoint and view the company's phone numbers. */
    AccountingPhoneNumber: {
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The phone number.
       * @example +3198675309
       */
      number?: string | null
      /**
       * @description The phone number's type.
       * @example Mobile
       */
      type?: string | null
    }
    /** @description # The AccountingPhoneNumber Object
     *     ### Description
     *     The `AccountingPhoneNumber` object is used to represent a contact's or company's phone number.
     *
     *     ### Usage Example
     *     Fetch from the `GET CompanyInfo` endpoint and view the company's phone numbers. */
    AccountingPhoneNumberRequest: {
      /**
       * @description The phone number.
       * @example +3198675309
       */
      number?: string | null
      /**
       * @description The phone number's type.
       * @example Mobile
       */
      type?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    /** @description # The Address Object
     *     ### Description
     *     The `Address` object is used to represent a contact's or company's address.
     *
     *     ### Usage Example
     *     Fetch from the `GET CompanyInfo` endpoint and view the company's addresses. */
    Address: {
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The address type.
       *
       *     * `BILLING` - BILLING
       *     * `SHIPPING` - SHIPPING
       * @example SHIPPING
       */
      type?: components['schemas']['AddressTypeEnum'] | null
      /**
       * @description Line 1 of the address's street.
       * @example 2920 Broadway
       */
      street_1?: string | null
      /**
       * @description Line 2 of the address's street.
       * @example 2nd Floor
       */
      street_2?: string | null
      /**
       * @description The address's city.
       * @example New York
       */
      city?: string | null
      /**
       * @description The address's state or region.
       * @example NY
       */
      readonly state?: unknown
      /**
       * @description The address's state or region.
       * @example NY
       */
      country_subdivision?: string | null
      /**
       * @description The address's country.
       *
       *     * `AF` - Afghanistan
       *     * `AX` - Åland Islands
       *     * `AL` - Albania
       *     * `DZ` - Algeria
       *     * `AS` - American Samoa
       *     * `AD` - Andorra
       *     * `AO` - Angola
       *     * `AI` - Anguilla
       *     * `AQ` - Antarctica
       *     * `AG` - Antigua and Barbuda
       *     * `AR` - Argentina
       *     * `AM` - Armenia
       *     * `AW` - Aruba
       *     * `AU` - Australia
       *     * `AT` - Austria
       *     * `AZ` - Azerbaijan
       *     * `BS` - Bahamas
       *     * `BH` - Bahrain
       *     * `BD` - Bangladesh
       *     * `BB` - Barbados
       *     * `BY` - Belarus
       *     * `BE` - Belgium
       *     * `BZ` - Belize
       *     * `BJ` - Benin
       *     * `BM` - Bermuda
       *     * `BT` - Bhutan
       *     * `BO` - Bolivia
       *     * `BQ` - Bonaire, Sint Eustatius and Saba
       *     * `BA` - Bosnia and Herzegovina
       *     * `BW` - Botswana
       *     * `BV` - Bouvet Island
       *     * `BR` - Brazil
       *     * `IO` - British Indian Ocean Territory
       *     * `BN` - Brunei
       *     * `BG` - Bulgaria
       *     * `BF` - Burkina Faso
       *     * `BI` - Burundi
       *     * `CV` - Cabo Verde
       *     * `KH` - Cambodia
       *     * `CM` - Cameroon
       *     * `CA` - Canada
       *     * `KY` - Cayman Islands
       *     * `CF` - Central African Republic
       *     * `TD` - Chad
       *     * `CL` - Chile
       *     * `CN` - China
       *     * `CX` - Christmas Island
       *     * `CC` - Cocos (Keeling) Islands
       *     * `CO` - Colombia
       *     * `KM` - Comoros
       *     * `CG` - Congo
       *     * `CD` - Congo (the Democratic Republic of the)
       *     * `CK` - Cook Islands
       *     * `CR` - Costa Rica
       *     * `CI` - Côte d'Ivoire
       *     * `HR` - Croatia
       *     * `CU` - Cuba
       *     * `CW` - Curaçao
       *     * `CY` - Cyprus
       *     * `CZ` - Czechia
       *     * `DK` - Denmark
       *     * `DJ` - Djibouti
       *     * `DM` - Dominica
       *     * `DO` - Dominican Republic
       *     * `EC` - Ecuador
       *     * `EG` - Egypt
       *     * `SV` - El Salvador
       *     * `GQ` - Equatorial Guinea
       *     * `ER` - Eritrea
       *     * `EE` - Estonia
       *     * `SZ` - Eswatini
       *     * `ET` - Ethiopia
       *     * `FK` - Falkland Islands (Malvinas)
       *     * `FO` - Faroe Islands
       *     * `FJ` - Fiji
       *     * `FI` - Finland
       *     * `FR` - France
       *     * `GF` - French Guiana
       *     * `PF` - French Polynesia
       *     * `TF` - French Southern Territories
       *     * `GA` - Gabon
       *     * `GM` - Gambia
       *     * `GE` - Georgia
       *     * `DE` - Germany
       *     * `GH` - Ghana
       *     * `GI` - Gibraltar
       *     * `GR` - Greece
       *     * `GL` - Greenland
       *     * `GD` - Grenada
       *     * `GP` - Guadeloupe
       *     * `GU` - Guam
       *     * `GT` - Guatemala
       *     * `GG` - Guernsey
       *     * `GN` - Guinea
       *     * `GW` - Guinea-Bissau
       *     * `GY` - Guyana
       *     * `HT` - Haiti
       *     * `HM` - Heard Island and McDonald Islands
       *     * `VA` - Holy See
       *     * `HN` - Honduras
       *     * `HK` - Hong Kong
       *     * `HU` - Hungary
       *     * `IS` - Iceland
       *     * `IN` - India
       *     * `ID` - Indonesia
       *     * `IR` - Iran
       *     * `IQ` - Iraq
       *     * `IE` - Ireland
       *     * `IM` - Isle of Man
       *     * `IL` - Israel
       *     * `IT` - Italy
       *     * `JM` - Jamaica
       *     * `JP` - Japan
       *     * `JE` - Jersey
       *     * `JO` - Jordan
       *     * `KZ` - Kazakhstan
       *     * `KE` - Kenya
       *     * `KI` - Kiribati
       *     * `KW` - Kuwait
       *     * `KG` - Kyrgyzstan
       *     * `LA` - Laos
       *     * `LV` - Latvia
       *     * `LB` - Lebanon
       *     * `LS` - Lesotho
       *     * `LR` - Liberia
       *     * `LY` - Libya
       *     * `LI` - Liechtenstein
       *     * `LT` - Lithuania
       *     * `LU` - Luxembourg
       *     * `MO` - Macao
       *     * `MG` - Madagascar
       *     * `MW` - Malawi
       *     * `MY` - Malaysia
       *     * `MV` - Maldives
       *     * `ML` - Mali
       *     * `MT` - Malta
       *     * `MH` - Marshall Islands
       *     * `MQ` - Martinique
       *     * `MR` - Mauritania
       *     * `MU` - Mauritius
       *     * `YT` - Mayotte
       *     * `MX` - Mexico
       *     * `FM` - Micronesia (Federated States of)
       *     * `MD` - Moldova
       *     * `MC` - Monaco
       *     * `MN` - Mongolia
       *     * `ME` - Montenegro
       *     * `MS` - Montserrat
       *     * `MA` - Morocco
       *     * `MZ` - Mozambique
       *     * `MM` - Myanmar
       *     * `NA` - Namibia
       *     * `NR` - Nauru
       *     * `NP` - Nepal
       *     * `NL` - Netherlands
       *     * `NC` - New Caledonia
       *     * `NZ` - New Zealand
       *     * `NI` - Nicaragua
       *     * `NE` - Niger
       *     * `NG` - Nigeria
       *     * `NU` - Niue
       *     * `NF` - Norfolk Island
       *     * `KP` - North Korea
       *     * `MK` - North Macedonia
       *     * `MP` - Northern Mariana Islands
       *     * `NO` - Norway
       *     * `OM` - Oman
       *     * `PK` - Pakistan
       *     * `PW` - Palau
       *     * `PS` - Palestine, State of
       *     * `PA` - Panama
       *     * `PG` - Papua New Guinea
       *     * `PY` - Paraguay
       *     * `PE` - Peru
       *     * `PH` - Philippines
       *     * `PN` - Pitcairn
       *     * `PL` - Poland
       *     * `PT` - Portugal
       *     * `PR` - Puerto Rico
       *     * `QA` - Qatar
       *     * `RE` - Réunion
       *     * `RO` - Romania
       *     * `RU` - Russia
       *     * `RW` - Rwanda
       *     * `BL` - Saint Barthélemy
       *     * `SH` - Saint Helena, Ascension and Tristan da Cunha
       *     * `KN` - Saint Kitts and Nevis
       *     * `LC` - Saint Lucia
       *     * `MF` - Saint Martin (French part)
       *     * `PM` - Saint Pierre and Miquelon
       *     * `VC` - Saint Vincent and the Grenadines
       *     * `WS` - Samoa
       *     * `SM` - San Marino
       *     * `ST` - Sao Tome and Principe
       *     * `SA` - Saudi Arabia
       *     * `SN` - Senegal
       *     * `RS` - Serbia
       *     * `SC` - Seychelles
       *     * `SL` - Sierra Leone
       *     * `SG` - Singapore
       *     * `SX` - Sint Maarten (Dutch part)
       *     * `SK` - Slovakia
       *     * `SI` - Slovenia
       *     * `SB` - Solomon Islands
       *     * `SO` - Somalia
       *     * `ZA` - South Africa
       *     * `GS` - South Georgia and the South Sandwich Islands
       *     * `KR` - South Korea
       *     * `SS` - South Sudan
       *     * `ES` - Spain
       *     * `LK` - Sri Lanka
       *     * `SD` - Sudan
       *     * `SR` - Suriname
       *     * `SJ` - Svalbard and Jan Mayen
       *     * `SE` - Sweden
       *     * `CH` - Switzerland
       *     * `SY` - Syria
       *     * `TW` - Taiwan
       *     * `TJ` - Tajikistan
       *     * `TZ` - Tanzania
       *     * `TH` - Thailand
       *     * `TL` - Timor-Leste
       *     * `TG` - Togo
       *     * `TK` - Tokelau
       *     * `TO` - Tonga
       *     * `TT` - Trinidad and Tobago
       *     * `TN` - Tunisia
       *     * `TR` - Turkey
       *     * `TM` - Turkmenistan
       *     * `TC` - Turks and Caicos Islands
       *     * `TV` - Tuvalu
       *     * `UG` - Uganda
       *     * `UA` - Ukraine
       *     * `AE` - United Arab Emirates
       *     * `GB` - United Kingdom
       *     * `UM` - United States Minor Outlying Islands
       *     * `US` - United States of America
       *     * `UY` - Uruguay
       *     * `UZ` - Uzbekistan
       *     * `VU` - Vanuatu
       *     * `VE` - Venezuela
       *     * `VN` - Vietnam
       *     * `VG` - Virgin Islands (British)
       *     * `VI` - Virgin Islands (U.S.)
       *     * `WF` - Wallis and Futuna
       *     * `EH` - Western Sahara
       *     * `YE` - Yemen
       *     * `ZM` - Zambia
       *     * `ZW` - Zimbabwe
       * @example US
       */
      country?: components['schemas']['CountryEnum'] | null
      /**
       * @description The address's zip code.
       * @example 10027
       */
      zip_code?: string | null
    }
    /** @description # The Address Object
     *     ### Description
     *     The `Address` object is used to represent a contact's or company's address.
     *
     *     ### Usage Example
     *     Fetch from the `GET CompanyInfo` endpoint and view the company's addresses. */
    AddressRequest: {
      /**
       * @description The address type.
       *
       *     * `BILLING` - BILLING
       *     * `SHIPPING` - SHIPPING
       * @example SHIPPING
       */
      type?: components['schemas']['AddressTypeEnum'] | null
      /**
       * @description Line 1 of the address's street.
       * @example 2920 Broadway
       */
      street_1?: string | null
      /**
       * @description Line 2 of the address's street.
       * @example 2nd Floor
       */
      street_2?: string | null
      /**
       * @description The address's city.
       * @example New York
       */
      city?: string | null
      /**
       * @description The address's state or region.
       * @example NY
       */
      country_subdivision?: string | null
      /**
       * @description The address's country.
       *
       *     * `AF` - Afghanistan
       *     * `AX` - Åland Islands
       *     * `AL` - Albania
       *     * `DZ` - Algeria
       *     * `AS` - American Samoa
       *     * `AD` - Andorra
       *     * `AO` - Angola
       *     * `AI` - Anguilla
       *     * `AQ` - Antarctica
       *     * `AG` - Antigua and Barbuda
       *     * `AR` - Argentina
       *     * `AM` - Armenia
       *     * `AW` - Aruba
       *     * `AU` - Australia
       *     * `AT` - Austria
       *     * `AZ` - Azerbaijan
       *     * `BS` - Bahamas
       *     * `BH` - Bahrain
       *     * `BD` - Bangladesh
       *     * `BB` - Barbados
       *     * `BY` - Belarus
       *     * `BE` - Belgium
       *     * `BZ` - Belize
       *     * `BJ` - Benin
       *     * `BM` - Bermuda
       *     * `BT` - Bhutan
       *     * `BO` - Bolivia
       *     * `BQ` - Bonaire, Sint Eustatius and Saba
       *     * `BA` - Bosnia and Herzegovina
       *     * `BW` - Botswana
       *     * `BV` - Bouvet Island
       *     * `BR` - Brazil
       *     * `IO` - British Indian Ocean Territory
       *     * `BN` - Brunei
       *     * `BG` - Bulgaria
       *     * `BF` - Burkina Faso
       *     * `BI` - Burundi
       *     * `CV` - Cabo Verde
       *     * `KH` - Cambodia
       *     * `CM` - Cameroon
       *     * `CA` - Canada
       *     * `KY` - Cayman Islands
       *     * `CF` - Central African Republic
       *     * `TD` - Chad
       *     * `CL` - Chile
       *     * `CN` - China
       *     * `CX` - Christmas Island
       *     * `CC` - Cocos (Keeling) Islands
       *     * `CO` - Colombia
       *     * `KM` - Comoros
       *     * `CG` - Congo
       *     * `CD` - Congo (the Democratic Republic of the)
       *     * `CK` - Cook Islands
       *     * `CR` - Costa Rica
       *     * `CI` - Côte d'Ivoire
       *     * `HR` - Croatia
       *     * `CU` - Cuba
       *     * `CW` - Curaçao
       *     * `CY` - Cyprus
       *     * `CZ` - Czechia
       *     * `DK` - Denmark
       *     * `DJ` - Djibouti
       *     * `DM` - Dominica
       *     * `DO` - Dominican Republic
       *     * `EC` - Ecuador
       *     * `EG` - Egypt
       *     * `SV` - El Salvador
       *     * `GQ` - Equatorial Guinea
       *     * `ER` - Eritrea
       *     * `EE` - Estonia
       *     * `SZ` - Eswatini
       *     * `ET` - Ethiopia
       *     * `FK` - Falkland Islands (Malvinas)
       *     * `FO` - Faroe Islands
       *     * `FJ` - Fiji
       *     * `FI` - Finland
       *     * `FR` - France
       *     * `GF` - French Guiana
       *     * `PF` - French Polynesia
       *     * `TF` - French Southern Territories
       *     * `GA` - Gabon
       *     * `GM` - Gambia
       *     * `GE` - Georgia
       *     * `DE` - Germany
       *     * `GH` - Ghana
       *     * `GI` - Gibraltar
       *     * `GR` - Greece
       *     * `GL` - Greenland
       *     * `GD` - Grenada
       *     * `GP` - Guadeloupe
       *     * `GU` - Guam
       *     * `GT` - Guatemala
       *     * `GG` - Guernsey
       *     * `GN` - Guinea
       *     * `GW` - Guinea-Bissau
       *     * `GY` - Guyana
       *     * `HT` - Haiti
       *     * `HM` - Heard Island and McDonald Islands
       *     * `VA` - Holy See
       *     * `HN` - Honduras
       *     * `HK` - Hong Kong
       *     * `HU` - Hungary
       *     * `IS` - Iceland
       *     * `IN` - India
       *     * `ID` - Indonesia
       *     * `IR` - Iran
       *     * `IQ` - Iraq
       *     * `IE` - Ireland
       *     * `IM` - Isle of Man
       *     * `IL` - Israel
       *     * `IT` - Italy
       *     * `JM` - Jamaica
       *     * `JP` - Japan
       *     * `JE` - Jersey
       *     * `JO` - Jordan
       *     * `KZ` - Kazakhstan
       *     * `KE` - Kenya
       *     * `KI` - Kiribati
       *     * `KW` - Kuwait
       *     * `KG` - Kyrgyzstan
       *     * `LA` - Laos
       *     * `LV` - Latvia
       *     * `LB` - Lebanon
       *     * `LS` - Lesotho
       *     * `LR` - Liberia
       *     * `LY` - Libya
       *     * `LI` - Liechtenstein
       *     * `LT` - Lithuania
       *     * `LU` - Luxembourg
       *     * `MO` - Macao
       *     * `MG` - Madagascar
       *     * `MW` - Malawi
       *     * `MY` - Malaysia
       *     * `MV` - Maldives
       *     * `ML` - Mali
       *     * `MT` - Malta
       *     * `MH` - Marshall Islands
       *     * `MQ` - Martinique
       *     * `MR` - Mauritania
       *     * `MU` - Mauritius
       *     * `YT` - Mayotte
       *     * `MX` - Mexico
       *     * `FM` - Micronesia (Federated States of)
       *     * `MD` - Moldova
       *     * `MC` - Monaco
       *     * `MN` - Mongolia
       *     * `ME` - Montenegro
       *     * `MS` - Montserrat
       *     * `MA` - Morocco
       *     * `MZ` - Mozambique
       *     * `MM` - Myanmar
       *     * `NA` - Namibia
       *     * `NR` - Nauru
       *     * `NP` - Nepal
       *     * `NL` - Netherlands
       *     * `NC` - New Caledonia
       *     * `NZ` - New Zealand
       *     * `NI` - Nicaragua
       *     * `NE` - Niger
       *     * `NG` - Nigeria
       *     * `NU` - Niue
       *     * `NF` - Norfolk Island
       *     * `KP` - North Korea
       *     * `MK` - North Macedonia
       *     * `MP` - Northern Mariana Islands
       *     * `NO` - Norway
       *     * `OM` - Oman
       *     * `PK` - Pakistan
       *     * `PW` - Palau
       *     * `PS` - Palestine, State of
       *     * `PA` - Panama
       *     * `PG` - Papua New Guinea
       *     * `PY` - Paraguay
       *     * `PE` - Peru
       *     * `PH` - Philippines
       *     * `PN` - Pitcairn
       *     * `PL` - Poland
       *     * `PT` - Portugal
       *     * `PR` - Puerto Rico
       *     * `QA` - Qatar
       *     * `RE` - Réunion
       *     * `RO` - Romania
       *     * `RU` - Russia
       *     * `RW` - Rwanda
       *     * `BL` - Saint Barthélemy
       *     * `SH` - Saint Helena, Ascension and Tristan da Cunha
       *     * `KN` - Saint Kitts and Nevis
       *     * `LC` - Saint Lucia
       *     * `MF` - Saint Martin (French part)
       *     * `PM` - Saint Pierre and Miquelon
       *     * `VC` - Saint Vincent and the Grenadines
       *     * `WS` - Samoa
       *     * `SM` - San Marino
       *     * `ST` - Sao Tome and Principe
       *     * `SA` - Saudi Arabia
       *     * `SN` - Senegal
       *     * `RS` - Serbia
       *     * `SC` - Seychelles
       *     * `SL` - Sierra Leone
       *     * `SG` - Singapore
       *     * `SX` - Sint Maarten (Dutch part)
       *     * `SK` - Slovakia
       *     * `SI` - Slovenia
       *     * `SB` - Solomon Islands
       *     * `SO` - Somalia
       *     * `ZA` - South Africa
       *     * `GS` - South Georgia and the South Sandwich Islands
       *     * `KR` - South Korea
       *     * `SS` - South Sudan
       *     * `ES` - Spain
       *     * `LK` - Sri Lanka
       *     * `SD` - Sudan
       *     * `SR` - Suriname
       *     * `SJ` - Svalbard and Jan Mayen
       *     * `SE` - Sweden
       *     * `CH` - Switzerland
       *     * `SY` - Syria
       *     * `TW` - Taiwan
       *     * `TJ` - Tajikistan
       *     * `TZ` - Tanzania
       *     * `TH` - Thailand
       *     * `TL` - Timor-Leste
       *     * `TG` - Togo
       *     * `TK` - Tokelau
       *     * `TO` - Tonga
       *     * `TT` - Trinidad and Tobago
       *     * `TN` - Tunisia
       *     * `TR` - Turkey
       *     * `TM` - Turkmenistan
       *     * `TC` - Turks and Caicos Islands
       *     * `TV` - Tuvalu
       *     * `UG` - Uganda
       *     * `UA` - Ukraine
       *     * `AE` - United Arab Emirates
       *     * `GB` - United Kingdom
       *     * `UM` - United States Minor Outlying Islands
       *     * `US` - United States of America
       *     * `UY` - Uruguay
       *     * `UZ` - Uzbekistan
       *     * `VU` - Vanuatu
       *     * `VE` - Venezuela
       *     * `VN` - Vietnam
       *     * `VG` - Virgin Islands (British)
       *     * `VI` - Virgin Islands (U.S.)
       *     * `WF` - Wallis and Futuna
       *     * `EH` - Western Sahara
       *     * `YE` - Yemen
       *     * `ZM` - Zambia
       *     * `ZW` - Zimbabwe
       * @example US
       */
      country?: components['schemas']['CountryEnum'] | null
      /**
       * @description The address's zip code.
       * @example 10027
       */
      zip_code?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    /**
     * @description * `BILLING` - BILLING
     *     * `SHIPPING` - SHIPPING
     * @enum {string}
     */
    AddressTypeEnum: 'BILLING' | 'SHIPPING'
    AdvancedMetadata: {
      /** Format: uuid */
      id: string
      display_name?: string
      description?: string
      is_required?: boolean
      is_custom?: boolean
      field_choices?: unknown[]
    }
    AsyncPassthroughReciept: {
      /**
       * Format: uuid
       * @example fd29020f-2695-445e-922e-dcd5e81903fd
       */
      async_passthrough_receipt_id: string
    }
    AsyncPostTask: {
      /** @example COMPLETED */
      status: components['schemas']['AsyncPostTaskStatusEnum']
      result: components['schemas']['AsyncPostTaskResult']
    }
    AsyncPostTaskResult: {
      /** @example 201 */
      status_code?: number
      /** @example {
       *       "model": {
       *         "id": "9871b4a9-f5d2-4f3b-a66b-dfedbed42c46",
       *         "remote_id": "990110",
       *         "created_at": "2021-09-15T00:00:00Z",
       *         "modified_at": "2021-10-16T00:00:00Z",
       *         "integration_params": {
       *           "unique_integration_field": "unique_integration_field_value"
       *         },
       *         "linked_account_params": {
       *           "unique_linked_account_field": "unique_linked_account_field_value"
       *         },
       *         "field_mappings": {
       *           "organization_defined_targets": {
       *             "custom_key": "custom_value"
       *           },
       *           "linked_account_defined_targets": {
       *             "custom_key": "custom_value"
       *           }
       *         },
       *         "type": "ACCOUNTS_RECEIVABLE",
       *         "contact": "022a2bef-57e5-4def-8ed2-7c41bd9a5ed8",
       *         "number": "AIQ12546",
       *         "issue_date": "2020-03-31T00:00:00Z",
       *         "due_date": "2020-04-15T00:00:00Z",
       *         "memo": "Weekly Payment",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "employee": "7442f0d5-722d-45bd-b807-6e38489d37fe",
       *         "paid_on_date": "2020-04-01T00:00:00Z",
       *         "currency": "USD",
       *         "exchange_rate": "2.9",
       *         "status": "DRAFT",
       *         "total_discount": 0,
       *         "sub_total": 100,
       *         "total_tax_amount": 5,
       *         "total_amount": 105,
       *         "balance": 105,
       *         "inclusive_of_tax": false,
       *         "remote_updated_at": "2020-04-01T00:00:00Z",
       *         "tracking_categories": [
       *           "7dc5ca17-d311-44cd-9ce0-333080367a18",
       *           "6aa0700c-48e1-4c4a-8162-02e6a582df05",
       *           "8c933d61-8f5b-4360-ac0c-c9dc87bee763"
       *         ],
       *         "purchase_orders": [
       *           "e7378d8f-3992-4c2a-8417-ebdc4f2bfeb7",
       *           "dd70ca2f-b120-46fa-889a-9604037f45fd",
       *           "889b281d-739c-4759-95b8-0aedb3947131"
       *         ],
       *         "accounting_period": "7dc5ca17-d311-44cd-9ce0-333080367a18",
       *         "payments": [
       *           "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
       *         ],
       *         "applied_payments": [
       *           "9017594e-dc33-4113-a5d2-b0f928e34fdd"
       *         ],
       *         "line_items": [],
       *         "applied_credit_notes": [],
       *         "applied_vendor_credits": [],
       *         "remote_data": [
       *           {
       *             "path": "/actions",
       *             "data": [
       *               "Varies by platform"
       *             ]
       *           }
       *         ]
       *       }
       *     } */
      response?: {
        [key: string]: unknown
      }
    }
    /**
     * @description * `QUEUED` - QUEUED
     *     * `IN_PROGRESS` - IN_PROGRESS
     *     * `COMPLETED` - COMPLETED
     *     * `FAILURE` - FAILURE
     * @enum {string}
     */
    AsyncPostTaskStatusEnum: 'QUEUED' | 'IN_PROGRESS' | 'COMPLETED' | 'FAILURE'
    AuditLogEvent: {
      /**
       * Format: uuid
       * @example b5ceea2a-7171-47ce-8090-165cfce5572c
       */
      readonly id?: string
      /**
       * @description The User's full name at the time of this Event occurring.
       * @example Gil Feig
       */
      user_name?: string | null
      /**
       * Format: email
       * @description The User's email at the time of this Event occurring.
       * @example hello@merge.dev
       */
      user_email?: string | null
      /**
       * @description Designates the role of the user (or SYSTEM/API if action not taken by a user) at the time of this Event occurring.
       *
       *     * `ADMIN` - ADMIN
       *     * `DEVELOPER` - DEVELOPER
       *     * `MEMBER` - MEMBER
       *     * `API` - API
       *     * `SYSTEM` - SYSTEM
       *     * `MERGE_TEAM` - MERGE_TEAM
       * @example ADMIN
       */
      role: components['schemas']['RoleEnum']
      /** @example 192.0.2.123 */
      ip_address: string
      /**
       * @description Designates the type of event that occurred.
       *
       *     * `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY
       *     * `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY
       *     * `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY
       *     * `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY
       *     * `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY
       *     * `INVITED_USER` - INVITED_USER
       *     * `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED
       *     * `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED
       *     * `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT
       *     * `CREATED_DESTINATION` - CREATED_DESTINATION
       *     * `DELETED_DESTINATION` - DELETED_DESTINATION
       *     * `CHANGED_DESTINATION` - CHANGED_DESTINATION
       *     * `CHANGED_SCOPES` - CHANGED_SCOPES
       *     * `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION
       *     * `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS
       *     * `ENABLED_INTEGRATION` - ENABLED_INTEGRATION
       *     * `DISABLED_INTEGRATION` - DISABLED_INTEGRATION
       *     * `ENABLED_CATEGORY` - ENABLED_CATEGORY
       *     * `DISABLED_CATEGORY` - DISABLED_CATEGORY
       *     * `CHANGED_PASSWORD` - CHANGED_PASSWORD
       *     * `RESET_PASSWORD` - RESET_PASSWORD
       *     * `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
       *     * `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
       *     * `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
       *     * `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
       *     * `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING
       *     * `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING
       *     * `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING
       *     * `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING
       *     * `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING
       *     * `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING
       *     * `CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
       *     * `CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
       *     * `DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
       *     * `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC
       *     * `MUTED_ISSUE` - MUTED_ISSUE
       *     * `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK
       *     * `ENABLED_MERGE_WEBHOOK` - ENABLED_MERGE_WEBHOOK
       *     * `DISABLED_MERGE_WEBHOOK` - DISABLED_MERGE_WEBHOOK
       *     * `MERGE_WEBHOOK_TARGET_CHANGED` - MERGE_WEBHOOK_TARGET_CHANGED
       *     * `END_USER_CREDENTIALS_ACCESSED` - END_USER_CREDENTIALS_ACCESSED
       * @example CHANGED_SCOPES
       */
      event_type: components['schemas']['EventTypeEnum']
      /** @example Organization-wide Scopes for model hris.Employee updated from Read to Read+Write */
      event_description: string
      /** Format: date-time */
      readonly created_at?: string
    }
    /** @description # The AvailableActions Object
     *     ### Description
     *     The `Activity` object is used to see all available model/operation combinations for an integration.
     *
     *     ### Usage Example
     *     Fetch all the actions available for the `Zenefits` integration. */
    AvailableActions: {
      /** @example {
       *       "name": "Lever",
       *       "categories": [
       *         "ats"
       *       ],
       *       "image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Logo.png",
       *       "square_image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Square_Logo.png",
       *       "color": "#262A34",
       *       "is_in_beta": "true",
       *       "api_endpoints_to_documentation_urls": "{'GET': [('/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve')], 'POST': []}"
       *     } */
      integration: components['schemas']['AccountIntegration']
      /** @example true */
      passthrough_available: boolean
      /** @example [
       *       {
       *         "model_name": "Candidate",
       *         "available_operations": [
       *           "FETCH",
       *           "CREATE"
       *         ],
       *         "required_post_parameters": [
       *           "remote_user_id"
       *         ],
       *         "supported_fields": [
       *           "first_name",
       *           "last_name",
       *           "company",
       *           "title"
       *         ]
       *       }
       *     ] */
      available_model_operations?: components['schemas']['ModelOperation'][]
    }
    /** @description # The BalanceSheet Object
     *     ### Description
     *     The `BalanceSheet` object shows a company’s assets, liabilities, and equity. Assets should be equal to liability and equity combined. This shows the company’s financial health at a specific point in time.
     *
     *     ### Usage Example
     *     Fetch from the `LIST BalanceSheets` endpoint and view a company's balance sheets. */
    BalanceSheet: {
      /**
       * Format: uuid
       * @example 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 8937018
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The balance sheet's name.
       * @example BalanceSheet
       */
      name?: string | null
      /**
       * @description The balance sheet's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description `Company` object for the given `BalanceSheet` object.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: date-time
       * @description The balance sheet's date. The balance sheet data will reflect the company's financial position this point in time.
       * @example 2021-09-31T00:00:00Z
       */
      date?: string | null
      /**
       * Format: double
       * @description The balance sheet's net assets.
       * @example 1000
       */
      net_assets?: number | null
      /** @example [
       *       {
       *         "remote_id": "10010",
       *         "name": "Assets",
       *         "value": 1000,
       *         "sub_items": []
       *       }
       *     ] */
      readonly assets?: components['schemas']['ReportItem'][]
      /** @example [
       *       {
       *         "remote_id": "10011",
       *         "name": "Liabilities",
       *         "value": 500,
       *         "sub_items": []
       *       }
       *     ] */
      readonly liabilities?: components['schemas']['ReportItem'][]
      /** @example [
       *       {
       *         "remote_id": "10012",
       *         "name": "Equity",
       *         "value": 500,
       *         "sub_items": []
       *       }
       *     ] */
      readonly equity?: components['schemas']['ReportItem'][]
      /**
       * Format: date-time
       * @description The time that balance sheet was generated by the accounting system.
       * @example 2021-10-01T00:00:00Z
       */
      remote_generated_at?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /** @description # The BankFeedAccount Object
     *     ### Description
     *     The `BankFeedAccount` object represents a bank feed account, detailing various attributes including account identifiers, names, currency, and balance information. This object is central to managing and tracking bank feed accounts within the system.
     *
     *     ### Usage Example
     *     Fetch from the `GET BankFeedAccount` endpoint to view details of a bank feed account. */
    BankFeedAccount: {
      /**
       * Format: uuid
       * @example b26fd49a-cbae-470a-a8f8-bcbc119e0390
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 987300
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The unique identifier of the source account from our customer’s platform.
       * @example 123566909
       */
      source_account_id?: string | null
      /**
       * @description The unique identifier of the target account from the third party software.
       * @example 49cd5a42-b311-4750-9361-52e2ed1d4653
       */
      target_account_id?: string | null
      /**
       * @description The name of the source account as stored in our customer’s platform.
       * @example Travel Bank Account
       */
      source_account_name?: string | null
      /**
       * @description The human-readable account number of the source account as stored in our customer’s platform.
       * @example 12567
       */
      source_account_number?: string | null
      /**
       * @description The name of the target account from the third party software.
       * @example Netsuite Travel Bank Account
       */
      target_account_name?: string | null
      /**
       * @description The currency code of the bank feed.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * @description The status of the bank feed.
       *
       *     * `ACTIVE` - ACTIVE
       *     * `INACTIVE` - INACTIVE
       * @example ACTIVE
       */
      feed_status?: components['schemas']['FeedStatusEnum'] | null
      /**
       * Format: date-time
       * @description The start date of the bank feed’s transactions.
       * @example 2024-02-02T00:00:00.000Z
       */
      feed_start_date?: string | null
      /**
       * Format: double
       * @description The current balance of funds in the source account.
       * @example 123.94
       */
      source_account_balance?: number | null
      /**
       * @description The type of the account.
       *
       *     * `BANK` - BANK
       *     * `CREDIT_CARD` - CREDIT_CARD
       * @example BANK
       */
      account_type?:
        | components['schemas']['BankFeedAccountAccountTypeEnum']
        | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      remote_data?:
        | ({
            [key: string]: unknown
          } | null)[]
        | null
    }
    /**
     * @description * `BANK` - BANK
     *     * `CREDIT_CARD` - CREDIT_CARD
     * @enum {string}
     */
    BankFeedAccountAccountTypeEnum: 'BANK' | 'CREDIT_CARD'
    BankFeedAccountEndpointRequest: {
      model: components['schemas']['BankFeedAccountRequest']
    }
    /** @description # The BankFeedAccount Object
     *     ### Description
     *     The `BankFeedAccount` object represents a bank feed account, detailing various attributes including account identifiers, names, currency, and balance information. This object is central to managing and tracking bank feed accounts within the system.
     *
     *     ### Usage Example
     *     Fetch from the `GET BankFeedAccount` endpoint to view details of a bank feed account. */
    BankFeedAccountRequest: {
      /**
       * @description The unique identifier of the source account from our customer’s platform.
       * @example 123566909
       */
      source_account_id?: string | null
      /**
       * @description The unique identifier of the target account from the third party software.
       * @example 49cd5a42-b311-4750-9361-52e2ed1d4653
       */
      target_account_id?: string | null
      /**
       * @description The name of the source account as stored in our customer’s platform.
       * @example Travel Bank Account
       */
      source_account_name?: string | null
      /**
       * @description The human-readable account number of the source account as stored in our customer’s platform.
       * @example 12567
       */
      source_account_number?: string | null
      /**
       * @description The name of the target account from the third party software.
       * @example Netsuite Travel Bank Account
       */
      target_account_name?: string | null
      /**
       * @description The currency code of the bank feed.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * @description The status of the bank feed.
       *
       *     * `ACTIVE` - ACTIVE
       *     * `INACTIVE` - INACTIVE
       * @example ACTIVE
       */
      feed_status?: components['schemas']['FeedStatusEnum'] | null
      /**
       * Format: date-time
       * @description The start date of the bank feed’s transactions.
       * @example 2024-02-02T00:00:00.000Z
       */
      feed_start_date?: string | null
      /**
       * Format: double
       * @description The current balance of funds in the source account.
       * @example 123.94
       */
      source_account_balance?: number | null
      /**
       * @description The type of the account.
       *
       *     * `BANK` - BANK
       *     * `CREDIT_CARD` - CREDIT_CARD
       * @example BANK
       */
      account_type?:
        | components['schemas']['BankFeedAccountAccountTypeEnum']
        | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    BankFeedAccountResponse: {
      model: components['schemas']['BankFeedAccount']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /** @description # The BankFeedTransaction Object
     *     ### Description
     *     The `BankFeedTransaction` object is used to represent transactions linked to a bank feed account. This includes details about the transaction such as the date, amount, description, and type.
     *
     *     ### Usage Example
     *     Fetch from the `GET BankFeedTransaction` endpoint to view details of a transaction associated with a bank feed account. */
    BankFeedTransaction: {
      /**
       * Format: uuid
       * @example b26fd49a-cbae-470a-a8f8-bcbc119e0390
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 987300
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @description The bank feed account associated with the transaction.
       * @example 49cd5a42-b311-4750-9361-52e2ed1d4653
       */
      bank_feed_account?: string | null
      /**
       * Format: date-time
       * @description The date that the transaction occurred.
       * @example 2024-02-02T00:00:00.000Z
       */
      transaction_date?: string | null
      /**
       * Format: date-time
       * @description The date the transaction was posted to the bank account.
       * @example 2024-02-03T00:00:00.000Z
       */
      posted_date?: string | null
      /**
       * Format: double
       * @description The amount of the transaction.
       * @example 100.1
       */
      amount?: number | null
      /**
       * @description The description of the transaction.
       * @example Lunch expense
       */
      description?: string | null
      /**
       * @description The underlying type of the transaction.
       * @example payment
       */
      transaction_type?: string | null
      /**
       * @description The person or merchant who initiated the transaction, or alternatively, to whom the transaction was paid.
       * @example Elmo's diner
       */
      payee?: string | null
      /**
       * @description If the transaction is of type debit or credit.
       *
       *     * `CREDIT` - CREDIT
       *     * `DEBIT` - DEBIT
       * @example CREDIT
       */
      credit_or_debit?: components['schemas']['CreditOrDebitEnum'] | null
      /**
       * @description The customer’s identifier for the transaction.
       * @example 124569
       */
      source_transaction_id?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @description Whether or not this transaction has been processed by the external system. For example, NetSuite writes this field as True when the SuiteApp has processed the transaction. */
      readonly is_processed?: boolean
    }
    BankFeedTransactionEndpointRequest: {
      model: components['schemas']['BankFeedTransactionRequestRequest']
    }
    /** @description # The BankFeedTransaction Object
     *     ### Description
     *     The `BankFeedTransaction` object is used to represent transactions linked to a bank feed account. This includes details about the transaction such as the date, amount, description, and type.
     *
     *     ### Usage Example
     *     Fetch from the `GET BankFeedTransaction` endpoint to view details of a transaction associated with a bank feed account. */
    BankFeedTransactionRequestRequest: {
      /**
       * Format: uuid
       * @description The bank feed account associated with the transaction.
       * @example 49cd5a42-b311-4750-9361-52e2ed1d4653
       */
      bank_feed_account: string | null
      /**
       * Format: date-time
       * @description The date that the transaction occurred.
       * @example 2024-02-02T00:00:00.000Z
       */
      transaction_date?: string | null
      /**
       * Format: date-time
       * @description The date the transaction was posted to the bank account.
       * @example 2024-02-03T00:00:00.000Z
       */
      posted_date?: string | null
      /**
       * Format: double
       * @description The amount of the transaction.
       * @example 100.1
       */
      amount?: number | null
      /**
       * @description The description of the transaction.
       * @example Lunch expense
       */
      description?: string | null
      /**
       * @description The underlying type of the transaction.
       * @example payment
       */
      transaction_type?: string | null
      /**
       * @description The person or merchant who initiated the transaction, or alternatively, to whom the transaction was paid.
       * @example Elmo's diner
       */
      payee?: string | null
      /**
       * @description If the transaction is of type debit or credit.
       *
       *     * `CREDIT` - CREDIT
       *     * `DEBIT` - DEBIT
       * @example CREDIT
       */
      credit_or_debit?: components['schemas']['CreditOrDebitEnum'] | null
      /**
       * @description The customer’s identifier for the transaction.
       * @example 124569
       */
      source_transaction_id?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    BankFeedTransactionResponse: {
      model: components['schemas']['BankFeedTransaction']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /** @description # The CashFlowStatement Object
     *     ### Description
     *     The `CashFlowStatement` object shows operating activities, investing activities, and financing activities over a period of time (month, quarter, or year).
     *
     *     ### Usage Example
     *     Fetch from the `LIST CashFlowStatements` endpoint and view a company's cash flow statements. */
    CashFlowStatement: {
      /**
       * Format: uuid
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 8211088
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The cash flow statement's name.
       * @example CashFlow
       */
      name?: string | null
      /**
       * @description The cash flow statement's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description The company the cash flow statement belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: date-time
       * @description The cash flow statement's start period.
       * @example 2020-01-01T00:00:00Z
       */
      start_period?: string | null
      /**
       * Format: date-time
       * @description The cash flow statement's end period.
       * @example 2020-03-31T00:00:00Z
       */
      end_period?: string | null
      /**
       * Format: double
       * @description Cash and cash equivalents at the beginning of the cash flow statement's period.
       * @example 5000
       */
      cash_at_beginning_of_period?: number | null
      /**
       * Format: double
       * @description Cash and cash equivalents at the beginning of the cash flow statement's period.
       * @example 4063.52
       */
      cash_at_end_of_period?: number | null
      /** @example [
       *       {
       *         "remote_id": "19202938",
       *         "created_at": "2021-09-15T00:00:00Z",
       *         "modified_at": "2021-09-18T00:00:00Z",
       *         "name": "Operating Activities",
       *         "value": 1000,
       *         "sub_items": [
       *           {
       *             "remote_id": "23042938",
       *             "created_at": "2021-09-15T00:00:00Z",
       *             "modified_at": "2021-09-18T00:00:00Z",
       *             "name": "Net Income",
       *             "value": 1097.13,
       *             "sub_items": [],
       *             "company": null
       *           }
       *         ]
       *       }
       *     ] */
      readonly operating_activities?: components['schemas']['ReportItem'][]
      /** @example [
       *       {
       *         "remote_id": "192406939",
       *         "created_at": "2021-11-15T00:00:00Z",
       *         "modified_at": "2021-11-18T00:00:00Z",
       *         "name": "Equipment",
       *         "value": 1000,
       *         "sub_items": [
       *           {
       *             "remote_id": null,
       *             "created_at": "2021-11-15T00:00:00Z",
       *             "modified_at": "2021-09-18T00:00:00Z",
       *             "name": "Equipment",
       *             "value": 1000,
       *             "sub_items": [],
       *             "company": null
       *           }
       *         ]
       *       }
       *     ] */
      readonly investing_activities?: components['schemas']['ReportItem'][]
      /** @example [
       *       {
       *         "remote_id": "192406939",
       *         "created_at": "2021-11-15T00:00:00Z",
       *         "modified_at": "2021-11-15T00:00:00Z",
       *         "sub_items": []
       *       }
       *     ] */
      readonly financing_activities?: components['schemas']['ReportItem'][]
      /**
       * Format: date-time
       * @description The time that cash flow statement was generated by the accounting system.
       * @example 2020-04-01T00:00:00Z
       */
      remote_generated_at?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /**
     * @description * `hris` - hris
     *     * `ats` - ats
     *     * `accounting` - accounting
     *     * `ticketing` - ticketing
     *     * `crm` - crm
     *     * `mktg` - mktg
     *     * `filestorage` - filestorage
     * @enum {string}
     */
    CategoriesEnum:
      | 'hris'
      | 'ats'
      | 'accounting'
      | 'ticketing'
      | 'crm'
      | 'mktg'
      | 'filestorage'
    /**
     * @description * `hris` - hris
     *     * `ats` - ats
     *     * `accounting` - accounting
     *     * `ticketing` - ticketing
     *     * `crm` - crm
     *     * `mktg` - mktg
     *     * `filestorage` - filestorage
     * @enum {string}
     */
    CategoryEnum:
      | 'hris'
      | 'ats'
      | 'accounting'
      | 'ticketing'
      | 'crm'
      | 'mktg'
      | 'filestorage'
    /**
     * @description * `CLASS` - CLASS
     *     * `DEPARTMENT` - DEPARTMENT
     * @enum {string}
     */
    CategoryTypeEnum: 'CLASS' | 'DEPARTMENT'
    /**
     * @description * `ASSET` - ASSET
     *     * `EQUITY` - EQUITY
     *     * `EXPENSE` - EXPENSE
     *     * `LIABILITY` - LIABILITY
     *     * `REVENUE` - REVENUE
     * @enum {string}
     */
    ClassificationEnum: 'ASSET' | 'EQUITY' | 'EXPENSE' | 'LIABILITY' | 'REVENUE'
    CommonModelScopeAPI: {
      /**
       * @description The common models you want to update the scopes for
       * @example [
       *       {
       *         "model_name": "Employee",
       *         "model_permissions": {
       *           "READ": {
       *             "is_enabled": true
       *           },
       *           "WRITE": {
       *             "is_enabled": false
       *           }
       *         },
       *         "field_permissions": {
       *           "enabled_fields": [
       *             "avatar",
       *             "created_at",
       *             "custom_fields",
       *             "date_of_birth",
       *             "first_name",
       *             "gender",
       *             "remote_created_at",
       *             "remote_data"
       *           ],
       *           "disabled_fields": [
       *             "company",
       *             "employments",
       *             "groups",
       *             "home_location",
       *             "manager",
       *             "work_location"
       *           ]
       *         }
       *       }
       *     ]
       */
      common_models: components['schemas']['IndividualCommonModelScopeDeserializer'][]
    }
    CommonModelScopesBodyRequest: {
      /** @example hris.Employee */
      model_id: string
      /** @example [
       *       "READ",
       *       "WRITE"
       *     ] */
      enabled_actions: components['schemas']['EnabledActionsEnum'][]
      /** @example [
       *       "first_name"
       *     ] */
      disabled_fields: string[]
    }
    /** @description # The CompanyInfo Object
     *     ### Description
     *     The `CompanyInfo` object contains information about the company of the linked account. If the company has multiple entities (also known as subsidiaries), each entity may show up as a single `CompanyInfo` record.
     *
     *     ### Usage Example
     *     Fetch from the `GET CompanyInfo` endpoint and view a company's information. */
    CompanyInfo: {
      /**
       * Format: uuid
       * @example 65d8ffd0-211b-4ba4-b85a-fbe2ce220982
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 19202938
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The company's name.
       * @example Merge Pickleball Company
       */
      name?: string | null
      /**
       * @description The company's legal name.
       * @example Merge Pickleball Company Inc.
       */
      legal_name?: string | null
      /**
       * @description The company's tax number.
       * @example 11-0011000
       */
      tax_number?: string | null
      /**
       * @description The company's fiscal year end month.
       * @example 12
       */
      fiscal_year_end_month?: number | null
      /**
       * @description The company's fiscal year end day.
       * @example 31
       */
      fiscal_year_end_day?: number | null
      /**
       * @description The currency set in the company's accounting platform.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: date-time
       * @description When the third party's company was created.
       * @example 2020-03-31T00:00:00Z
       */
      remote_created_at?: string | null
      /**
       * @description The company's urls.
       * @example https://www.merge.dev
       */
      urls?: (string | null)[] | null
      /** @example [
       *       {
       *         "street_1": "2920 Broadway",
       *         "street_2": "2nd Floor",
       *         "city": "New York",
       *         "state": "NY",
       *         "country": "US",
       *         "zip_code": "10027"
       *       }
       *     ] */
      addresses?: components['schemas']['Address'][]
      phone_numbers?: components['schemas']['AccountingPhoneNumber'][]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /**
     * @description * `SALES` - SALES
     *     * `PURCHASE` - PURCHASE
     * @enum {string}
     */
    ComponentTypeEnum: 'SALES' | 'PURCHASE'
    /** @description # The Contact Object
     *     ### Description
     *     A `Contact` is an individual or business entity to which products and services are sold to or purchased from. The `Contact` model contains both Customers, in which products and services are sold to, and Vendors (or Suppliers), in which products and services are purchased from.
     *     * A `Contact` is a Vendor/Supplier if the `is_supplier` property is true.
     *     * A `Contact` is a customer if the `is_customer` property is true.
     *
     *     ### Usage Example
     *     Fetch from the `LIST Contacts` endpoint and view a company's contacts. */
    Contact: {
      /**
       * Format: uuid
       * @example c640b80b-fac9-409f-aa19-1f9221aec445
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 11167
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The contact's name.
       * @example Gil Feig's pickleball store
       */
      name?: string | null
      /** @description Whether the contact is a supplier. */
      is_supplier?: boolean | null
      /**
       * @description Whether the contact is a customer.
       * @example true
       */
      is_customer?: boolean | null
      /**
       * @description The contact's email address.
       * @example pickleball@merge.dev
       */
      email_address?: string | null
      /**
       * @description The contact's tax number.
       * @example 12-3456789
       */
      tax_number?: string | null
      /**
       * @description The contact's status
       *
       *     * `ACTIVE` - ACTIVE
       *     * `ARCHIVED` - ARCHIVED
       * @example ACTIVE
       */
      status?: components['schemas']['Status7d1Enum'] | null
      /**
       * @description The currency the contact's transactions are in.
       * @example USD
       */
      currency?: string | null
      /**
       * Format: date-time
       * @description When the third party's contact was updated.
       * @example 2020-03-31T00:00:00Z
       */
      remote_updated_at?: string | null
      /**
       * Format: uuid
       * @description The company the contact belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * @description `Address` object IDs for the given `Contacts` object.
       * @example [
       *       "2f2702aa-8948-492b-a412-2acdf6d2c499",
       *       "d98c7428-8dda-48a8-a1da-c570f65e2375"
       *     ]
       */
      addresses?: components['schemas']['Address'][]
      /**
       * @description `AccountingPhoneNumber` object for the given `Contacts` object.
       * @example [
       *       {
       *         "number": "+3198675309",
       *         "type": "Mobile"
       *       }
       *     ]
       */
      phone_numbers?: components['schemas']['AccountingPhoneNumber'][]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    ContactEndpointRequest: {
      model: components['schemas']['ContactRequest']
    }
    /** @description # The Contact Object
     *     ### Description
     *     A `Contact` is an individual or business entity to which products and services are sold to or purchased from. The `Contact` model contains both Customers, in which products and services are sold to, and Vendors (or Suppliers), in which products and services are purchased from.
     *     * A `Contact` is a Vendor/Supplier if the `is_supplier` property is true.
     *     * A `Contact` is a customer if the `is_customer` property is true.
     *
     *     ### Usage Example
     *     Fetch from the `LIST Contacts` endpoint and view a company's contacts. */
    ContactRequest: {
      /**
       * @description The contact's name.
       * @example Gil Feig's pickleball store
       */
      name?: string | null
      /** @description Whether the contact is a supplier. */
      is_supplier?: boolean | null
      /**
       * @description Whether the contact is a customer.
       * @example true
       */
      is_customer?: boolean | null
      /**
       * @description The contact's email address.
       * @example pickleball@merge.dev
       */
      email_address?: string | null
      /**
       * @description The contact's tax number.
       * @example 12-3456789
       */
      tax_number?: string | null
      /**
       * @description The contact's status
       *
       *     * `ACTIVE` - ACTIVE
       *     * `ARCHIVED` - ARCHIVED
       * @example ACTIVE
       */
      status?: components['schemas']['Status7d1Enum'] | null
      /**
       * @description The currency the contact's transactions are in.
       * @example USD
       */
      currency?: string | null
      /**
       * Format: uuid
       * @description The company the contact belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * @description `Address` object IDs for the given `Contacts` object.
       * @example [
       *       "2f2702aa-8948-492b-a412-2acdf6d2c499",
       *       "d98c7428-8dda-48a8-a1da-c570f65e2375"
       *     ]
       */
      addresses?: components['schemas']['AddressRequest'][]
      /**
       * @description `AccountingPhoneNumber` object for the given `Contacts` object.
       * @example [
       *       {
       *         "number": "+3198675309",
       *         "type": "Mobile"
       *       }
       *     ]
       */
      phone_numbers?: components['schemas']['AccountingPhoneNumberRequest'][]
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    ContactResponse: {
      model: components['schemas']['Contact']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /**
     * @description * `AF` - Afghanistan
     *     * `AX` - Åland Islands
     *     * `AL` - Albania
     *     * `DZ` - Algeria
     *     * `AS` - American Samoa
     *     * `AD` - Andorra
     *     * `AO` - Angola
     *     * `AI` - Anguilla
     *     * `AQ` - Antarctica
     *     * `AG` - Antigua and Barbuda
     *     * `AR` - Argentina
     *     * `AM` - Armenia
     *     * `AW` - Aruba
     *     * `AU` - Australia
     *     * `AT` - Austria
     *     * `AZ` - Azerbaijan
     *     * `BS` - Bahamas
     *     * `BH` - Bahrain
     *     * `BD` - Bangladesh
     *     * `BB` - Barbados
     *     * `BY` - Belarus
     *     * `BE` - Belgium
     *     * `BZ` - Belize
     *     * `BJ` - Benin
     *     * `BM` - Bermuda
     *     * `BT` - Bhutan
     *     * `BO` - Bolivia
     *     * `BQ` - Bonaire, Sint Eustatius and Saba
     *     * `BA` - Bosnia and Herzegovina
     *     * `BW` - Botswana
     *     * `BV` - Bouvet Island
     *     * `BR` - Brazil
     *     * `IO` - British Indian Ocean Territory
     *     * `BN` - Brunei
     *     * `BG` - Bulgaria
     *     * `BF` - Burkina Faso
     *     * `BI` - Burundi
     *     * `CV` - Cabo Verde
     *     * `KH` - Cambodia
     *     * `CM` - Cameroon
     *     * `CA` - Canada
     *     * `KY` - Cayman Islands
     *     * `CF` - Central African Republic
     *     * `TD` - Chad
     *     * `CL` - Chile
     *     * `CN` - China
     *     * `CX` - Christmas Island
     *     * `CC` - Cocos (Keeling) Islands
     *     * `CO` - Colombia
     *     * `KM` - Comoros
     *     * `CG` - Congo
     *     * `CD` - Congo (the Democratic Republic of the)
     *     * `CK` - Cook Islands
     *     * `CR` - Costa Rica
     *     * `CI` - Côte d'Ivoire
     *     * `HR` - Croatia
     *     * `CU` - Cuba
     *     * `CW` - Curaçao
     *     * `CY` - Cyprus
     *     * `CZ` - Czechia
     *     * `DK` - Denmark
     *     * `DJ` - Djibouti
     *     * `DM` - Dominica
     *     * `DO` - Dominican Republic
     *     * `EC` - Ecuador
     *     * `EG` - Egypt
     *     * `SV` - El Salvador
     *     * `GQ` - Equatorial Guinea
     *     * `ER` - Eritrea
     *     * `EE` - Estonia
     *     * `SZ` - Eswatini
     *     * `ET` - Ethiopia
     *     * `FK` - Falkland Islands (Malvinas)
     *     * `FO` - Faroe Islands
     *     * `FJ` - Fiji
     *     * `FI` - Finland
     *     * `FR` - France
     *     * `GF` - French Guiana
     *     * `PF` - French Polynesia
     *     * `TF` - French Southern Territories
     *     * `GA` - Gabon
     *     * `GM` - Gambia
     *     * `GE` - Georgia
     *     * `DE` - Germany
     *     * `GH` - Ghana
     *     * `GI` - Gibraltar
     *     * `GR` - Greece
     *     * `GL` - Greenland
     *     * `GD` - Grenada
     *     * `GP` - Guadeloupe
     *     * `GU` - Guam
     *     * `GT` - Guatemala
     *     * `GG` - Guernsey
     *     * `GN` - Guinea
     *     * `GW` - Guinea-Bissau
     *     * `GY` - Guyana
     *     * `HT` - Haiti
     *     * `HM` - Heard Island and McDonald Islands
     *     * `VA` - Holy See
     *     * `HN` - Honduras
     *     * `HK` - Hong Kong
     *     * `HU` - Hungary
     *     * `IS` - Iceland
     *     * `IN` - India
     *     * `ID` - Indonesia
     *     * `IR` - Iran
     *     * `IQ` - Iraq
     *     * `IE` - Ireland
     *     * `IM` - Isle of Man
     *     * `IL` - Israel
     *     * `IT` - Italy
     *     * `JM` - Jamaica
     *     * `JP` - Japan
     *     * `JE` - Jersey
     *     * `JO` - Jordan
     *     * `KZ` - Kazakhstan
     *     * `KE` - Kenya
     *     * `KI` - Kiribati
     *     * `KW` - Kuwait
     *     * `KG` - Kyrgyzstan
     *     * `LA` - Laos
     *     * `LV` - Latvia
     *     * `LB` - Lebanon
     *     * `LS` - Lesotho
     *     * `LR` - Liberia
     *     * `LY` - Libya
     *     * `LI` - Liechtenstein
     *     * `LT` - Lithuania
     *     * `LU` - Luxembourg
     *     * `MO` - Macao
     *     * `MG` - Madagascar
     *     * `MW` - Malawi
     *     * `MY` - Malaysia
     *     * `MV` - Maldives
     *     * `ML` - Mali
     *     * `MT` - Malta
     *     * `MH` - Marshall Islands
     *     * `MQ` - Martinique
     *     * `MR` - Mauritania
     *     * `MU` - Mauritius
     *     * `YT` - Mayotte
     *     * `MX` - Mexico
     *     * `FM` - Micronesia (Federated States of)
     *     * `MD` - Moldova
     *     * `MC` - Monaco
     *     * `MN` - Mongolia
     *     * `ME` - Montenegro
     *     * `MS` - Montserrat
     *     * `MA` - Morocco
     *     * `MZ` - Mozambique
     *     * `MM` - Myanmar
     *     * `NA` - Namibia
     *     * `NR` - Nauru
     *     * `NP` - Nepal
     *     * `NL` - Netherlands
     *     * `NC` - New Caledonia
     *     * `NZ` - New Zealand
     *     * `NI` - Nicaragua
     *     * `NE` - Niger
     *     * `NG` - Nigeria
     *     * `NU` - Niue
     *     * `NF` - Norfolk Island
     *     * `KP` - North Korea
     *     * `MK` - North Macedonia
     *     * `MP` - Northern Mariana Islands
     *     * `NO` - Norway
     *     * `OM` - Oman
     *     * `PK` - Pakistan
     *     * `PW` - Palau
     *     * `PS` - Palestine, State of
     *     * `PA` - Panama
     *     * `PG` - Papua New Guinea
     *     * `PY` - Paraguay
     *     * `PE` - Peru
     *     * `PH` - Philippines
     *     * `PN` - Pitcairn
     *     * `PL` - Poland
     *     * `PT` - Portugal
     *     * `PR` - Puerto Rico
     *     * `QA` - Qatar
     *     * `RE` - Réunion
     *     * `RO` - Romania
     *     * `RU` - Russia
     *     * `RW` - Rwanda
     *     * `BL` - Saint Barthélemy
     *     * `SH` - Saint Helena, Ascension and Tristan da Cunha
     *     * `KN` - Saint Kitts and Nevis
     *     * `LC` - Saint Lucia
     *     * `MF` - Saint Martin (French part)
     *     * `PM` - Saint Pierre and Miquelon
     *     * `VC` - Saint Vincent and the Grenadines
     *     * `WS` - Samoa
     *     * `SM` - San Marino
     *     * `ST` - Sao Tome and Principe
     *     * `SA` - Saudi Arabia
     *     * `SN` - Senegal
     *     * `RS` - Serbia
     *     * `SC` - Seychelles
     *     * `SL` - Sierra Leone
     *     * `SG` - Singapore
     *     * `SX` - Sint Maarten (Dutch part)
     *     * `SK` - Slovakia
     *     * `SI` - Slovenia
     *     * `SB` - Solomon Islands
     *     * `SO` - Somalia
     *     * `ZA` - South Africa
     *     * `GS` - South Georgia and the South Sandwich Islands
     *     * `KR` - South Korea
     *     * `SS` - South Sudan
     *     * `ES` - Spain
     *     * `LK` - Sri Lanka
     *     * `SD` - Sudan
     *     * `SR` - Suriname
     *     * `SJ` - Svalbard and Jan Mayen
     *     * `SE` - Sweden
     *     * `CH` - Switzerland
     *     * `SY` - Syria
     *     * `TW` - Taiwan
     *     * `TJ` - Tajikistan
     *     * `TZ` - Tanzania
     *     * `TH` - Thailand
     *     * `TL` - Timor-Leste
     *     * `TG` - Togo
     *     * `TK` - Tokelau
     *     * `TO` - Tonga
     *     * `TT` - Trinidad and Tobago
     *     * `TN` - Tunisia
     *     * `TR` - Turkey
     *     * `TM` - Turkmenistan
     *     * `TC` - Turks and Caicos Islands
     *     * `TV` - Tuvalu
     *     * `UG` - Uganda
     *     * `UA` - Ukraine
     *     * `AE` - United Arab Emirates
     *     * `GB` - United Kingdom
     *     * `UM` - United States Minor Outlying Islands
     *     * `US` - United States of America
     *     * `UY` - Uruguay
     *     * `UZ` - Uzbekistan
     *     * `VU` - Vanuatu
     *     * `VE` - Venezuela
     *     * `VN` - Vietnam
     *     * `VG` - Virgin Islands (British)
     *     * `VI` - Virgin Islands (U.S.)
     *     * `WF` - Wallis and Futuna
     *     * `EH` - Western Sahara
     *     * `YE` - Yemen
     *     * `ZM` - Zambia
     *     * `ZW` - Zimbabwe
     * @enum {string}
     */
    CountryEnum:
      | 'AF'
      | 'AX'
      | 'AL'
      | 'DZ'
      | 'AS'
      | 'AD'
      | 'AO'
      | 'AI'
      | 'AQ'
      | 'AG'
      | 'AR'
      | 'AM'
      | 'AW'
      | 'AU'
      | 'AT'
      | 'AZ'
      | 'BS'
      | 'BH'
      | 'BD'
      | 'BB'
      | 'BY'
      | 'BE'
      | 'BZ'
      | 'BJ'
      | 'BM'
      | 'BT'
      | 'BO'
      | 'BQ'
      | 'BA'
      | 'BW'
      | 'BV'
      | 'BR'
      | 'IO'
      | 'BN'
      | 'BG'
      | 'BF'
      | 'BI'
      | 'CV'
      | 'KH'
      | 'CM'
      | 'CA'
      | 'KY'
      | 'CF'
      | 'TD'
      | 'CL'
      | 'CN'
      | 'CX'
      | 'CC'
      | 'CO'
      | 'KM'
      | 'CG'
      | 'CD'
      | 'CK'
      | 'CR'
      | 'CI'
      | 'HR'
      | 'CU'
      | 'CW'
      | 'CY'
      | 'CZ'
      | 'DK'
      | 'DJ'
      | 'DM'
      | 'DO'
      | 'EC'
      | 'EG'
      | 'SV'
      | 'GQ'
      | 'ER'
      | 'EE'
      | 'SZ'
      | 'ET'
      | 'FK'
      | 'FO'
      | 'FJ'
      | 'FI'
      | 'FR'
      | 'GF'
      | 'PF'
      | 'TF'
      | 'GA'
      | 'GM'
      | 'GE'
      | 'DE'
      | 'GH'
      | 'GI'
      | 'GR'
      | 'GL'
      | 'GD'
      | 'GP'
      | 'GU'
      | 'GT'
      | 'GG'
      | 'GN'
      | 'GW'
      | 'GY'
      | 'HT'
      | 'HM'
      | 'VA'
      | 'HN'
      | 'HK'
      | 'HU'
      | 'IS'
      | 'IN'
      | 'ID'
      | 'IR'
      | 'IQ'
      | 'IE'
      | 'IM'
      | 'IL'
      | 'IT'
      | 'JM'
      | 'JP'
      | 'JE'
      | 'JO'
      | 'KZ'
      | 'KE'
      | 'KI'
      | 'KW'
      | 'KG'
      | 'LA'
      | 'LV'
      | 'LB'
      | 'LS'
      | 'LR'
      | 'LY'
      | 'LI'
      | 'LT'
      | 'LU'
      | 'MO'
      | 'MG'
      | 'MW'
      | 'MY'
      | 'MV'
      | 'ML'
      | 'MT'
      | 'MH'
      | 'MQ'
      | 'MR'
      | 'MU'
      | 'YT'
      | 'MX'
      | 'FM'
      | 'MD'
      | 'MC'
      | 'MN'
      | 'ME'
      | 'MS'
      | 'MA'
      | 'MZ'
      | 'MM'
      | 'NA'
      | 'NR'
      | 'NP'
      | 'NL'
      | 'NC'
      | 'NZ'
      | 'NI'
      | 'NE'
      | 'NG'
      | 'NU'
      | 'NF'
      | 'KP'
      | 'MK'
      | 'MP'
      | 'NO'
      | 'OM'
      | 'PK'
      | 'PW'
      | 'PS'
      | 'PA'
      | 'PG'
      | 'PY'
      | 'PE'
      | 'PH'
      | 'PN'
      | 'PL'
      | 'PT'
      | 'PR'
      | 'QA'
      | 'RE'
      | 'RO'
      | 'RU'
      | 'RW'
      | 'BL'
      | 'SH'
      | 'KN'
      | 'LC'
      | 'MF'
      | 'PM'
      | 'VC'
      | 'WS'
      | 'SM'
      | 'ST'
      | 'SA'
      | 'SN'
      | 'RS'
      | 'SC'
      | 'SL'
      | 'SG'
      | 'SX'
      | 'SK'
      | 'SI'
      | 'SB'
      | 'SO'
      | 'ZA'
      | 'GS'
      | 'KR'
      | 'SS'
      | 'ES'
      | 'LK'
      | 'SD'
      | 'SR'
      | 'SJ'
      | 'SE'
      | 'CH'
      | 'SY'
      | 'TW'
      | 'TJ'
      | 'TZ'
      | 'TH'
      | 'TL'
      | 'TG'
      | 'TK'
      | 'TO'
      | 'TT'
      | 'TN'
      | 'TR'
      | 'TM'
      | 'TC'
      | 'TV'
      | 'UG'
      | 'UA'
      | 'AE'
      | 'GB'
      | 'UM'
      | 'US'
      | 'UY'
      | 'UZ'
      | 'VU'
      | 'VE'
      | 'VN'
      | 'VG'
      | 'VI'
      | 'WF'
      | 'EH'
      | 'YE'
      | 'ZM'
      | 'ZW'
    CreateFieldMappingRequest: {
      /**
       * @description The name of the target field you want this remote field to map to.
       * @example example_target_field_name
       */
      target_field_name: string
      /**
       * @description The description of the target field you want this remote field to map to.
       * @example this is a example description of the target field
       */
      target_field_description: string
      /**
       * @description The field traversal path of the remote field listed when you hit the GET /remote-fields endpoint.
       * @example [
       *       "example_remote_field"
       *     ]
       */
      remote_field_traversal_path: unknown[]
      /**
       * @description The method of the remote endpoint where the remote field is coming from.
       * @example GET
       */
      remote_method: string
      /**
       * @description The path of the remote endpoint where the remote field is coming from.
       * @example /example-url-path
       */
      remote_url_path: string
      /**
       * @description The name of the Common Model that the remote field corresponds to in a given category.
       * @example ExampleCommonModel
       */
      common_model_name: string
    }
    /** @description # The CreditNote Object
     *     ### Description
     *     A `CreditNote` is transaction issued to a customer, indicating a reduction or cancellation of the amount owed by the customer. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a sales transaction. A `CreditNote` can be applied to *Accounts Receivable* Invoices to decrease the overall amount of the Invoice.
     *
     *     ### Usage Example
     *     Fetch from the `LIST CreditNotes` endpoint and view a company's credit notes. */
    CreditNote: {
      /**
       * Format: uuid
       * @example 8d9fd929-436c-4fd4-a48b-0c61f68d6178
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 123877
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: date-time
       * @description The credit note's transaction date.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * @description The credit note's status.
       *
       *     * `SUBMITTED` - SUBMITTED
       *     * `AUTHORIZED` - AUTHORIZED
       *     * `PAID` - PAID
       * @example PAID
       */
      status?: components['schemas']['CreditNoteStatusEnum'] | null
      /**
       * @description The credit note's number.
       * @example CN-29
       */
      number?: string | null
      /**
       * Format: uuid
       * @description The credit note's contact.
       * @example c6c7b870-bb4d-489a-921e-2f0ee4192ff9
       */
      contact?: string | null
      /**
       * Format: uuid
       * @description The company the credit note belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: decimal
       * @description The credit note's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: double
       * @description The credit note's total amount.
       * @example 50
       */
      total_amount?: number | null
      /**
       * Format: double
       * @description The amount of value remaining in the credit note that the customer can use.
       * @example 20
       */
      remaining_credit?: number | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /** @example [
       *       {
       *         "item": "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
       *         "name": "Basic Monthly",
       *         "description": "prorated amount for items",
       *         "quantity": 1,
       *         "memo": "privNote",
       *         "unit_price": "5.0",
       *         "tax_rate": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
       *         "total_line_amount": "5.0",
       *         "tracking_categories": [
       *           "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "account": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "remote_id": "121222",
       *         "remote_was_deleted": true
       *       }
       *     ] */
      line_items?: components['schemas']['CreditNoteLineItem'][]
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * @description The credit note's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: date-time
       * @description When the third party's credit note was created.
       * @example 2020-03-31T00:00:00Z
       */
      remote_created_at?: string | null
      /**
       * Format: date-time
       * @description When the third party's credit note was updated.
       * @example 2020-03-31T00:00:00Z
       */
      remote_updated_at?: string | null
      /**
       * @description Array of `Payment` object IDs
       * @example [
       *       "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
       *     ]
       */
      payments?: (string | null)[]
      /**
       * @description A list of the Payment Applied to Lines common models related to a given Invoice, Credit Note, or Journal Entry.
       * @example [
       *       "a9a94a75-19c1-41fe-90d8-d9ba959c38e5"
       *     ]
       */
      applied_payments?: (string | null)[]
      /**
       * Format: uuid
       * @description The accounting period that the CreditNote was generated in.
       * @example b38c59b0-a9d7-4740-b1ee-5436c6751e3d
       */
      accounting_period?: string | null
      /**
       * @description A list of the CreditNote Applied to Lines common models related to a given Credit Note
       * @example [
       *       {
       *         "invoice": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
       *         "applied_date": "2020-03-31T00:00:00Z",
       *         "applied_amount": 2.9
       *       }
       *     ]
       */
      applied_to_lines?: components['schemas']['CreditNoteApplyLineForCreditNote'][]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /** @description # The CreditNoteApplyLine Object
     *     ### Description
     *     The `CreditNoteApplyLine` is attached to the CreditNote model.
     *
     *     ### Usage Example
     *     Fetch from the `GET CreditNote` endpoint and view the invoice's applied to lines. */
    CreditNoteApplyLineForCreditNote: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      invoice?: string | null
      /**
       * Format: date-time
       * @description Date that the credit note is applied to the invoice.
       * @example 2020-03-31T00:00:00Z
       */
      applied_date?: string | null
      /**
       * Format: decimal
       * @description The amount of the Credit Note applied to the invoice.
       * @example 2.9
       */
      applied_amount?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
    }
    /** @description # The CreditNoteApplyLine Object
     *     ### Description
     *     The `CreditNoteApplyLine` is attached to the CreditNote model.
     *
     *     ### Usage Example
     *     Fetch from the `GET CreditNote` endpoint and view the invoice's applied to lines. */
    CreditNoteApplyLineForCreditNoteRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: uuid
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      invoice?: string | null
      /**
       * Format: date-time
       * @description Date that the credit note is applied to the invoice.
       * @example 2020-03-31T00:00:00Z
       */
      applied_date?: string | null
      /**
       * Format: decimal
       * @description The amount of the Credit Note applied to the invoice.
       * @example 2.9
       */
      applied_amount?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    /** @description # The CreditNoteApplyLine Object
     *     ### Description
     *     The `CreditNoteApplyLine` is attached to the CreditNote model.
     *
     *     ### Usage Example
     *     Fetch from the `GET CreditNote` endpoint and view the invoice's applied to lines. */
    CreditNoteApplyLineForInvoice: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @example dd7ae92086acb2fc9c2739de564ef8e9571f7263
       */
      credit_note?: string | null
      /**
       * Format: date-time
       * @description Date that the credit note is applied to the invoice.
       * @example 2020-03-31T00:00:00Z
       */
      applied_date?: string | null
      /**
       * Format: decimal
       * @description The amount of the Credit Note applied to the invoice.
       * @example 2.9
       */
      applied_amount?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
    }
    CreditNoteEndpointRequest: {
      model: components['schemas']['CreditNoteRequest']
    }
    /** @description # The CreditNoteLineItem Object
     *     ### Description
     *     The `CreditNoteLineItem` object is used to represent a credit note's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET CreditNote` endpoint and view the credit note's line items. */
    CreditNoteLineItem: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @example 0e3fd929-436c-4fd4-a48b-0c61f68d6178
       */
      item?: string | null
      /**
       * @description The credit note line item's name.
       * @example Basic Monthly
       */
      name?: string | null
      /**
       * @description The description of the item that is owed.
       * @example prorated amount for items
       */
      description?: string | null
      /**
       * Format: decimal
       * @description The credit note line item's quantity.
       * @example 1
       */
      quantity?: string | null
      /**
       * @description The credit note line item's memo.
       * @example privNote
       */
      memo?: string | null
      /**
       * Format: decimal
       * @description The credit note line item's unit price.
       * @example 5.0
       */
      unit_price?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example 8d9fd929-436c-4fd4-a48b-0c61f68d6178
       */
      tax_rate?: string | null
      /**
       * Format: decimal
       * @description The credit note line item's total.
       * @example 5.0
       */
      total_line_amount?: string | null
      /**
       * Format: uuid
       * @deprecated
       * @description The credit note line item's associated tracking category.
       */
      tracking_category?: string | null
      /**
       * @description The credit note line item's associated tracking categories.
       * @example [
       *       "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The credit note line item's account.
       * @example 8d9fd929-436c-4fd4-a48b-0c61f68d6178
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The company the credit note belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
       * @example true
       */
      readonly remote_was_deleted?: boolean
    }
    /** @description # The CreditNoteLineItem Object
     *     ### Description
     *     The `CreditNoteLineItem` object is used to represent a credit note's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET CreditNote` endpoint and view the credit note's line items. */
    CreditNoteLineItemRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: uuid
       * @example 0e3fd929-436c-4fd4-a48b-0c61f68d6178
       */
      item?: string | null
      /**
       * @description The credit note line item's name.
       * @example Basic Monthly
       */
      name?: string | null
      /**
       * @description The description of the item that is owed.
       * @example prorated amount for items
       */
      description?: string | null
      /**
       * Format: decimal
       * @description The credit note line item's quantity.
       * @example 1
       */
      quantity?: string | null
      /**
       * @description The credit note line item's memo.
       * @example privNote
       */
      memo?: string | null
      /**
       * Format: decimal
       * @description The credit note line item's unit price.
       * @example 5.0
       */
      unit_price?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example 8d9fd929-436c-4fd4-a48b-0c61f68d6178
       */
      tax_rate?: string | null
      /**
       * Format: decimal
       * @description The credit note line item's total.
       * @example 5.0
       */
      total_line_amount?: string | null
      /**
       * Format: uuid
       * @deprecated
       * @description The credit note line item's associated tracking category.
       */
      tracking_category?: string | null
      /**
       * @description The credit note line item's associated tracking categories.
       * @example [
       *       "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The credit note line item's account.
       * @example 8d9fd929-436c-4fd4-a48b-0c61f68d6178
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The company the credit note belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    /** @description # The CreditNote Object
     *     ### Description
     *     A `CreditNote` is transaction issued to a customer, indicating a reduction or cancellation of the amount owed by the customer. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a sales transaction. A `CreditNote` can be applied to *Accounts Receivable* Invoices to decrease the overall amount of the Invoice.
     *
     *     ### Usage Example
     *     Fetch from the `LIST CreditNotes` endpoint and view a company's credit notes. */
    CreditNoteRequest: {
      /**
       * Format: date-time
       * @description The credit note's transaction date.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * @description The credit note's status.
       *
       *     * `SUBMITTED` - SUBMITTED
       *     * `AUTHORIZED` - AUTHORIZED
       *     * `PAID` - PAID
       * @example PAID
       */
      status?: components['schemas']['CreditNoteStatusEnum'] | null
      /**
       * @description The credit note's number.
       * @example CN-29
       */
      number?: string | null
      /**
       * Format: uuid
       * @description The credit note's contact.
       * @example c6c7b870-bb4d-489a-921e-2f0ee4192ff9
       */
      contact?: string | null
      /**
       * Format: uuid
       * @description The company the credit note belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: decimal
       * @description The credit note's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: double
       * @description The credit note's total amount.
       * @example 50
       */
      total_amount?: number | null
      /**
       * Format: double
       * @description The amount of value remaining in the credit note that the customer can use.
       * @example 20
       */
      remaining_credit?: number | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /** @example [
       *       {
       *         "item": "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
       *         "name": "Basic Monthly",
       *         "description": "prorated amount for items",
       *         "quantity": 1,
       *         "memo": "privNote",
       *         "unit_price": "5.0",
       *         "tax_rate": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
       *         "total_line_amount": "5.0",
       *         "tracking_categories": [
       *           "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "account": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "remote_id": "121222",
       *         "remote_was_deleted": true
       *       }
       *     ] */
      line_items?: components['schemas']['CreditNoteLineItemRequest'][]
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * @description The credit note's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * @description Array of `Payment` object IDs
       * @example [
       *       "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
       *     ]
       */
      payments?: (string | null)[]
      /**
       * @description A list of the Payment Applied to Lines common models related to a given Invoice, Credit Note, or Journal Entry.
       * @example [
       *       "a9a94a75-19c1-41fe-90d8-d9ba959c38e5"
       *     ]
       */
      applied_payments?: (string | null)[]
      /**
       * Format: uuid
       * @description The accounting period that the CreditNote was generated in.
       * @example b38c59b0-a9d7-4740-b1ee-5436c6751e3d
       */
      accounting_period?: string | null
      /**
       * @description A list of the CreditNote Applied to Lines common models related to a given Credit Note
       * @example [
       *       {
       *         "invoice": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
       *         "applied_date": "2020-03-31T00:00:00Z",
       *         "applied_amount": 2.9
       *       }
       *     ]
       */
      applied_to_lines?: components['schemas']['CreditNoteApplyLineForCreditNoteRequest'][]
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    CreditNoteResponse: {
      model: components['schemas']['CreditNote']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /**
     * @description * `SUBMITTED` - SUBMITTED
     *     * `AUTHORIZED` - AUTHORIZED
     *     * `PAID` - PAID
     * @enum {string}
     */
    CreditNoteStatusEnum: 'SUBMITTED' | 'AUTHORIZED' | 'PAID'
    /**
     * @description * `CREDIT` - CREDIT
     *     * `DEBIT` - DEBIT
     * @enum {string}
     */
    CreditOrDebitEnum: 'CREDIT' | 'DEBIT'
    /** @description # The DataPassthrough Object
     *     ### Description
     *     The `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.
     *
     *     ### Usage Example
     *     Create a `DataPassthrough` to get team hierarchies from your Rippling integration. */
    DataPassthroughRequest: {
      /** @example POST */
      method: components['schemas']['MethodEnum']
      /**
       * @description The path of the request in the third party's platform.
       * @example /scooters
       */
      path: string
      /**
       * @description An optional override of the third party's base url for the request.
       * @example https://api.example.com
       */
      base_url_override?: string | null
      /**
       * @description The data with the request. You must include a `request_format` parameter matching the data's format
       * @example {"company": "Lime", "model": "Gen 2.5"}
       */
      data?: string | null
      /** @description Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`. */
      multipart_form_data?:
        | components['schemas']['MultipartFormFieldRequest'][]
        | null
      /**
       * @description The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.
       * @example {
       *       "EXTRA-HEADER": "value"
       *     }
       */
      headers?: {
        [key: string]: unknown
      } | null
      /** @example JSON */
      request_format?: components['schemas']['RequestFormatEnum'] | null
      /** @description Optional. If true, the response will always be an object of the form `{"type": T, "value": ...}` where `T` will be one of `string, boolean, number, null, array, object`. */
      normalize_response?: boolean
    }
    DebugModeLog: {
      /** @example 99433219-8017-4acd-bb3c-ceb23d663832 */
      log_id: string
      /** @example https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832 */
      dashboard_view: string
      /** @example {
       *       "url": "www.exampleintegration.com/api/v1/exampleapi",
       *       "method": "POST",
       *       "status_code": 200
       *     } */
      log_summary: components['schemas']['DebugModelLogSummary']
    }
    DebugModelLogSummary: {
      /** @example www.exampleintegration.com/api/v1/exampleapi */
      url: string
      /** @example POST */
      method: string
      /** @example 200 */
      status_code: number
    }
    /** @description # The Employee Object
     *     ### Description
     *     An `Employee` is an individual who works for the company of the linked account. The `Employee` model contains both contractors and full time employees.
     *     * An `Employee` is a contractor if `is_contractor` property is `True`
     *     * An `Employee` is a full time employee if `is_contractor` property is `False`
     *
     *     ### Usage Example
     *     Fetch from the `LIST Employees` endpoint and view a company's employees. */
    Employee: {
      /**
       * Format: uuid
       * @example c640b80b-fac9-409f-aa19-1f9221aec445
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 11167
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The employee's first name.
       * @example John
       */
      first_name?: string | null
      /**
       * @description The employee's last name.
       * @example Smith
       */
      last_name?: string | null
      /**
       * @description `True` if the employee is a contractor, `False` if not.
       * @example true
       */
      is_contractor?: boolean | null
      /**
       * @description The employee's internal identification number.
       * @example 325462
       */
      employee_number?: string | null
      /**
       * @description The employee's email address.
       * @example johnsmith@merge.dev
       */
      email_address?: string | null
      /**
       * Format: uuid
       * @description The subsidiary that the employee belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * @description The employee's status in the accounting system.
       *
       *     * `ACTIVE` - ACTIVE
       *     * `INACTIVE` - INACTIVE
       * @example ACTIVE
       */
      status: components['schemas']['Status895Enum']
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /**
     * @description * `READ` - READ
     *     * `WRITE` - WRITE
     * @enum {string}
     */
    EnabledActionsEnum: 'READ' | 'WRITE'
    /**
     * @description * `RAW` - RAW
     *     * `BASE64` - BASE64
     *     * `GZIP_BASE64` - GZIP_BASE64
     * @enum {string}
     */
    EncodingEnum: 'RAW' | 'BASE64' | 'GZIP_BASE64'
    EndUserDetailsRequest: {
      /**
       * @description Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.
       * @example example@gmail.com
       */
      end_user_email_address: string
      /**
       * @description Your end user's organization.
       * @example Test Organization
       */
      end_user_organization_name: string
      /**
       * @description This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.
       * @example 12345
       */
      end_user_origin_id: string
      /**
       * @description The integration categories to show in Merge Link.
       * @example [
       *       "hris",
       *       "ats"
       *     ]
       */
      categories: components['schemas']['CategoriesEnum'][]
      /**
       * @description The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://docs.merge.dev/guides/merge-link/single-integration/.
       * @example bamboohr
       */
      integration?: string | null
      /**
       * @description An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30.
       * @default 30
       */
      link_expiry_mins: number
      /**
       * @description Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/integrations-fast-say-hello-to-magic-link.
       * @default false
       */
      should_create_magic_link_url: boolean | null
      /**
       * @description Whether to generate a Magic Link URL on the Admin Needed screen during the linking flow. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/integrations-fast-say-hello-to-magic-link.
       * @default false
       */
      hide_admin_magic_link: boolean | null
      /** @description An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account. */
      common_models?:
        | components['schemas']['CommonModelScopesBodyRequest'][]
        | null
      /**
       * @description When creating a Link Token, you can set permissions for Common Models that will apply to the account that is going to be linked. Any model or field not specified in link token payload will default to existing settings.
       * @example {
       *       "hris": [
       *         {
       *           "model_name": "Employee",
       *           "model_permissions": {
       *             "READ": {
       *               "is_enabled": true
       *             },
       *             "WRITE": {
       *               "is_enabled": true
       *             }
       *           },
       *           "field_permissions": {
       *             "enabled_fields": [
       *               "first_name",
       *               "last_name",
       *               "personal_email"
       *             ],
       *             "disabled_fields": [
       *               "preferred_name"
       *             ]
       *           }
       *         },
       *         {
       *           "model_name": "Employment",
       *           "model_permissions": {
       *             "READ": {
       *               "is_enabled": false
       *             },
       *             "WRITE": {
       *               "is_enabled": false
       *             }
       *           },
       *           "field_permissions": {
       *             "enabled_fields": [
       *               "effective_date"
       *             ]
       *           }
       *         }
       *       ],
       *       "ats": [
       *         {
       *           "model_name": "Job",
       *           "model_permissions": {
       *             "READ": {
       *               "is_enabled": true
       *             },
       *             "WRITE": {
       *               "is_enabled": true
       *             }
       *           },
       *           "field_permissions": {
       *             "enabled_fields": [
       *               "name"
       *             ],
       *             "disabled_fields": [
       *               "description"
       *             ]
       *           }
       *         },
       *         {
       *           "model_name": "Department",
       *           "model_permissions": {
       *             "READ": {
       *               "is_enabled": true
       *             },
       *             "WRITE": {
       *               "is_enabled": true
       *             }
       *           }
       *         }
       *       ]
       *     }
       */
      category_common_model_scopes?: {
        [
          key: string
        ]: components['schemas']['IndividualCommonModelScopeDeserializerRequest'][]
      } | null
      /**
       * @description The following subset of IETF language tags can be used to configure localization.
       *
       *     * `en` - en
       *     * `de` - de
       * @example en
       */
      language?: components['schemas']['LanguageEnum'] | null
      /**
       * @description The boolean that indicates whether initial, periodic, and force syncs will be disabled.
       * @default false
       */
      are_syncs_disabled: boolean | null
      /**
       * @description A JSON object containing integration-specific configuration options.
       * @example {
       *       "rippling": {
       *         "oauth_code": "3h1jj8ssdf31dfji3o1jjdfjasd"
       *       }
       *     }
       */
      integration_specific_config?: {
        [key: string]: unknown
      } | null
    }
    ErrorValidationProblem: {
      /** @example {
       *       "pointer": "/model/custom_fields"
       *     } */
      source?: components['schemas']['ValidationProblemSource']
      /** @example Missing Required Field */
      title: string
      /** @example custom_fields is a required field on model. */
      detail: string
      /** @example MISSING_REQUIRED_FIELD */
      problem_type: string
    }
    /**
     * @description * `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY
     *     * `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY
     *     * `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY
     *     * `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY
     *     * `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY
     *     * `INVITED_USER` - INVITED_USER
     *     * `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED
     *     * `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED
     *     * `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT
     *     * `CREATED_DESTINATION` - CREATED_DESTINATION
     *     * `DELETED_DESTINATION` - DELETED_DESTINATION
     *     * `CHANGED_DESTINATION` - CHANGED_DESTINATION
     *     * `CHANGED_SCOPES` - CHANGED_SCOPES
     *     * `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION
     *     * `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS
     *     * `ENABLED_INTEGRATION` - ENABLED_INTEGRATION
     *     * `DISABLED_INTEGRATION` - DISABLED_INTEGRATION
     *     * `ENABLED_CATEGORY` - ENABLED_CATEGORY
     *     * `DISABLED_CATEGORY` - DISABLED_CATEGORY
     *     * `CHANGED_PASSWORD` - CHANGED_PASSWORD
     *     * `RESET_PASSWORD` - RESET_PASSWORD
     *     * `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
     *     * `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
     *     * `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
     *     * `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
     *     * `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING
     *     * `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING
     *     * `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING
     *     * `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING
     *     * `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING
     *     * `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING
     *     * `CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
     *     * `CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
     *     * `DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
     *     * `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC
     *     * `MUTED_ISSUE` - MUTED_ISSUE
     *     * `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK
     *     * `ENABLED_MERGE_WEBHOOK` - ENABLED_MERGE_WEBHOOK
     *     * `DISABLED_MERGE_WEBHOOK` - DISABLED_MERGE_WEBHOOK
     *     * `MERGE_WEBHOOK_TARGET_CHANGED` - MERGE_WEBHOOK_TARGET_CHANGED
     *     * `END_USER_CREDENTIALS_ACCESSED` - END_USER_CREDENTIALS_ACCESSED
     * @enum {string}
     */
    EventTypeEnum:
      | 'CREATED_REMOTE_PRODUCTION_API_KEY'
      | 'DELETED_REMOTE_PRODUCTION_API_KEY'
      | 'CREATED_TEST_API_KEY'
      | 'DELETED_TEST_API_KEY'
      | 'REGENERATED_PRODUCTION_API_KEY'
      | 'INVITED_USER'
      | 'TWO_FACTOR_AUTH_ENABLED'
      | 'TWO_FACTOR_AUTH_DISABLED'
      | 'DELETED_LINKED_ACCOUNT'
      | 'CREATED_DESTINATION'
      | 'DELETED_DESTINATION'
      | 'CHANGED_DESTINATION'
      | 'CHANGED_SCOPES'
      | 'CHANGED_PERSONAL_INFORMATION'
      | 'CHANGED_ORGANIZATION_SETTINGS'
      | 'ENABLED_INTEGRATION'
      | 'DISABLED_INTEGRATION'
      | 'ENABLED_CATEGORY'
      | 'DISABLED_CATEGORY'
      | 'CHANGED_PASSWORD'
      | 'RESET_PASSWORD'
      | 'ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION'
      | 'ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT'
      | 'DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION'
      | 'DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT'
      | 'CREATED_INTEGRATION_WIDE_FIELD_MAPPING'
      | 'CREATED_LINKED_ACCOUNT_FIELD_MAPPING'
      | 'CHANGED_INTEGRATION_WIDE_FIELD_MAPPING'
      | 'CHANGED_LINKED_ACCOUNT_FIELD_MAPPING'
      | 'DELETED_INTEGRATION_WIDE_FIELD_MAPPING'
      | 'DELETED_LINKED_ACCOUNT_FIELD_MAPPING'
      | 'CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE'
      | 'CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE'
      | 'DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE'
      | 'FORCED_LINKED_ACCOUNT_RESYNC'
      | 'MUTED_ISSUE'
      | 'GENERATED_MAGIC_LINK'
      | 'ENABLED_MERGE_WEBHOOK'
      | 'DISABLED_MERGE_WEBHOOK'
      | 'MERGE_WEBHOOK_TARGET_CHANGED'
      | 'END_USER_CREDENTIALS_ACCESSED'
    /** @description # The Expense Object
     *     ### Description
     *     The `Expense` object is used to represent a direct purchase by a business, typically made with a check, credit card, or cash. Each `Expense` object is dedicated to a grouping of expenses, with each expense recorded in the lines object.
     *
     *     The `Expense` object is used also used to represent refunds to direct purchases. Refunds can be distinguished from purchases by the amount sign of the records. Expense objects with a negative amount are purchases and `Expense` objects with a positive amount are refunds to those purchases.
     *
     *     ### Usage Example
     *     Fetch from the `GET Expense` endpoint and view a company's expense. */
    Expense: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: date-time
       * @description When the transaction occurred.
       */
      transaction_date?: string | null
      /**
       * Format: date-time
       * @description When the expense was created.
       * @example 2020-03-31T00:00:00Z
       */
      remote_created_at?: string | null
      /**
       * Format: uuid
       * @description The expense's payment account.
       * @example 9d892439-5fab-4dbb-8bd8-34f7f96c7912
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The expense's contact.
       * @example 3d263469-51a1-4766-9205-f6c997826be1
       */
      contact?: string | null
      /**
       * Format: double
       * @description The expense's total amount.
       * @example 10000
       */
      total_amount?: number | null
      /**
       * Format: double
       * @description The expense's total amount before tax.
       */
      sub_total?: number | null
      /**
       * Format: double
       * @description The expense's total tax amount.
       */
      total_tax_amount?: number | null
      /**
       * @description The expense's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The expense's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /**
       * Format: uuid
       * @description The company the expense belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @description The employee this overall transaction relates to.
       * @example 7442f0d5-722d-45bd-b807-6e38489d37fe
       */
      employee?: string | null
      /**
       * @description The expense's private note.
       * @example New employee supplies
       */
      memo?: string | null
      /** @example [
       *       {
       *         "remote_id": "121222",
       *         "net_amount": 25.54,
       *         "tracking_categories": [
       *           "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "employee": "7442f0d5-722d-45bd-b807-6e38489d37fe",
       *         "item": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *         "account": "2a56344a-a491-11ec-b909-0242ac120002",
       *         "contact": "c640b80b-fac9-409f-aa19-1f9221aec445",
       *         "description": "MacBook Pro",
       *         "exchange_rate": "2.9",
       *         "remote_was_deleted": false
       *       },
       *       {
       *         "remote_id": "121223",
       *         "net_amount": 10,
       *         "tracking_categories": [
       *           "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "item": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *         "account": "2a56344a-a491-11ec-b909-0242ac120002",
       *         "description": "Desk Lamp"
       *       }
       *     ] */
      lines?: components['schemas']['ExpenseLine'][]
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /**
       * Format: uuid
       * @description The accounting period that the Expense was generated in.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      accounting_period?: string | null
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    ExpenseEndpointRequest: {
      model: components['schemas']['ExpenseRequest']
    }
    /** @description # The ExpenseLine Object
     *     ### Description
     *     The `ExpenseLine` object is used to represent an expense's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET Expense` endpoint and view the expense's line items. */
    ExpenseLine: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @description The line's item.
       * @example b38c59b0-a9d7-4740-b1ee-5436c6751e3d
       */
      item?: string | null
      /**
       * Format: double
       * @description The line's net amount.
       * @example 25.54
       */
      net_amount?: number | null
      /**
       * Format: uuid
       * @deprecated
       */
      tracking_category?: string | null
      /**
       * @description The expense line item's associated tracking categories.
       * @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The company the expense belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @description The employee this overall transaction relates to.
       * @example 7442f0d5-722d-45bd-b807-6e38489d37fe
       */
      employee?: string | null
      /** @description The expense line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009) */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description The expense's payment account.
       * @example 2a56344a-a491-11ec-b909-0242ac120002
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The expense's contact.
       * @example c640b80b-fac9-409f-aa19-1f9221aec445
       */
      contact?: string | null
      /**
       * @description The description of the item that was purchased by the company.
       * @example MacBook Pro
       */
      description?: string | null
      /**
       * Format: decimal
       * @description The expense line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
    }
    /** @description # The ExpenseLine Object
     *     ### Description
     *     The `ExpenseLine` object is used to represent an expense's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET Expense` endpoint and view the expense's line items. */
    ExpenseLineRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: uuid
       * @description The line's item.
       * @example b38c59b0-a9d7-4740-b1ee-5436c6751e3d
       */
      item?: string | null
      /**
       * Format: double
       * @description The line's net amount.
       * @example 25.54
       */
      net_amount?: number | null
      /**
       * Format: uuid
       * @deprecated
       */
      tracking_category?: string | null
      /**
       * @description The expense line item's associated tracking categories.
       * @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The company the expense belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @description The employee this overall transaction relates to.
       * @example 7442f0d5-722d-45bd-b807-6e38489d37fe
       */
      employee?: string | null
      /** @description The expense line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009) */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description The expense's payment account.
       * @example 2a56344a-a491-11ec-b909-0242ac120002
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The expense's contact.
       * @example c640b80b-fac9-409f-aa19-1f9221aec445
       */
      contact?: string | null
      /**
       * @description The description of the item that was purchased by the company.
       * @example MacBook Pro
       */
      description?: string | null
      /**
       * Format: decimal
       * @description The expense line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    /** @description # The Expense Object
     *     ### Description
     *     The `Expense` object is used to represent a direct purchase by a business, typically made with a check, credit card, or cash. Each `Expense` object is dedicated to a grouping of expenses, with each expense recorded in the lines object.
     *
     *     The `Expense` object is used also used to represent refunds to direct purchases. Refunds can be distinguished from purchases by the amount sign of the records. Expense objects with a negative amount are purchases and `Expense` objects with a positive amount are refunds to those purchases.
     *
     *     ### Usage Example
     *     Fetch from the `GET Expense` endpoint and view a company's expense. */
    ExpenseRequest: {
      /**
       * Format: date-time
       * @description When the transaction occurred.
       */
      transaction_date?: string | null
      /**
       * Format: uuid
       * @description The expense's payment account.
       * @example 9d892439-5fab-4dbb-8bd8-34f7f96c7912
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The expense's contact.
       * @example 3d263469-51a1-4766-9205-f6c997826be1
       */
      contact?: string | null
      /**
       * Format: double
       * @description The expense's total amount.
       * @example 10000
       */
      total_amount?: number | null
      /**
       * Format: double
       * @description The expense's total amount before tax.
       */
      sub_total?: number | null
      /**
       * Format: double
       * @description The expense's total tax amount.
       */
      total_tax_amount?: number | null
      /**
       * @description The expense's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The expense's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /**
       * Format: uuid
       * @description The company the expense belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @description The employee this overall transaction relates to.
       * @example 7442f0d5-722d-45bd-b807-6e38489d37fe
       */
      employee?: string | null
      /**
       * @description The expense's private note.
       * @example New employee supplies
       */
      memo?: string | null
      /** @example [
       *       {
       *         "remote_id": "121222",
       *         "net_amount": 25.54,
       *         "tracking_categories": [
       *           "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "employee": "7442f0d5-722d-45bd-b807-6e38489d37fe",
       *         "item": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *         "account": "2a56344a-a491-11ec-b909-0242ac120002",
       *         "contact": "c640b80b-fac9-409f-aa19-1f9221aec445",
       *         "description": "MacBook Pro",
       *         "exchange_rate": "2.9",
       *         "remote_was_deleted": false
       *       },
       *       {
       *         "remote_id": "121223",
       *         "net_amount": 10,
       *         "tracking_categories": [
       *           "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "item": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *         "account": "2a56344a-a491-11ec-b909-0242ac120002",
       *         "description": "Desk Lamp"
       *       }
       *     ] */
      lines?: components['schemas']['ExpenseLineRequest'][]
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The accounting period that the Expense was generated in.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      accounting_period?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    ExpenseResponse: {
      model: components['schemas']['Expense']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    ExternalTargetFieldAPI: {
      /** @example example_target_field_name */
      readonly name?: string | null
      /** @example this is a example description of a target field */
      readonly description?: string | null
      /** @example true */
      readonly is_mapped?: string | null
    }
    ExternalTargetFieldAPIResponse: {
      Account?: components['schemas']['ExternalTargetFieldAPI'][]
      AccountingAttachment?: components['schemas']['ExternalTargetFieldAPI'][]
      BalanceSheet?: components['schemas']['ExternalTargetFieldAPI'][]
      CashFlowStatement?: components['schemas']['ExternalTargetFieldAPI'][]
      CompanyInfo?: components['schemas']['ExternalTargetFieldAPI'][]
      Contact?: components['schemas']['ExternalTargetFieldAPI'][]
      IncomeStatement?: components['schemas']['ExternalTargetFieldAPI'][]
      CreditNote?: components['schemas']['ExternalTargetFieldAPI'][]
      Item?: components['schemas']['ExternalTargetFieldAPI'][]
      PurchaseOrder?: components['schemas']['ExternalTargetFieldAPI'][]
      TrackingCategory?: components['schemas']['ExternalTargetFieldAPI'][]
      JournalEntry?: components['schemas']['ExternalTargetFieldAPI'][]
      TaxRate?: components['schemas']['ExternalTargetFieldAPI'][]
      Invoice?: components['schemas']['ExternalTargetFieldAPI'][]
      Payment?: components['schemas']['ExternalTargetFieldAPI'][]
      Expense?: components['schemas']['ExternalTargetFieldAPI'][]
      VendorCredit?: components['schemas']['ExternalTargetFieldAPI'][]
      Transaction?: components['schemas']['ExternalTargetFieldAPI'][]
      AccountingPeriod?: components['schemas']['ExternalTargetFieldAPI'][]
      GeneralLedgerTransaction?: components['schemas']['ExternalTargetFieldAPI'][]
      BankFeedAccount?: components['schemas']['ExternalTargetFieldAPI'][]
      Employee?: components['schemas']['ExternalTargetFieldAPI'][]
    }
    /**
     * @description * `ACTIVE` - ACTIVE
     *     * `INACTIVE` - INACTIVE
     * @enum {string}
     */
    FeedStatusEnum: 'ACTIVE' | 'INACTIVE'
    /**
     * @description * `string` - string
     *     * `number` - number
     *     * `date` - date
     *     * `datetime` - datetime
     *     * `bool` - bool
     *     * `list` - list
     * @enum {string}
     */
    FieldFormatEnum: 'string' | 'number' | 'date' | 'datetime' | 'bool' | 'list'
    FieldMappingApiInstance: {
      /**
       * Format: uuid
       * @example 3fa85f64-5717-4562-b3fc-2c963f66afa6
       */
      readonly id?: string
      readonly is_integration_wide?: boolean
      /** @example {
       *       "name": "example_target_field_name",
       *       "description": "this is a example description of a target field",
       *       "is_organization_wide": true
       *     } */
      readonly target_field?: {
        name: string
        description: string
        is_organization_wide: boolean
      } | null
      /** @example {
       *       "remote_key_name": "example_remote_field_key",
       *       "schema": {
       *         "type": "string"
       *       },
       *       "remote_endpoint_info": {
       *         "method": "GET",
       *         "url_path": "/example-url-path",
       *         "field_traversal_path": [
       *           "example_remote_field_key"
       *         ]
       *       }
       *     } */
      readonly remote_field?: {
        remote_key_name: string | null
        schema: {
          [key: string]: unknown
        } | null
        remote_endpoint_info: {
          method: string | null
          url_path: string | null
          field_traversal_path: string[] | null
        }
      } | null
    }
    FieldMappingApiInstanceResponse: {
      Account?: components['schemas']['FieldMappingApiInstance'][]
      AccountingAttachment?: components['schemas']['FieldMappingApiInstance'][]
      BalanceSheet?: components['schemas']['FieldMappingApiInstance'][]
      CashFlowStatement?: components['schemas']['FieldMappingApiInstance'][]
      CompanyInfo?: components['schemas']['FieldMappingApiInstance'][]
      Contact?: components['schemas']['FieldMappingApiInstance'][]
      IncomeStatement?: components['schemas']['FieldMappingApiInstance'][]
      CreditNote?: components['schemas']['FieldMappingApiInstance'][]
      Item?: components['schemas']['FieldMappingApiInstance'][]
      PurchaseOrder?: components['schemas']['FieldMappingApiInstance'][]
      TrackingCategory?: components['schemas']['FieldMappingApiInstance'][]
      JournalEntry?: components['schemas']['FieldMappingApiInstance'][]
      TaxRate?: components['schemas']['FieldMappingApiInstance'][]
      Invoice?: components['schemas']['FieldMappingApiInstance'][]
      Payment?: components['schemas']['FieldMappingApiInstance'][]
      Expense?: components['schemas']['FieldMappingApiInstance'][]
      VendorCredit?: components['schemas']['FieldMappingApiInstance'][]
      Transaction?: components['schemas']['FieldMappingApiInstance'][]
      AccountingPeriod?: components['schemas']['FieldMappingApiInstance'][]
      GeneralLedgerTransaction?: components['schemas']['FieldMappingApiInstance'][]
      BankFeedAccount?: components['schemas']['FieldMappingApiInstance'][]
      Employee?: components['schemas']['FieldMappingApiInstance'][]
    }
    FieldMappingInstanceResponse: {
      model: components['schemas']['FieldMappingApiInstance']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    FieldPermissionDeserializer: {
      enabled_fields?: unknown[]
      disabled_fields?: unknown[]
    }
    FieldPermissionDeserializerRequest: {
      enabled_fields?: unknown[]
      disabled_fields?: unknown[]
    }
    /**
     * @description * `string` - string
     *     * `number` - number
     *     * `date` - date
     *     * `datetime` - datetime
     *     * `bool` - bool
     *     * `list` - list
     * @enum {string}
     */
    FieldTypeEnum: 'string' | 'number' | 'date' | 'datetime' | 'bool' | 'list'
    /** @description # The GeneralLedgerTransaction Object
     *     ### Description
     *     A General Ledger Entry is a record of a financial transaction that is posted to the general ledger, the central repository of a company’s financial data.
     *
     *     The `GeneralLedgerTransaction` object is a singular endpoint to pull all transactions posted to a company’s general ledger. The transaction that generated the `GeneralLedgerTransaction` can be found by referencing the `underlying_transaction_type` and `underlying_transaction_remote_id` fields.
     *
     *     The lines of a `GeneralLedgerTransaction` object will always have equal amounts of debits and credits.
     *
     *     ### Usage Example
     *     Fetch from the `GET GeneralLedgerTransaction` endpoint and view a general ledger transaction. */
    GeneralLedgerTransaction: {
      /**
       * Format: uuid
       * @example b26fd49a-cbae-470a-a8f8-bcbc119e0390
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 987300
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The third party remote ID of the underlying transaction.
       * @example 1234
       */
      underlying_transaction_remote_id?: string | null
      /**
       * @description The type of the underlying transaction.
       *
       *     * `INVOICE` - INVOICE
       *     * `EXPENSE` - EXPENSE
       *     * `TRANSACTION` - TRANSACTION
       *     * `JOURNAL_ENTRY` - JOURNAL_ENTRY
       *     * `PAYMENT` - PAYMENT
       *     * `VENDOR_CREDIT` - VENDOR_CREDIT
       *     * `CREDIT_NOTE` - CREDIT_NOTE
       * @example INVOICE
       */
      underlying_transaction_type?:
        | components['schemas']['UnderlyingTransactionTypeEnum']
        | null
      /**
       * Format: uuid
       * @description The accounting period that the GeneralLedgerTransaction was generated in.
       * @example d6e687d6-0c36-48a1-8114-35324b5cb38f
       */
      accounting_period?: string | null
      /**
       * Format: uuid
       * @description The company the GeneralLedgerTransaction belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: date-time
       * @description When the third party's GeneralLedgerTransaction entry was updated.
       * @example 2020-03-31T00:00:00Z
       */
      remote_updated_at?: string | null
      /**
       * Format: date-time
       * @description When the third party's GeneralLedgerTransaction entry was created.
       * @example 2020-03-31T00:00:00Z
       */
      remote_created_at?: string | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * Format: date-time
       * @description The date that the transaction was posted to the general ledger.
       * @example 2020-03-31T00:00:00Z
       */
      posting_date?: string | null
      /**
       * @description A list of “General Ledger Transaction Applied to Lines” objects.
       * @example [
       *       {
       *         "remote_id": "123",
       *         "account": "a47e11b6-c73b-4a0c-be31-130fc48177fa",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "contact": "d6e687d6-0c36-48a1-8114-35324b5cb38f",
       *         "base_currency": "USD",
       *         "transaction_currency": "USD",
       *         "description": "Invoice created",
       *         "exchange_rate": 1,
       *         "tracking_categories": [
       *           "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "debit_amount": 0,
       *         "crebit_amount": 123.5,
       *         "item": "a47e11b6-c73b-4a0c-be31-130fc48177fa",
       *         "foreign_debit_amount": 0,
       *         "foreign_credit_amount": 123.5,
       *         "remote_was_deleted": false,
       *         "remote_data": [
       *           {
       *             "path": "/actions",
       *             "data": [
       *               "Varies by platform"
       *             ]
       *           }
       *         ]
       *       }
       *     ]
       */
      readonly general_ledger_transaction_lines?: components['schemas']['GeneralLedgerTransactionLine'][]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /** @description # The GeneralLedgerTransactionLineSerializer Object
     *     ### Description
     *     The `GeneralLedgerTransactionLineSerializer` object represents general ledger transaction line item.
     *
     *     ### Usage Example Fetch from the `GET GeneralLedgerTransactionLineSerializer` endpoint and view an
     *     `GeneralLedgerTransaction` line item. */
    GeneralLedgerTransactionLine: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 123
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @example a47e11b6-c73b-4a0c-be31-130fc48177fa
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The company the GeneralLedgerTransaction belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @example 7442f0d5-722d-45bd-b807-6e38489d37fe
       */
      employee?: string | null
      /**
       * Format: uuid
       * @example d6e687d6-0c36-48a1-8114-35324b5cb38f
       */
      contact?: string | null
      /**
       * @description The base currency of the transaction
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      base_currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * @description The transaction currency that the transaction is made in.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      transaction_currency?:
        | components['schemas']['TransactionCurrencyEnum']
        | null
      /**
       * Format: decimal
       * @description The exchange rate between the base currency and the transaction currency.
       * @example 1
       */
      exchange_rate?: string | null
      /**
       * @description A description of the line item.
       * @example Invoice created
       */
      description?: string | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      readonly tracking_categories?: components['schemas']['TrackingCategory'][]
      /** Format: decimal */
      debit_amount: string
      /** Format: decimal */
      credit_amount: string
      /**
       * Format: uuid
       * @example a47e11b6-c73b-4a0c-be31-130fc48177fa
       */
      item?: string | null
      /** Format: decimal */
      foreign_debit_amount: string
      /**
       * Format: decimal
       * @example 123.5
       */
      foreign_credit_amount: string
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
    }
    /** @description # The GenerateRemoteKey Object
     *     ### Description
     *     The `GenerateRemoteKey` object is used to represent a request for a new remote key.
     *
     *     ### Usage Example
     *     Post a `GenerateRemoteKey` to create a new remote key. */
    GenerateRemoteKeyRequest: {
      /**
       * @description The name of the remote key
       * @example Remote Deployment Key 1
       */
      name: string
    }
    /** @description # The IncomeStatement Object
     *     ### Description
     *     The `IncomeStatement` object is used to represent a company’s income, the cost of sales, operating expenses, and other non-operating expenses. The object also includes other important values like gross profit, gross operating profit, and net income. This represents a period of time (month, quarter, or year).
     *
     *     ### Usage Example
     *     Fetch from the `GET IncomeStatement` endpoint and view a company's income statement for a given period. */
    IncomeStatement: {
      /**
       * Format: uuid
       * @example 0958cbc6-6040-430a-848e-aafacbadf4ae
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 1342348
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The income statement's name.
       * @example IncomeStatement
       */
      name?: string | null
      /**
       * @description The income statement's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description The company the income statement belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: date-time
       * @description The income statement's start period.
       */
      start_period?: string | null
      /**
       * Format: date-time
       * @description The income statement's end period.
       */
      end_period?: string | null
      /** @example [
       *       {
       *         "remote_id": "10299",
       *         "name": "Total Income",
       *         "value": 325,
       *         "sub_items": [
       *           {
       *             "remote_id": "10200",
       *             "name": "Landscaping Services",
       *             "value": 425,
       *             "sub_items": []
       *           },
       *           {
       *             "remote_id": "10201",
       *             "name": "Pest Control Services",
       *             "value": -100,
       *             "sub_items": []
       *           }
       *         ]
       *       }
       *     ] */
      readonly income?: components['schemas']['ReportItem'][]
      /** @example [
       *       {
       *         "remote_id": "10299",
       *         "name": "Total COGS",
       *         "value": 25,
       *         "sub_items": [
       *           {
       *             "remote_id": "10200",
       *             "name": "Supplies",
       *             "value": 10,
       *             "sub_items": []
       *           }
       *         ]
       *       }
       *     ] */
      readonly cost_of_sales?: components['schemas']['ReportItem'][]
      /**
       * Format: double
       * @description The revenue minus the cost of sale.
       * @example 300
       */
      gross_profit?: number | null
      /** @example [
       *       {
       *         "remote_id": "10299",
       *         "name": "Total Operating Expenses",
       *         "value": 100,
       *         "sub_items": []
       *       }
       *     ] */
      readonly operating_expenses?: components['schemas']['ReportItem'][]
      /**
       * Format: double
       * @description The revenue minus the operating expenses.
       * @example 200
       */
      net_operating_income?: number | null
      /** @example [
       *       {
       *         "remote_id": "10299",
       *         "name": "Total Non-Operating Expenses",
       *         "value": 100,
       *         "sub_items": []
       *       }
       *     ] */
      readonly non_operating_expenses?: components['schemas']['ReportItem'][]
      /**
       * Format: double
       * @description The gross profit minus the total expenses.
       * @example 100
       */
      net_income?: number | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    IndividualCommonModelScopeDeserializer: {
      model_name: string
      model_permissions?: {
        [key: string]: components['schemas']['ModelPermissionDeserializer']
      }
      field_permissions?: components['schemas']['FieldPermissionDeserializer']
    }
    IndividualCommonModelScopeDeserializerRequest: {
      model_name: string
      model_permissions?: {
        [
          key: string
        ]: components['schemas']['ModelPermissionDeserializerRequest']
      }
      field_permissions?: components['schemas']['FieldPermissionDeserializerRequest']
    }
    /** @description # The Invoice Object
     *     ### Description
     *     The `Invoice` object represents an itemized record of goods and/or services sold to a customer or bought from a vendor.
     *
     *
     *     Represents a Bill when the `Invoice` type is `ACCOUNTS_PAYABLE`. References an Invoice when the `Invoice` type is `ACCOUNTS_RECEIVABLE`.
     *
     *     ### Usage Example
     *     Fetch from the `LIST Invoices` endpoint and view a company's invoices. */
    Invoice: {
      /**
       * Format: uuid
       * @example 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 990110
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description Whether the invoice is an accounts receivable or accounts payable. If `type` is `ACCOUNTS_PAYABLE`, the invoice is a bill. If `type` is `ACCOUNTS_RECEIVABLE`, it is an invoice.
       *
       *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
       *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
       * @example ACCOUNTS_RECEIVABLE
       */
      type?: components['schemas']['InvoiceTypeEnum'] | null
      /**
       * Format: uuid
       * @description The invoice's contact.
       * @example 022a2bef-57e5-4def-8ed2-7c41bd9a5ed8
       */
      contact?: string | null
      /**
       * @description The invoice's number.
       * @example AIQ12546
       */
      number?: string | null
      /**
       * Format: date-time
       * @description The invoice's issue date.
       * @example 2020-03-31T00:00:00Z
       */
      issue_date?: string | null
      /**
       * Format: date-time
       * @description The invoice's due date.
       * @example 2020-04-15T00:00:00Z
       */
      due_date?: string | null
      /**
       * Format: date-time
       * @description The invoice's paid date.
       * @example 2020-04-01T00:00:00Z
       */
      paid_on_date?: string | null
      /**
       * @description The invoice's private note.
       * @example Weekly Payment
       */
      memo?: string | null
      /**
       * Format: uuid
       * @description The company the invoice belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @description The employee this overall transaction relates to.
       * @example 7442f0d5-722d-45bd-b807-6e38489d37fe
       */
      employee?: string | null
      /**
       * @description The invoice's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The invoice's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: double
       * @description The total discounts applied to the total cost.
       */
      total_discount?: number | null
      /**
       * Format: double
       * @description The total amount being paid before taxes.
       * @example 100
       */
      sub_total?: number | null
      /**
       * @description The status of the invoice.
       *
       *     * `PAID` - PAID
       *     * `DRAFT` - DRAFT
       *     * `SUBMITTED` - SUBMITTED
       *     * `PARTIALLY_PAID` - PARTIALLY_PAID
       *     * `OPEN` - OPEN
       *     * `VOID` - VOID
       * @example DRAFT
       */
      status?: components['schemas']['InvoiceStatusEnum'] | null
      /**
       * Format: double
       * @description The total amount being paid in taxes.
       * @example 5
       */
      total_tax_amount?: number | null
      /**
       * Format: double
       * @description The invoice's total amount.
       * @example 105
       */
      total_amount?: number | null
      /**
       * Format: double
       * @description The invoice's remaining balance.
       * @example 105
       */
      balance?: number | null
      /**
       * Format: date-time
       * @description When the third party's invoice entry was updated.
       * @example 2020-04-01T00:00:00Z
       */
      remote_updated_at?: string | null
      /** @example [
       *       "7dc5ca17-d311-44cd-9ce0-333080367a18",
       *       "6aa0700c-48e1-4c4a-8162-02e6a582df05",
       *       "8c933d61-8f5b-4360-ac0c-c9dc87bee763"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The accounting period that the Invoice was generated in.
       * @example 7dc5ca17-d311-44cd-9ce0-333080367a18
       */
      accounting_period?: string | null
      /** @example [
       *       "e7378d8f-3992-4c2a-8417-ebdc4f2bfeb7",
       *       "dd70ca2f-b120-46fa-889a-9604037f45fd",
       *       "889b281d-739c-4759-95b8-0aedb3947131"
       *     ] */
      purchase_orders?: (string | null)[]
      /**
       * @description Array of `Payment` object IDs.
       * @example [
       *       "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
       *     ]
       */
      payments?: (string | null)[]
      /**
       * @description A list of the Payment Applied to Lines common models related to a given Invoice, Credit Note, or Journal Entry.
       * @example [
       *       "9017594e-dc33-4113-a5d2-b0f928e34fdd"
       *     ]
       */
      applied_payments?: (string | null)[]
      /** @example [
       *       {
       *         "remote_id": "8765432",
       *         "description": "Pickleball lessons",
       *         "unit_price": 50,
       *         "quantity": 1,
       *         "total_amount": 50,
       *         "currency": "USD",
       *         "exchange_rate": "2.9",
       *         "employee": "7442f0d5-722d-45bd-b807-6e38489d37fe",
       *         "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384",
       *         "item": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
       *         "account": "cd0f32d4-a493-11ec-b909-0242ac120002",
       *         "tracking_categories": [
       *           "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "remote_data": [
       *           {
       *             "path": "/actions",
       *             "data": [
       *               "Varies by platform"
       *             ]
       *           }
       *         ]
       *       }
       *     ] */
      readonly line_items?: components['schemas']['InvoiceLineItem'][]
      /**
       * @description `CreditNoteApplyLines` applied to the Invoice.
       * @example [
       *       {
       *         "credit_note": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
       *         "applied_date": "2020-03-31T00:00:00Z",
       *         "applied_amount": 2.9
       *       }
       *     ]
       */
      readonly applied_credit_notes?: components['schemas']['CreditNoteApplyLineForInvoice'][]
      /**
       * @description `VendorCreditApplyLines` applied to the Invoice.
       * @example [
       *       {
       *         "vendor_credit": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
       *         "applied_date": "2020-03-31T00:00:00Z",
       *         "applied_amount": 2.9
       *       }
       *     ]
       */
      readonly applied_vendor_credits?: components['schemas']['VendorCreditApplyLineForInvoice'][]
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    InvoiceEndpointRequest: {
      model: components['schemas']['InvoiceRequest']
    }
    /** @description # The InvoiceLineItem Object
     *     ### Description
     *     The `InvoiceLineItem` object represents an itemized record of goods and/or services sold to a customer.
     *
     *     ### Usage Example
     *     Fetch from the `GET Invoice` endpoint and view the invoice's line items. */
    InvoiceLineItem: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 8765432
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The line item's description.
       * @example Pickleball lessons
       */
      description?: string | null
      /**
       * Format: double
       * @description The line item's unit price.
       * @example 50
       */
      unit_price?: number | null
      /**
       * Format: double
       * @description The line item's quantity.
       * @example 1
       */
      quantity?: number | null
      /**
       * Format: double
       * @description The line item's total amount.
       * @example 50
       */
      total_amount?: number | null
      /**
       * Format: uuid
       * @description The employee this overall transaction relates to.
       * @example 7442f0d5-722d-45bd-b807-6e38489d37fe
       */
      employee?: string | null
      /**
       * @description The line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      item?: string | null
      /**
       * Format: uuid
       * @example cd0f32d4-a493-11ec-b909-0242ac120002
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * Format: uuid
       * @deprecated
       */
      tracking_category?: string | null
      /**
       * @description The invoice line item's associated tracking categories.
       * @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The company the invoice belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    /** @description # The InvoiceLineItem Object
     *     ### Description
     *     The `InvoiceLineItem` object represents an itemized record of goods and/or services sold to a customer.
     *
     *     ### Usage Example
     *     Fetch from the `GET Invoice` endpoint and view the invoice's line items. */
    InvoiceLineItemRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 8765432
       */
      remote_id?: string | null
      /**
       * @description The line item's description.
       * @example Pickleball lessons
       */
      description?: string | null
      /**
       * Format: double
       * @description The line item's unit price.
       * @example 50
       */
      unit_price?: number | null
      /**
       * Format: double
       * @description The line item's quantity.
       * @example 1
       */
      quantity?: number | null
      /**
       * Format: double
       * @description The line item's total amount.
       * @example 50
       */
      total_amount?: number | null
      /**
       * Format: uuid
       * @description The employee this overall transaction relates to.
       * @example 7442f0d5-722d-45bd-b807-6e38489d37fe
       */
      employee?: string | null
      /**
       * @description The line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      item?: string | null
      /**
       * Format: uuid
       * @example cd0f32d4-a493-11ec-b909-0242ac120002
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * Format: uuid
       * @deprecated
       */
      tracking_category?: string | null
      /**
       * @description The invoice line item's associated tracking categories.
       * @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The company the invoice belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    /** @description # The Invoice Object
     *     ### Description
     *     The `Invoice` object represents an itemized record of goods and/or services sold to a customer or bought from a vendor.
     *
     *
     *     Represents a Bill when the `Invoice` type is `ACCOUNTS_PAYABLE`. References an Invoice when the `Invoice` type is `ACCOUNTS_RECEIVABLE`.
     *
     *     ### Usage Example
     *     Fetch from the `LIST Invoices` endpoint and view a company's invoices. */
    InvoiceRequest: {
      /** @description Whether the invoice is an accounts receivable or accounts payable. If `type` is `ACCOUNTS_PAYABLE`, the invoice is a bill. If `type` is `ACCOUNTS_RECEIVABLE`, it is an invoice.
       *
       *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
       *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE */
      type?: components['schemas']['InvoiceTypeEnum'] | null
      /**
       * Format: uuid
       * @description The invoice's contact.
       */
      contact?: string | null
      /** @description The invoice's number. */
      number?: string | null
      /**
       * Format: date-time
       * @description The invoice's issue date.
       */
      issue_date?: string | null
      /**
       * Format: date-time
       * @description The invoice's due date.
       */
      due_date?: string | null
      /**
       * Format: date-time
       * @description The invoice's paid date.
       */
      paid_on_date?: string | null
      /**
       * Format: uuid
       * @description The employee this overall transaction relates to.
       */
      employee?: string | null
      /** @description The invoice's private note. */
      memo?: string | null
      /** @description The status of the invoice.
       *
       *     * `PAID` - PAID
       *     * `DRAFT` - DRAFT
       *     * `SUBMITTED` - SUBMITTED
       *     * `PARTIALLY_PAID` - PARTIALLY_PAID
       *     * `OPEN` - OPEN
       *     * `VOID` - VOID */
      status?: components['schemas']['InvoiceStatusEnum'] | null
      /**
       * Format: uuid
       * @description The company the invoice belongs to.
       */
      company?: string | null
      /** @description The invoice's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009) */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The invoice's exchange rate.
       */
      exchange_rate?: string | null
      /**
       * Format: double
       * @description The total discounts applied to the total cost.
       */
      total_discount?: number | null
      /**
       * Format: double
       * @description The total amount being paid before taxes.
       */
      sub_total?: number | null
      /**
       * Format: double
       * @description The total amount being paid in taxes.
       */
      total_tax_amount?: number | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /**
       * Format: double
       * @description The invoice's total amount.
       */
      total_amount?: number | null
      /**
       * Format: double
       * @description The invoice's remaining balance.
       */
      balance?: number | null
      /** @description Array of `Payment` object IDs. */
      payments?: (string | null)[]
      tracking_categories?: (string | null)[]
      line_items?: components['schemas']['InvoiceLineItemRequest'][]
      purchase_orders?: (string | null)[]
      integration_params?: {
        [key: string]: unknown
      } | null
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    InvoiceResponse: {
      model: components['schemas']['Invoice']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /**
     * @description * `PAID` - PAID
     *     * `DRAFT` - DRAFT
     *     * `SUBMITTED` - SUBMITTED
     *     * `PARTIALLY_PAID` - PARTIALLY_PAID
     *     * `OPEN` - OPEN
     *     * `VOID` - VOID
     * @enum {string}
     */
    InvoiceStatusEnum:
      | 'PAID'
      | 'DRAFT'
      | 'SUBMITTED'
      | 'PARTIALLY_PAID'
      | 'OPEN'
      | 'VOID'
    /**
     * @description * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
     *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
     * @enum {string}
     */
    InvoiceTypeEnum: 'ACCOUNTS_RECEIVABLE' | 'ACCOUNTS_PAYABLE'
    Issue: {
      /**
       * Format: uuid
       * @example 3fa85f64-5717-4562-b3fc-2c963f66afa6
       */
      readonly id?: string
      /**
       * @description Status of the issue. Options: ('ONGOING', 'RESOLVED')
       *
       *     * `ONGOING` - ONGOING
       *     * `RESOLVED` - RESOLVED
       * @example ONGOING
       */
      status?: components['schemas']['IssueStatusEnum']
      /** @example Missing Permissions */
      error_description: string
      /** @example b82302de-852e-4e60-b050-edf9da3b7c02 */
      readonly end_user?: {
        [key: string]: unknown
      }
      /**
       * Format: date-time
       * @example 2022-12-05T16:19:15.161Z
       */
      first_incident_time?: string | null
      /**
       * Format: date-time
       * @example 2022-12-05T16:19:15.161Z
       */
      last_incident_time?: string | null
      /** @example true */
      readonly is_muted?: boolean
      /** @example [
       *       "Missing employee permissions.",
       *       "Missing time off permissions."
       *     ] */
      readonly error_details?: string[]
    }
    /**
     * @description * `ONGOING` - ONGOING
     *     * `RESOLVED` - RESOLVED
     * @enum {string}
     */
    IssueStatusEnum: 'ONGOING' | 'RESOLVED'
    /** @description # The Item Object
     *     ### Description
     *     The `Item` object refers to the goods involved in a transaction.
     *
     *     ### Usage Example
     *     Fetch from the `LIST Items` endpoint and view a company's items. */
    Item: {
      /**
       * Format: uuid
       * @example d2f972d0-2526-434b-9409-4c3b468e08f0
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 12374
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The item's name.
       * @example Pickleball Paddle
       */
      name?: string | null
      /**
       * @description The item's status.
       *
       *     * `ACTIVE` - ACTIVE
       *     * `ARCHIVED` - ARCHIVED
       * @example ACTIVE
       */
      status?: components['schemas']['Status7d1Enum'] | null
      /**
       * Format: double
       * @description The item's unit price.
       * @example 10
       */
      unit_price?: number | null
      /**
       * Format: double
       * @description The price at which the item is purchased from a vendor.
       * @example 25
       */
      purchase_price?: number | null
      /**
       * Format: uuid
       * @description References the default account used to record a purchase of the item.
       * @example 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
       */
      purchase_account?: string | null
      /**
       * Format: uuid
       * @description References the default account used to record a sale.
       * @example 3872b4c9-f5d2-4f3b-a66b-dfedbed42c49
       */
      sales_account?: string | null
      /**
       * Format: uuid
       * @description The company the item belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @description The default purchase tax rate for this item.
       * @example 983e8f97-9qw2-34v9-p123-67bdf98740v5
       */
      purchase_tax_rate?: string | null
      /**
       * Format: uuid
       * @description The default sales tax rate for this item.
       * @example 232c8f56-7se4-98f2-y334-12bdf89249f5
       */
      sales_tax_rate?: string | null
      /**
       * Format: date-time
       * @description When the third party's item note was updated.
       * @example 2020-03-31T00:00:00Z
       */
      remote_updated_at?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /**
     * @description * `string` - uuid
     *     * `number` - url
     *     * `date` - email
     *     * `datetime` - phone
     *     * `bool` - currency
     *     * `list` - decimal
     * @enum {string}
     */
    ItemFormatEnum: 'string' | 'number' | 'date' | 'datetime' | 'bool' | 'list'
    ItemSchema: {
      item_type?: components['schemas']['ItemTypeEnum']
      item_format?: components['schemas']['ItemFormatEnum']
      item_choices?: string[]
    }
    /**
     * @description * `string` - string
     *     * `number` - number
     *     * `date` - date
     *     * `datetime` - datetime
     *     * `bool` - bool
     *     * `list` - list
     * @enum {string}
     */
    ItemTypeEnum: 'string' | 'number' | 'date' | 'datetime' | 'bool' | 'list'
    /** @description # The JournalEntry Object
     *     ### Description
     *     A `JournalEntry` is a record of a transaction or event that is entered into a company's accounting system.
     *
     *     The `JournalEntry` common model contains records that are automatically created as a result of a certain type of transaction, like an Invoice, and records that are manually created against a company’s ledger.
     *
     *     The lines of a given `JournalEntry` object should always sum to 0. A positive `net_amount` means the line represents a debit and a negative net_amount represents a credit.
     *
     *     ### Usage Example
     *     Fetch from the `GET JournalEntry` endpoint and view a company's journey entry. */
    JournalEntry: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: date-time
       * @description The journal entry's transaction date.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * @description Array of `Payment` object IDs.
       * @example [
       *       "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
       *     ]
       */
      payments?: (string | null)[]
      /**
       * @description A list of the Payment Applied to Lines common models related to a given Invoice, Credit Note, or Journal Entry.
       * @example [
       *       "4311155d-f236-4a5d-9e0f-1cb167e38f95"
       *     ]
       */
      applied_payments?: (string | null)[]
      /**
       * @description The journal entry's private note.
       * @example Weekly Payment
       */
      memo?: string | null
      /**
       * @description The journal's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The journal entry's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the journal entry belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /** @example [
       *       {
       *         "remote_id": "121222",
       *         "account": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
       *         "net_amount": 25.54,
       *         "tracking_categories": [
       *           "d25d609b-945f-4762-b55a-1c8fb220c43c",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384",
       *         "contact": "d2d5ea3c-b032-11ec-b909-0242ac120002",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "employee": "123c8r35-5kf5-12x5-r833-99bwf35210b5",
       *         "description": "Cash payment for lunch",
       *         "exchange_rate": "2.9",
       *         "remote_was_deleted": false
       *       },
       *       {
       *         "remote_id": "121223",
       *         "account": "f963f34d-3d2f-4f77-b557-cf36bc7e6498",
       *         "net_amount": 10
       *       }
       *     ] */
      readonly lines?: components['schemas']['JournalLine'][]
      /**
       * @description Reference number for identifying journal entries.
       * @example 42
       */
      journal_number?: string | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /**
       * @description The journal's posting status.
       *
       *     * `UNPOSTED` - UNPOSTED
       *     * `POSTED` - POSTED
       * @example POSTED
       */
      posting_status?: components['schemas']['PostingStatusEnum'] | null
      /**
       * Format: uuid
       * @description The accounting period that the JournalEntry was generated in.
       * @example 655c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      accounting_period?: string | null
      /**
       * Format: date-time
       * @description When the third party's journal entry was created.
       * @example 2020-03-31T00:00:00Z
       */
      remote_created_at?: string | null
      /**
       * Format: date-time
       * @description When the third party's journal entry was updated.
       * @example 2020-03-31T00:00:00Z
       */
      remote_updated_at?: string | null
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    JournalEntryEndpointRequest: {
      model: components['schemas']['JournalEntryRequest']
    }
    /** @description # The JournalEntry Object
     *     ### Description
     *     The `JournalEntry` object is used to get a record of all manually created entries made in a company’s general ledger. The journal line items for each journal entry should sum to zero.
     *
     *     ### Usage Example
     *     Fetch from the `GET JournalEntry` endpoint and view a company's journey entry. */
    JournalEntryRequest: {
      /**
       * Format: date-time
       * @description The journal entry's transaction date.
       */
      transaction_date?: string | null
      /** @description Array of `Payment` object IDs. */
      payments?: (string | null)[]
      /** @description The journal entry's private note. */
      memo?: string | null
      /** @description The journal's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009) */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The journal entry's exchange rate.
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the journal entry belongs to.
       */
      company?: string | null
      tracking_categories?: (string | null)[]
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      lines?: components['schemas']['JournalLineRequest'][]
      /** @description Reference number for identifying journal entries. */
      journal_number?: string | null
      /** @description The journal's posting status.
       *
       *     * `UNPOSTED` - UNPOSTED
       *     * `POSTED` - POSTED */
      posting_status?: components['schemas']['PostingStatusEnum'] | null
      integration_params?: {
        [key: string]: unknown
      } | null
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    JournalEntryResponse: {
      model: components['schemas']['JournalEntry']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /** @description # The JournalLine Object
     *     ### Description
     *     The `JournalLine` object is used to represent a journal entry's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET JournalEntry` endpoint and view the journal entry's line items. */
    JournalLine: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @example 9d892439-5fab-4dbb-8bd8-34f7f96c7912
       */
      account?: string | null
      /**
       * Format: double
       * @description The value of the line item including taxes and other fees.
       * @example 25.54
       */
      net_amount?: number | null
      /**
       * Format: uuid
       * @deprecated
       */
      tracking_category?: string | null
      /**
       * @description The journal line item's associated tracking categories.
       * @example [
       *       "d25d609b-945f-4762-b55a-1c8fb220c43c",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /** @description The journal line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009) */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description The company the journal entry belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @example 123c8r35-5kf5-12x5-r833-99bwf35210b5
       */
      employee?: string | null
      /**
       * Format: uuid
       * @example d2d5ea3c-b032-11ec-b909-0242ac120002
       */
      contact?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * @description The line's description.
       * @example Cash payment for lunch
       */
      description?: string | null
      /**
       * Format: decimal
       * @description The journal line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    /** @description # The JournalLine Object
     *     ### Description
     *     The `JournalLine` object is used to represent a journal entry's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET JournalEntry` endpoint and view the journal entry's line items. */
    JournalLineRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: uuid
       * @example 9d892439-5fab-4dbb-8bd8-34f7f96c7912
       */
      account?: string | null
      /**
       * Format: double
       * @description The value of the line item including taxes and other fees.
       * @example 25.54
       */
      net_amount?: number | null
      /**
       * Format: uuid
       * @deprecated
       */
      tracking_category?: string | null
      /**
       * @description The journal line item's associated tracking categories.
       * @example [
       *       "d25d609b-945f-4762-b55a-1c8fb220c43c",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /** @description The journal line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009) */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description The company the journal entry belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @example 123c8r35-5kf5-12x5-r833-99bwf35210b5
       */
      employee?: string | null
      /**
       * Format: uuid
       * @example d2d5ea3c-b032-11ec-b909-0242ac120002
       */
      contact?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * @description The line's description.
       * @example Cash payment for lunch
       */
      description?: string | null
      /**
       * Format: decimal
       * @description The journal line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    /**
     * @description * `en` - en
     *     * `de` - de
     * @enum {string}
     */
    LanguageEnum: 'en' | 'de'
    LinkToken: {
      /** @example necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0 */
      link_token: string
      /** @example Lever */
      integration_name?: string
      /** @example https://link.merge.dev/asdfjkl12345jsndfgi2i83n */
      magic_link_url?: string
    }
    LinkedAccountCommonModelScopeDeserializerRequest: {
      /**
       * @description The common models you want to update the scopes for
       * @example [
       *       {
       *         "model_name": "Employee",
       *         "model_permissions": {
       *           "READ": {
       *             "is_enabled": true
       *           },
       *           "WRITE": {
       *             "is_enabled": false
       *           }
       *         },
       *         "field_permissions": {
       *           "enabled_fields": [
       *             "avatar",
       *             "home_location"
       *           ],
       *           "disabled_fields": [
       *             "work_location"
       *           ]
       *         }
       *       },
       *       {
       *         "model_name": "Benefit",
       *         "model_permissions": {
       *           "WRITE": {
       *             "is_enabled": false
       *           }
       *         }
       *       }
       *     ]
       */
      common_models: components['schemas']['IndividualCommonModelScopeDeserializerRequest'][]
    }
    LinkedAccountStatus: {
      linked_account_status: string
      can_make_request: boolean
    }
    MetaResponse: {
      /** @example {
       *       "type": "object",
       *       "properties": {
       *         "model": {
       *           "type": "object",
       *           "required": [
       *             "last_name",
       *             "first_name",
       *             "merge_categories",
       *             "new_york_city_neighborhood",
       *             "favorite_tv_shows",
       *             "favorite_watch"
       *           ],
       *           "properties": {
       *             "email_addresses": {
       *               "type": "array",
       *               "items": {
       *                 "type": "object",
       *                 "properties": {
       *                   "value": {
       *                     "type": "string",
       *                     "title": "value"
       *                   },
       *                   "email_address_type": {
       *                     "type": "string",
       *                     "title": "email_address_type"
       *                   },
       *                   "integration_params": {
       *                     "type": "object",
       *                     "title": "integration_params",
       *                     "properties": {}
       *                   },
       *                   "linked_account_params": {
       *                     "type": "object",
       *                     "title": "linked_account_params",
       *                     "properties": {}
       *                   }
       *                 }
       *               },
       *               "title": "email_addresses",
       *               "description": "Array of email_addresses objects"
       *             },
       *             "urls": {
       *               "type": "array",
       *               "items": {
       *                 "type": "object",
       *                 "properties": {
       *                   "value": {
       *                     "type": "string",
       *                     "title": "value"
       *                   },
       *                   "url_type": {
       *                     "type": "string",
       *                     "title": "url_type"
       *                   },
       *                   "integration_params": {
       *                     "type": "object",
       *                     "title": "integration_params",
       *                     "properties": {}
       *                   },
       *                   "linked_account_params": {
       *                     "type": "object",
       *                     "title": "linked_account_params",
       *                     "properties": {}
       *                   }
       *                 }
       *               },
       *               "title": "urls",
       *               "description": "Array of urls objects"
       *             },
       *             "first_name": {
       *               "type": "string",
       *               "title": "first_name",
       *               "description": "The first name."
       *             },
       *             "last_name": {
       *               "type": "string",
       *               "title": "last_name",
       *               "description": "The last name."
       *             },
       *             "phone_numbers": {
       *               "type": "array",
       *               "items": {
       *                 "type": "object",
       *                 "properties": {
       *                   "value": {
       *                     "type": "string",
       *                     "title": "value"
       *                   },
       *                   "phone_number_type": {
       *                     "type": "string",
       *                     "title": "phone_number_type"
       *                   },
       *                   "integration_params": {
       *                     "type": "object",
       *                     "title": "integration_params",
       *                     "properties": {}
       *                   },
       *                   "linked_account_params": {
       *                     "type": "object",
       *                     "title": "linked_account_params",
       *                     "properties": {}
       *                   }
       *                 }
       *               },
       *               "title": "phone_numbers",
       *               "description": "Array of phone_numbers objects"
       *             },
       *             "tags": {
       *               "type": "array",
       *               "items": {
       *                 "type": "string",
       *                 "format": "uuid"
       *               },
       *               "title": "tags",
       *               "description": "Array of tags names"
       *             },
       *             "attachments": {
       *               "type": "array",
       *               "items": {
       *                 "type": "object",
       *                 "properties": {
       *                   "id": {
       *                     "type": "string",
       *                     "title": "id"
       *                   },
       *                   "file_url": {
       *                     "type": "string",
       *                     "title": "file_url"
       *                   },
       *                   "file_name": {
       *                     "type": "string",
       *                     "title": "file_name"
       *                   },
       *                   "attachment_type": {
       *                     "type": "string",
       *                     "title": "attachment_type"
       *                   },
       *                   "integration_params": {
       *                     "type": "object",
       *                     "title": "integration_params",
       *                     "properties": {}
       *                   },
       *                   "linked_account_params": {
       *                     "type": "object",
       *                     "title": "linked_account_params",
       *                     "properties": {}
       *                   }
       *                 }
       *               },
       *               "title": "attachments",
       *               "description": "Array of attachments objects "
       *             },
       *             "merge_categories": {
       *               "type": "array",
       *               "categories": {
       *                 "type": "string",
       *                 "enum": [
       *                   "HRIS",
       *                   "ATS",
       *                   "Accounting",
       *                   "Ticketing",
       *                   "File Storage",
       *                   "CRM",
       *                   "Marketing Automation"
       *                 ],
       *                 "enum_information": [
       *                   {
       *                     "value": "HRIS",
       *                     "description": "Merge HRIS Category"
       *                   },
       *                   {
       *                     "value": "ATS",
       *                     "description": "Merge ATS Category"
       *                   },
       *                   {
       *                     "value": "Accounting",
       *                     "description": "Merge Accounting Category"
       *                   },
       *                   {
       *                     "value": "Ticketing",
       *                     "description": "Merge Ticketing Category"
       *                   },
       *                   {
       *                     "value": "File Storage",
       *                     "description": "Merge File Storage Category"
       *                   },
       *                   {
       *                     "value": "CRM",
       *                     "description": "Merge CRM Category"
       *                   },
       *                   {
       *                     "value": "Marketing Automation",
       *                     "description": "Merge Marketing Automation Category"
       *                   }
       *                 ]
       *               },
       *               "title": "Merge Categories",
       *               "description": "Array of Merge's Unified API Categories"
       *             },
       *             "new_york_city_neighborhood": {
       *               "type": "string",
       *               "title": "Borough",
       *               "description": "One of the 5 Boroughs of New York City"
       *             },
       *             "favorite_tv_shows": {
       *               "type": "array",
       *               "items": {
       *                 "type": "string",
       *                 "format": "uuid"
       *               },
       *               "title": "Favorite TV Shows",
       *               "description": "Array of TV Show objects on merge.tv_shows"
       *             },
       *             "favorite_watch": {
       *               "type": "string",
       *               "title": "Favorite Watch",
       *               "description": "Favorite watch of all time"
       *             }
       *           }
       *         }
       *       }
       *     } */
      request_schema: {
        [key: string]: unknown
      }
      remote_field_classes?: {
        [key: string]: unknown
      }
      /** @example {
       *       "linked_account_status": "COMPLETE",
       *       "can_make_request": true
       *     } */
      status?: components['schemas']['LinkedAccountStatus']
      has_conditional_params: boolean
      has_required_linked_account_params: boolean
    }
    /**
     * @description * `GET` - GET
     *     * `OPTIONS` - OPTIONS
     *     * `HEAD` - HEAD
     *     * `POST` - POST
     *     * `PUT` - PUT
     *     * `PATCH` - PATCH
     *     * `DELETE` - DELETE
     * @enum {string}
     */
    MethodEnum: 'GET' | 'OPTIONS' | 'HEAD' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'
    /** @description # The ModelOperation Object
     *     ### Description
     *     The `ModelOperation` object is used to represent the operations that are currently supported for a given model.
     *
     *     ### Usage Example
     *     View what operations are supported for the `Candidate` endpoint. */
    ModelOperation: {
      /** @example Candidate */
      model_name: string
      /** @example [
       *       "FETCH",
       *       "CREATE"
       *     ] */
      available_operations: string[]
      /** @example [
       *       "remote_user_id"
       *     ] */
      required_post_parameters: string[]
      /** @example [
       *       "first_name",
       *       "last_name",
       *       "company",
       *       "title"
       *     ] */
      supported_fields: string[]
    }
    ModelPermissionDeserializer: {
      is_enabled?: boolean
    }
    ModelPermissionDeserializerRequest: {
      is_enabled?: boolean
    }
    /** @description # The MultipartFormField Object
     *     ### Description
     *     The `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.
     *
     *     ### Usage Example
     *     Create a `MultipartFormField` to define a multipart form entry. */
    MultipartFormFieldRequest: {
      /**
       * @description The name of the form field
       * @example resume
       */
      name: string
      /**
       * @description The data for the form field.
       * @example SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U=
       */
      data: string
      /**
       * @description The encoding of the value of `data`. Defaults to `RAW` if not defined.
       *
       *     * `RAW` - RAW
       *     * `BASE64` - BASE64
       *     * `GZIP_BASE64` - GZIP_BASE64
       * @default RAW
       * @example BASE64
       */
      encoding: components['schemas']['EncodingEnum']
      /**
       * @description The file name of the form field, if the field is for a file.
       * @example resume.pdf
       */
      file_name?: string | null
      /**
       * @description The MIME type of the file, if the field is for a file.
       * @example application/pdf
       */
      content_type?: string | null
    }
    PaginatedAccountDetailsAndActionsList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['AccountDetailsAndActions'][]
    }
    PaginatedAccountList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Account'][]
    }
    PaginatedAccountingAttachmentList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['AccountingAttachment'][]
    }
    PaginatedAccountingPeriodList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['AccountingPeriod'][]
    }
    PaginatedAuditLogEventList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['AuditLogEvent'][]
    }
    PaginatedBalanceSheetList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['BalanceSheet'][]
    }
    PaginatedBankFeedAccountList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['BankFeedAccount'][]
    }
    PaginatedBankFeedTransactionList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['BankFeedTransaction'][]
    }
    PaginatedCashFlowStatementList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['CashFlowStatement'][]
    }
    PaginatedCompanyInfoList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['CompanyInfo'][]
    }
    PaginatedContactList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Contact'][]
    }
    PaginatedCreditNoteList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['CreditNote'][]
    }
    PaginatedEmployeeList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Employee'][]
    }
    PaginatedExpenseList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Expense'][]
    }
    PaginatedGeneralLedgerTransactionList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['GeneralLedgerTransaction'][]
    }
    PaginatedIncomeStatementList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['IncomeStatement'][]
    }
    PaginatedInvoiceList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Invoice'][]
    }
    PaginatedIssueList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Issue'][]
    }
    PaginatedItemList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Item'][]
    }
    PaginatedJournalEntryList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['JournalEntry'][]
    }
    PaginatedPaymentList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Payment'][]
    }
    PaginatedPurchaseOrderList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['PurchaseOrder'][]
    }
    PaginatedRemoteFieldClassList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['RemoteFieldClass'][]
    }
    PaginatedSyncStatusList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['SyncStatus'][]
    }
    PaginatedTaxRateList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['TaxRate'][]
    }
    PaginatedTrackingCategoryList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['TrackingCategory'][]
    }
    PaginatedTransactionList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['Transaction'][]
    }
    PaginatedVendorCreditList: {
      /** @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw */
      next?: string | null
      /** @example cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ */
      previous?: string | null
      results?: components['schemas']['VendorCredit'][]
    }
    PatchedEditFieldMappingRequest: {
      /**
       * @description The field traversal path of the remote field listed when you hit the GET /remote-fields endpoint.
       * @example [
       *       "example_remote_field_name"
       *     ]
       */
      remote_field_traversal_path?: unknown[]
      /**
       * @description The method of the remote endpoint where the remote field is coming from.
       * @example GET
       */
      remote_method?: string
      /**
       * @description The path of the remote endpoint where the remote field is coming from.
       * @example /example-url-path
       */
      remote_url_path?: string
    }
    PatchedInvoiceEndpointRequest: {
      model: components['schemas']['InvoiceRequest']
    }
    PatchedPaymentEndpointRequest: {
      model: components['schemas']['PatchedPaymentRequest']
    }
    /** @description # The Payment Object
     *     ### Description
     *     The `Payment` object represents general payments made towards a specific transaction.
     *
     *     ### Usage Example
     *     Fetch from the `GET Payment` endpoint and view an invoice's payment. */
    PatchedPaymentRequest: {
      /**
       * Format: date-time
       * @description The payment's transaction date.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * Format: uuid
       * @description The supplier, or customer involved in the payment.
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      contact?: string | null
      /**
       * Format: uuid
       * @description The supplier’s or customer’s account in which the payment is made.
       * @example d6e687d6-0c36-48a1-8114-35324b5cb38f
       */
      account?: string | null
      /**
       * @description The payment's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example FKP
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The payment's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the payment belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: double
       * @description The total amount of money being paid to the supplier, or customer, after taxes.
       * @example 50
       */
      total_amount?: number | null
      /**
       * @description The type of the invoice.
       *
       *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
       *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
       * @example ACCOUNTS_PAYABLE
       */
      type?: components['schemas']['PaymentTypeEnum'] | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The accounting period that the Payment was generated in.
       * @example b38c59b0-a9d7-4740-b1ee-5436c6751e3d
       */
      accounting_period?: string | null
      /**
       * @description A list of “Payment Applied to Lines” objects.
       * @example [
       *       {
       *         "remote_id": "234",
       *         "applied_amount": 25,
       *         "related_object_id": "a47e11b6-c73b-4a0c-be31-130fc48177fa",
       *         "related_object_type": "INVOICE",
       *         "applied_date": "2020-03-31T00:00:00Z"
       *       },
       *       {
       *         "remote_id": "235",
       *         "applied_amount": 25,
       *         "related_object_id": "9b96a886-29a5-452b-8733-2a1e03497cf4",
       *         "related_object_type": "CREDIT_NOTE",
       *         "applied_date": "2020-03-31T00:00:00Z"
       *       }
       *     ]
       */
      applied_to_lines?: components['schemas']['PaymentLineItemRequest'][]
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    /** @description # The Payment Object
     *     ### Description
     *     The `Payment` object represents general payments made towards a specific transaction.
     *
     *     ### Usage Example
     *     Fetch from the `GET Payment` endpoint and view an invoice's payment. */
    Payment: {
      /**
       * Format: uuid
       * @example b26fd49a-cbae-470a-a8f8-bcbc119e0390
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 987300
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: date-time
       * @description The payment's transaction date.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * Format: uuid
       * @description The supplier, or customer involved in the payment.
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      contact?: string | null
      /**
       * Format: uuid
       * @description The supplier’s or customer’s account in which the payment is made.
       * @example d6e687d6-0c36-48a1-8114-35324b5cb38f
       */
      account?: string | null
      /**
       * @description The payment's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example FKP
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The payment's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the payment belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: double
       * @description The total amount of money being paid to the supplier, or customer, after taxes.
       * @example 50
       */
      total_amount?: number | null
      /**
       * @description The type of the invoice.
       *
       *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
       *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
       * @example ACCOUNTS_PAYABLE
       */
      type?: components['schemas']['PaymentTypeEnum'] | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The accounting period that the Payment was generated in.
       * @example b38c59b0-a9d7-4740-b1ee-5436c6751e3d
       */
      accounting_period?: string | null
      /**
       * @description A list of “Payment Applied to Lines” objects.
       * @example [
       *       {
       *         "remote_id": "234",
       *         "applied_amount": 25,
       *         "related_object_id": "a47e11b6-c73b-4a0c-be31-130fc48177fa",
       *         "related_object_type": "INVOICE",
       *         "applied_date": "2020-03-31T00:00:00Z"
       *       },
       *       {
       *         "remote_id": "235",
       *         "applied_amount": 25,
       *         "related_object_id": "9b96a886-29a5-452b-8733-2a1e03497cf4",
       *         "related_object_type": "CREDIT_NOTE",
       *         "applied_date": "2020-03-31T00:00:00Z"
       *       }
       *     ]
       */
      applied_to_lines?: components['schemas']['PaymentLineItem'][]
      /**
       * Format: date-time
       * @description When the third party's payment entry was updated.
       * @example 2020-03-31T00:00:00Z
       */
      remote_updated_at?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    PaymentEndpointRequest: {
      model: components['schemas']['PaymentRequest']
    }
    /** @description # The PaymentLineItem Object
     *     ### Description
     *     The `PaymentLineItem` object is an applied-to-line on a `Payment` that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.
     *
     *     ### Usage Example
     *     `Payment` will have a field called `applied-to-lines` which will be an array of `PaymentLineItemInternalMappingSerializer` objects that can either be a `Invoice`, `CreditNote`, or `JournalEntry`. */
    PaymentLineItem: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 234
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: decimal
       * @description The amount being applied to the transaction.
       * @example 25
       */
      applied_amount?: string | null
      /**
       * Format: date-time
       * @description The date the payment portion is applied.
       * @example 2020-03-31T00:00:00Z
       */
      applied_date?: string | null
      /**
       * Format: uuid
       * @description The Merge ID of the transaction the payment portion is being applied to.
       * @example 92e8a369-fffe-430d-b93a-f7e8a16563f1
       */
      related_object_id?: string
      /**
       * @description The type of transaction the payment portion is being applied to. Possible values include: INVOICE, JOURNAL_ENTRY, or CREDIT_NOTE.
       * @example INVOICE
       */
      related_object_type?: string
    }
    /** @description # The PaymentLineItem Object
     *     ### Description
     *     The `PaymentLineItem` object is an applied-to-line on a `Payment` that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.
     *
     *     ### Usage Example
     *     `Payment` will have a field called `applied-to-lines` which will be an array of `PaymentLineItemInternalMappingSerializer` objects that can either be a `Invoice`, `CreditNote`, or `JournalEntry`. */
    PaymentLineItemRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 234
       */
      remote_id?: string | null
      /**
       * Format: decimal
       * @description The amount being applied to the transaction.
       * @example 25
       */
      applied_amount?: string | null
      /**
       * Format: date-time
       * @description The date the payment portion is applied.
       * @example 2020-03-31T00:00:00Z
       */
      applied_date?: string | null
      /**
       * Format: uuid
       * @description The Merge ID of the transaction the payment portion is being applied to.
       * @example 92e8a369-fffe-430d-b93a-f7e8a16563f1
       */
      related_object_id?: string
      /**
       * @description The type of transaction the payment portion is being applied to. Possible values include: INVOICE, JOURNAL_ENTRY, or CREDIT_NOTE.
       * @example INVOICE
       */
      related_object_type?: string
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    /** @description # The Payment Object
     *     ### Description
     *     The `Payment` object represents general payments made towards a specific transaction.
     *
     *     ### Usage Example
     *     Fetch from the `GET Payment` endpoint and view an invoice's payment. */
    PaymentRequest: {
      /**
       * Format: date-time
       * @description The payment's transaction date.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * Format: uuid
       * @description The supplier, or customer involved in the payment.
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      contact?: string | null
      /**
       * Format: uuid
       * @description The supplier’s or customer’s account in which the payment is made.
       * @example d6e687d6-0c36-48a1-8114-35324b5cb38f
       */
      account?: string | null
      /**
       * @description The payment's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example FKP
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The payment's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the payment belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: double
       * @description The total amount of money being paid to the supplier, or customer, after taxes.
       * @example 50
       */
      total_amount?: number | null
      /**
       * @description The type of the invoice.
       *
       *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
       *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
       * @example ACCOUNTS_PAYABLE
       */
      type?: components['schemas']['PaymentTypeEnum'] | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The accounting period that the Payment was generated in.
       * @example b38c59b0-a9d7-4740-b1ee-5436c6751e3d
       */
      accounting_period?: string | null
      /**
       * @description A list of “Payment Applied to Lines” objects.
       * @example [
       *       {
       *         "remote_id": "234",
       *         "applied_amount": 25,
       *         "related_object_id": "a47e11b6-c73b-4a0c-be31-130fc48177fa",
       *         "related_object_type": "INVOICE",
       *         "applied_date": "2020-03-31T00:00:00Z"
       *       },
       *       {
       *         "remote_id": "235",
       *         "applied_amount": 25,
       *         "related_object_id": "9b96a886-29a5-452b-8733-2a1e03497cf4",
       *         "related_object_type": "CREDIT_NOTE",
       *         "applied_date": "2020-03-31T00:00:00Z"
       *       }
       *     ]
       */
      applied_to_lines?: components['schemas']['PaymentLineItemRequest'][]
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    PaymentResponse: {
      model: components['schemas']['Payment']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /**
     * @description * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
     *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
     * @enum {string}
     */
    PaymentTypeEnum: 'ACCOUNTS_PAYABLE' | 'ACCOUNTS_RECEIVABLE'
    /**
     * @description * `UNPOSTED` - UNPOSTED
     *     * `POSTED` - POSTED
     * @enum {string}
     */
    PostingStatusEnum: 'UNPOSTED' | 'POSTED'
    /** @description # The PurchaseOrder Object
     *     ### Description
     *     A `PurchaseOrder` represents a request to purchase goods or services from a vendor. It outlines the details of the purchase, such as the items or services requested, quantities, prices, and delivery details.
     *
     *     A `PurchaseOrder` is a crucial component of the procurement process, but does not typically result in any impact on the company’s general ledger. The general ledger is typically only affected when the `PurchaseOrder` is fulfilled as an *Accounts Payable* `Invoice` object (also known as a Bill).
     *
     *     ### Usage Example
     *     Fetch from the `LIST PurchaseOrders` endpoint and view a company's purchase orders. */
    PurchaseOrder: {
      /**
       * Format: uuid
       * @example 0048ea5b-911e-4dff-9364-92070dea62ff
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 239741
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The purchase order's status.
       *
       *     * `DRAFT` - DRAFT
       *     * `SUBMITTED` - SUBMITTED
       *     * `AUTHORIZED` - AUTHORIZED
       *     * `BILLED` - BILLED
       *     * `DELETED` - DELETED
       * @example SUBMITTED
       */
      status?: components['schemas']['PurchaseOrderStatusEnum'] | null
      /**
       * Format: date-time
       * @description The purchase order's issue date.
       * @example 2020-03-31T00:00:00Z
       */
      issue_date?: string | null
      /**
       * @description The human-readable number of the purchase order.
       * @example PO1234
       */
      purchase_order_number?: string | null
      /**
       * Format: date-time
       * @description The purchase order's delivery date.
       * @example 2020-04-15T00:00:00Z
       */
      delivery_date?: string | null
      /**
       * Format: uuid
       * @description The purchase order's delivery address.
       * @example {
       *       "street_1": "2920 Broadway",
       *       "street_2": "2nd Floor",
       *       "city": "New York",
       *       "state": "NY",
       *       "country": "US",
       *       "zip_code": "10027"
       *     }
       */
      delivery_address?: string | null
      /**
       * Format: uuid
       * @description The contact making the purchase order.
       * @example 3e442c5d-8f51-4103-b5c9-dcee39c30a08
       */
      customer?: string | null
      /**
       * Format: uuid
       * @description The party fulfilling the purchase order.
       * @example 2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b
       */
      vendor?: string | null
      /**
       * @description A memo attached to the purchase order.
       * @example private note
       */
      memo?: string | null
      /**
       * Format: uuid
       * @description The company the purchase order belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: double
       * @description The purchase order's total amount.
       * @example 260
       */
      total_amount?: number | null
      /**
       * @description The purchase order's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The purchase order's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @example [
       *       {
       *         "remote_id": "121222",
       *         "description": "Pickleball paddles",
       *         "unit_price": 25,
       *         "quantity": 10,
       *         "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384",
       *         "item": "0958cbc6-6040-430a-848e-aafacbadf4ae",
       *         "tracking_categories": [
       *           "f1214c24-2702-4617-b74b-3ddecfc0d384",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "tax_amount": 10,
       *         "total_line_amount": 260,
       *         "currency": "USD",
       *         "exchange_rate": "2.9",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "remote_was_deleted": false
       *       },
       *       {
       *         "description": "Pickleball Balls",
       *         "unit_price": 1,
       *         "quantity": 10,
       *         "item": "249c9faa-3045-4a31-953b-8f22d3613301",
       *         "tracking_categories": [
       *           "f1214c24-2702-4617-b74b-3ddecfc0d384",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "tax_amount": 10,
       *         "total_line_amount": 20
       *       }
       *     ] */
      readonly line_items?: components['schemas']['PurchaseOrderLineItem'][]
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * Format: uuid
       * @description The accounting period that the PurchaseOrder was generated in.
       * @example 2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b
       */
      accounting_period?: string | null
      /**
       * Format: date-time
       * @description When the third party's purchase order note was created.
       * @example 2020-03-31T00:00:00Z
       */
      remote_created_at?: string | null
      /**
       * Format: date-time
       * @description When the third party's purchase order note was updated.
       * @example 2020-03-31T00:00:00Z
       */
      remote_updated_at?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    PurchaseOrderEndpointRequest: {
      model: components['schemas']['PurchaseOrderRequest']
    }
    /** @description # The PurchaseOrderLineItem Object
     *     ### Description
     *     The `PurchaseOrderLineItem` object is used to represent a purchase order's line item.
     *
     *     ### Usage Example
     *     Fetch from the `GET PurchaseOrder` endpoint and view a company's purchase orders. */
    PurchaseOrderLineItem: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description A description of the good being purchased.
       * @example Pickleball paddles
       */
      description?: string | null
      /**
       * Format: double
       * @description The line item's unit price.
       * @example 25
       */
      unit_price?: number | null
      /**
       * Format: double
       * @description The line item's quantity.
       * @example 10
       */
      quantity?: number | null
      /**
       * Format: uuid
       * @example 0958cbc6-6040-430a-848e-aafacbadf4ae
       */
      item?: string | null
      /**
       * Format: uuid
       * @description The purchase order line item's account.
       */
      account?: string | null
      /**
       * Format: uuid
       * @deprecated
       * @description The purchase order line item's associated tracking category.
       */
      tracking_category?: string | null
      /**
       * @description The purchase order line item's associated tracking categories.
       * @example [
       *       "f1214c24-2702-4617-b74b-3ddecfc0d384",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: decimal
       * @description The purchase order line item's tax amount.
       * @example 10
       */
      tax_amount?: string | null
      /**
       * Format: decimal
       * @description The purchase order line item's total amount.
       * @example 260
       */
      total_line_amount?: string | null
      /**
       * @description The purchase order line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * Format: decimal
       * @description The purchase order line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the purchase order line item belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      readonly remote_fields?: components['schemas']['RemoteField'][]
    }
    /** @description # The PurchaseOrderLineItem Object
     *     ### Description
     *     The `PurchaseOrderLineItem` object is used to represent a purchase order's line item.
     *
     *     ### Usage Example
     *     Fetch from the `GET PurchaseOrder` endpoint and view a company's purchase orders. */
    PurchaseOrderLineItemRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * @description A description of the good being purchased.
       * @example Pickleball paddles
       */
      description?: string | null
      /**
       * Format: double
       * @description The line item's unit price.
       * @example 25
       */
      unit_price?: number | null
      /**
       * Format: double
       * @description The line item's quantity.
       * @example 10
       */
      quantity?: number | null
      /**
       * Format: uuid
       * @example 0958cbc6-6040-430a-848e-aafacbadf4ae
       */
      item?: string | null
      /**
       * Format: uuid
       * @description The purchase order line item's account.
       */
      account?: string | null
      /**
       * Format: uuid
       * @deprecated
       * @description The purchase order line item's associated tracking category.
       */
      tracking_category?: string | null
      /**
       * @description The purchase order line item's associated tracking categories.
       * @example [
       *       "f1214c24-2702-4617-b74b-3ddecfc0d384",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: decimal
       * @description The purchase order line item's tax amount.
       * @example 10
       */
      tax_amount?: string | null
      /**
       * Format: decimal
       * @description The purchase order line item's total amount.
       * @example 260
       */
      total_line_amount?: string | null
      /**
       * @description The purchase order line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * Format: decimal
       * @description The purchase order line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the purchase order line item belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    /** @description # The PurchaseOrder Object
     *     ### Description
     *     The `PurchaseOrder` object is a record of request for a product or service between a buyer and seller.
     *
     *     ### Usage Example
     *     Fetch from the `LIST PurchaseOrders` endpoint and view a company's purchase orders. */
    PurchaseOrderRequest: {
      /** @description The purchase order's status.
       *
       *     * `DRAFT` - DRAFT
       *     * `SUBMITTED` - SUBMITTED
       *     * `AUTHORIZED` - AUTHORIZED
       *     * `BILLED` - BILLED
       *     * `DELETED` - DELETED */
      status?: components['schemas']['PurchaseOrderStatusEnum'] | null
      /**
       * Format: date-time
       * @description The purchase order's issue date.
       */
      issue_date?: string | null
      /**
       * Format: date-time
       * @description The purchase order's delivery date.
       */
      delivery_date?: string | null
      /**
       * Format: uuid
       * @description The purchase order's delivery address.
       */
      delivery_address?: string | null
      /**
       * Format: uuid
       * @description The contact making the purchase order.
       */
      customer?: string | null
      /**
       * Format: uuid
       * @description The party fulfilling the purchase order.
       */
      vendor?: string | null
      /** @description A memo attached to the purchase order. */
      memo?: string | null
      /**
       * Format: uuid
       * @description The company the purchase order belongs to.
       */
      company?: string | null
      /**
       * Format: double
       * @description The purchase order's total amount.
       */
      total_amount?: number | null
      /** @description The purchase order's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009) */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /**
       * Format: decimal
       * @description The purchase order's exchange rate.
       */
      exchange_rate?: string | null
      tracking_categories?: (string | null)[]
      line_items?: components['schemas']['PurchaseOrderLineItemRequest'][]
      integration_params?: {
        [key: string]: unknown
      } | null
      linked_account_params?: {
        [key: string]: unknown
      } | null
      remote_fields?: components['schemas']['RemoteFieldRequest'][]
    }
    PurchaseOrderResponse: {
      model: components['schemas']['PurchaseOrder']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    /**
     * @description * `DRAFT` - DRAFT
     *     * `SUBMITTED` - SUBMITTED
     *     * `AUTHORIZED` - AUTHORIZED
     *     * `BILLED` - BILLED
     *     * `DELETED` - DELETED
     * @enum {string}
     */
    PurchaseOrderStatusEnum:
      | 'DRAFT'
      | 'SUBMITTED'
      | 'AUTHORIZED'
      | 'BILLED'
      | 'DELETED'
    /** @description # The RemoteData Object
     *     ### Description
     *     The `RemoteData` object is used to represent the full data pulled from the third-party API for an object.
     *
     *     ### Usage Example
     *     TODO */
    RemoteData: {
      /**
       * @description The third-party API path that is being called.
       * @example /platform-endpoint
       */
      path: string
      /**
       * @description The data returned from the third-party for this object in its original, unnormalized format.
       * @example [
       *       "Varies by platform"
       *     ]
       */
      readonly data?: unknown
    }
    RemoteEndpointInfo: {
      /** @example GET */
      method: string
      /** @example /example-url-path */
      url_path: string
      /** @example [
       *       "example_key_name"
       *     ] */
      field_traversal_path: unknown[]
    }
    RemoteField: {
      remote_field_class: components['schemas']['RemoteFieldClass']
      /** @example string */
      value?: {
        [key: string]: unknown
      }
    }
    RemoteFieldAPI: {
      /** @example {
       *       "type": "string"
       *     } */
      schema: {
        [key: string]: unknown
      }
      /** @example example_remote_key_name */
      remote_key_name: string
      /** @example {
       *       "method": "GET",
       *       "url_path": "/example-url-path",
       *       "field_traversal_path": [
       *         "example_key_name"
       *       ]
       *     } */
      remote_endpoint_info: components['schemas']['RemoteEndpointInfo']
      /** @example [
       *       "example"
       *     ] */
      example_values?: unknown[] | null
      advanced_metadata: components['schemas']['AdvancedMetadata'] | null
      /** @example 0.33 */
      readonly coverage?: number | null
    }
    RemoteFieldAPIResponse: {
      Account?: components['schemas']['RemoteFieldAPI'][]
      AccountingAttachment?: components['schemas']['RemoteFieldAPI'][]
      BalanceSheet?: components['schemas']['RemoteFieldAPI'][]
      CashFlowStatement?: components['schemas']['RemoteFieldAPI'][]
      CompanyInfo?: components['schemas']['RemoteFieldAPI'][]
      Contact?: components['schemas']['RemoteFieldAPI'][]
      IncomeStatement?: components['schemas']['RemoteFieldAPI'][]
      CreditNote?: components['schemas']['RemoteFieldAPI'][]
      Item?: components['schemas']['RemoteFieldAPI'][]
      PurchaseOrder?: components['schemas']['RemoteFieldAPI'][]
      TrackingCategory?: components['schemas']['RemoteFieldAPI'][]
      JournalEntry?: components['schemas']['RemoteFieldAPI'][]
      TaxRate?: components['schemas']['RemoteFieldAPI'][]
      Invoice?: components['schemas']['RemoteFieldAPI'][]
      Payment?: components['schemas']['RemoteFieldAPI'][]
      Expense?: components['schemas']['RemoteFieldAPI'][]
      VendorCredit?: components['schemas']['RemoteFieldAPI'][]
      Transaction?: components['schemas']['RemoteFieldAPI'][]
      AccountingPeriod?: components['schemas']['RemoteFieldAPI'][]
      GeneralLedgerTransaction?: components['schemas']['RemoteFieldAPI'][]
      BankFeedAccount?: components['schemas']['RemoteFieldAPI'][]
      Employee?: components['schemas']['RemoteFieldAPI'][]
    }
    RemoteFieldClass: {
      id?: string
      display_name?: string
      remote_key_name?: string
      description?: string
      is_custom?: boolean
      is_required?: boolean
      field_type?: components['schemas']['FieldTypeEnum']
      field_format?: components['schemas']['FieldFormatEnum']
      field_choices?: string[]
      item_schema?: components['schemas']['ItemSchema']
    }
    RemoteFieldRequest: {
      /**
       * Format: uuid
       * @example b057d1d2-c204-4da8-a74c-c91d1a260614
       */
      remote_field_class: string
      /** @example string */
      value?: {
        [key: string]: unknown
      }
    }
    /** @description # The RemoteKey Object
     *     ### Description
     *     The `RemoteKey` object is used to represent a request for a new remote key.
     *
     *     ### Usage Example
     *     Post a `GenerateRemoteKey` to receive a new `RemoteKey`. */
    RemoteKey: {
      /** @example Remote Deployment Key 1 */
      name: string
      /** @example hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA */
      key: string
    }
    /** @description # The RemoteKeyForRegeneration Object
     *     ### Description
     *     The `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one
     *
     *     ### Usage Example
     *     Post a `RemoteKeyForRegeneration` to swap out an old remote key for a new one */
    RemoteKeyForRegenerationRequest: {
      /**
       * @description The name of the remote key
       * @example Remote Deployment Key 1
       */
      name: string
    }
    /** @description # The RemoteResponse Object
     *     ### Description
     *     The `RemoteResponse` object is used to represent information returned from a third-party endpoint.
     *
     *     ### Usage Example
     *     View the `RemoteResponse` returned from your `DataPassthrough`. */
    RemoteResponse: {
      /** @example GET */
      method: string
      /** @example /scooters */
      path: string
      /** @example 200 */
      status: number
      /** @example {
       *       "scooters": [
       *         {
       *           "company": "Lime",
       *           "model": "Gen 2.5"
       *         },
       *         {
       *           "company": "Bird",
       *           "model": "Bird Zero"
       *         }
       *       ]
       *     } */
      response: unknown
      /** @example {
       *       "X-Page-Token": "value"
       *     } */
      response_headers?: {
        [key: string]: unknown
      }
      /** @example JSON */
      response_type?: components['schemas']['ResponseTypeEnum']
      /** @example {
       *       "EXTRA-HEADER": "value",
       *       "Authorization": "<redacted>"
       *     } */
      headers?: {
        [key: string]: unknown
      }
    }
    /** @description # The ReportItem Object
     *     ### Description
     *     The `ReportItem` object is used to represent a report item for a Balance Sheet, Cash Flow Statement or Profit and Loss Report.
     *
     *     ### Usage Example
     *     Fetch from the `GET BalanceSheet` endpoint and view the balance sheet's report items. */
    ReportItem: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 10299
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The report item's name.
       * @example Revenue
       */
      name?: string | null
      /**
       * Format: double
       * @description The report item's value.
       * @example 1000
       */
      value?: number | null
      /** @example [
       *       {
       *         "remote_id": "10300",
       *         "name": "Revenue - San Francisco",
       *         "value": 500,
       *         "sub_items": []
       *       },
       *       {
       *         "remote_id": "10301",
       *         "name": "Revenue - New York",
       *         "value": 500,
       *         "sub_items": []
       *       }
       *     ] */
      readonly sub_items?: {
        [key: string]: unknown
      }
      /**
       * Format: uuid
       * @description The company the report item belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      remote_was_deleted?: boolean
    }
    /**
     * @description * `JSON` - JSON
     *     * `XML` - XML
     *     * `MULTIPART` - MULTIPART
     * @enum {string}
     */
    RequestFormatEnum: 'JSON' | 'XML' | 'MULTIPART'
    /**
     * @description * `JSON` - JSON
     *     * `BASE64_GZIP` - BASE64_GZIP
     * @enum {string}
     */
    ResponseTypeEnum: 'JSON' | 'BASE64_GZIP'
    /**
     * @description * `ADMIN` - ADMIN
     *     * `DEVELOPER` - DEVELOPER
     *     * `MEMBER` - MEMBER
     *     * `API` - API
     *     * `SYSTEM` - SYSTEM
     *     * `MERGE_TEAM` - MERGE_TEAM
     * @enum {string}
     */
    RoleEnum: 'ADMIN' | 'DEVELOPER' | 'MEMBER' | 'API' | 'SYSTEM' | 'MERGE_TEAM'
    /**
     * @description * `IN_NEXT_SYNC` - IN_NEXT_SYNC
     *     * `IN_LAST_SYNC` - IN_LAST_SYNC
     * @enum {string}
     */
    SelectiveSyncConfigurationsUsageEnum: 'IN_NEXT_SYNC' | 'IN_LAST_SYNC'
    /**
     * @description * `ACTIVE` - ACTIVE
     *     * `ARCHIVED` - ARCHIVED
     * @enum {string}
     */
    Status7d1Enum: 'ACTIVE' | 'ARCHIVED'
    /**
     * @description * `ACTIVE` - ACTIVE
     *     * `INACTIVE` - INACTIVE
     * @enum {string}
     */
    Status895Enum: 'ACTIVE' | 'INACTIVE'
    /** @description # The SyncStatus Object
     *     ### Description
     *     The `SyncStatus` object is used to represent the syncing state of an account
     *
     *     ### Usage Example
     *     View the `SyncStatus` for an account to see how recently its models were synced. */
    SyncStatus: {
      /** @example Invoice */
      model_name: string
      /** @example accounting.Invoices */
      model_id: string
      /**
       * Format: date-time
       * @example 2021-03-30T19:44:18.695973Z
       */
      last_sync_start?: string
      /**
       * Format: date-time
       * @example 2021-03-30T20:44:18.662942Z
       */
      next_sync_start?: string
      /** @example SYNCING */
      status: components['schemas']['SyncStatusStatusEnum']
      /** @example true */
      is_initial_sync: boolean
      selective_sync_configurations_usage?: components['schemas']['SelectiveSyncConfigurationsUsageEnum']
    }
    /**
     * @description * `SYNCING` - SYNCING
     *     * `DONE` - DONE
     *     * `FAILED` - FAILED
     *     * `DISABLED` - DISABLED
     *     * `PAUSED` - PAUSED
     *     * `PARTIALLY_SYNCED` - PARTIALLY_SYNCED
     * @enum {string}
     */
    SyncStatusStatusEnum:
      | 'SYNCING'
      | 'DONE'
      | 'FAILED'
      | 'DISABLED'
      | 'PAUSED'
      | 'PARTIALLY_SYNCED'
    /** @description # The TaxRate Object
     *     ### Description
     *     The `TaxComponent` object is used to represent any sub-taxes that make up the `TaxRate`.
     *
     *     ### Usage Example
     *     Fetch from the `LIST TaxRates` endpoint and view tax components relevant to a tax rate. */
    TaxComponent: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 039111
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The tax rate’s name.
       * @example Drink Tax Component
       */
      name?: string | null
      /**
       * Format: decimal
       * @description The tax component’s rate.
       * @example 15
       */
      rate?: string | null
      /**
       * @description Returns True if the tax component is compound, False if not.
       * @example true
       */
      is_compound?: boolean | null
      /**
       * @description Returns PURCHASE if the tax component corresponds to a purchase tax or SALES if the tax component corresponds to a sales tax.
       *
       *     * `SALES` - SALES
       *     * `PURCHASE` - PURCHASE
       * @example SALES
       */
      component_type?: components['schemas']['ComponentTypeEnum'] | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
    }
    /** @description # The TaxRate Object
     *     ### Description
     *     The `TaxRate` object is used to represent a tax rate.
     *
     *     ### Usage Example
     *     Fetch from the `LIST TaxRates` endpoint and view tax rates relevant to a company. */
    TaxRate: {
      /**
       * Format: uuid
       * @example b82302de-852e-4e60-b050-edf9da3b7c02
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 039111
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @description The subsidiary that the tax rate belongs to (in the case of multi-entity systems).
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * @description The tax code associated with this tax rate or group of tax rates from the third-party platform.
       * @example 890
       */
      code?: string | null
      /**
       * @description The tax rate’s name.
       * @example State tax rate
       */
      name?: string | null
      /**
       * @description The tax rate's description.
       * @example Sales Tax
       */
      description?: string | null
      /**
       * @description The tax rate’s status - `ACTIVE` if an active tax rate, `ARCHIVED` if not active.
       *
       *     * `ACTIVE` - ACTIVE
       *     * `ARCHIVED` - ARCHIVED
       * @example ACTIVE
       */
      status?: components['schemas']['Status7d1Enum'] | null
      /**
       * @description The country the tax rate is associated with.
       * @example US
       */
      country?: string | null
      /**
       * Format: double
       * @description The tax’s total tax rate - sum of the tax components (not compounded).
       * @example 15
       */
      total_tax_rate?: number | null
      /**
       * Format: double
       * @description The tax rate’s effective tax rate - total amount of tax with compounding.
       * @example 15
       */
      effective_tax_rate?: number | null
      /**
       * @description The related tax components of the tax rate.
       * @example [
       *       {
       *         "remote_id": "039111",
       *         "is_compound": true,
       *         "rate": 15,
       *         "component_type": "SALES",
       *         "name": "Drink Tax Component"
       *       }
       *     ]
       */
      tax_components?: components['schemas']['TaxComponent'][]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /** @description # The TrackingCategory Object
     *     ### Description
     *     A `TrackingCategory` object represents a categorization method used to classify transactions within an accounting platform. They are often used to group records for reporting and analysis purposes. The most common types of `TrackingCategories` are Classes and Departments.
     *
     *     ### Usage Example
     *     Fetch from the `GET TrackingCategory` endpoint and view a company's tracking category. */
    TrackingCategory: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 948201
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The tracking category's name.
       * @example Marketing Department
       */
      name?: string | null
      /**
       * @description The tracking category's status.
       *
       *     * `ACTIVE` - ACTIVE
       *     * `ARCHIVED` - ARCHIVED
       * @example ACTIVE
       */
      status?: components['schemas']['Status7d1Enum'] | null
      /**
       * @description The tracking category’s type.
       *
       *     * `CLASS` - CLASS
       *     * `DEPARTMENT` - DEPARTMENT
       * @example DEPARTMENT
       */
      category_type?: components['schemas']['CategoryTypeEnum'] | null
      /**
       * Format: uuid
       * @example d25d609b-945f-4762-b55a-1c8fb220c43c
       */
      parent_category?: string | null
      /**
       * Format: uuid
       * @description The company the GeneralLedgerTransaction belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
    }
    /** @description # The Transaction Object
     *     ### Description
     *     The `Transaction` common model includes records of all types of transactions that do not appear in other common models. The type of transaction can be identified through the type field. More specifically, it will contain all types of transactions outside of:
     *     * __Credit Notes__
     *     * __Expenses__
     *     * __Invoices__
     *     * __Journal Entries__
     *     * __Payments__
     *     * __Purchase Orders__
     *     * __Vendor Credits__
     *
     *     ### Usage Example
     *     Fetch from the `GET Transaction` endpoint and view a company's transactions. */
    Transaction: {
      /**
       * Format: uuid
       * @example 0048ea5b-911e-4dff-9364-92070dea62ff
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 239741
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The type of transaction, which can by any transaction object not already included in Merge’s common model.
       * @example estimate
       */
      transaction_type?: string | null
      /**
       * @description The transaction's number used for identifying purposes.
       * @example 122
       */
      number?: string | null
      /**
       * Format: date-time
       * @description The date upon which the transaction occurred.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * Format: uuid
       * @description The transaction's account.
       * @example 3e442c5d-8f51-4103-b5c9-dcee39c30a08
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The contact to whom the transaction relates to.
       * @example 2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b
       */
      contact?: string | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /**
       * Format: decimal
       * @description The total amount being paid after taxes.
       * @example 260
       */
      total_amount?: string | null
      /**
       * @description The transaction's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The transaction's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the transaction belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /** @example [
       *       {
       *         "remote_id": "121222",
       *         "memo": "Pickleball paddles",
       *         "unit_price": "25.0",
       *         "quantity": "10.0",
       *         "item": "0958cbc6-6040-430a-848e-aafacbadf4ae",
       *         "account": "2b38c085-2620-4269-b5ec-75dd9095ed2c",
       *         "tracking_categories": [
       *           "f1214c24-2702-4617-b74b-3ddecfc0d384",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "total_line_amount": 260,
       *         "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384",
       *         "currency": "USD",
       *         "exchange_rate": "2.9",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "remote_was_deleted": false
       *       },
       *       {
       *         "memo": "Pickleball balls",
       *         "unit_price": 1,
       *         "quantity": 10,
       *         "item": "249c9faa-3045-4a31-953b-8f22d3613301",
       *         "account": "3e442c5d-8f51-4103-b5c9-dcee39c30a08",
       *         "tracking_categories": [
       *           "f1214c24-2702-4617-b74b-3ddecfc0d384",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "total_line_amount": 20,
       *         "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384"
       *       }
       *     ] */
      readonly line_items?: components['schemas']['TransactionLineItem'][]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /**
       * Format: uuid
       * @description The accounting period that the Transaction was generated in.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      accounting_period?: string | null
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /**
     * @description * `XUA` - ADB Unit of Account
     *     * `AFN` - Afghan Afghani
     *     * `AFA` - Afghan Afghani (1927–2002)
     *     * `ALL` - Albanian Lek
     *     * `ALK` - Albanian Lek (1946–1965)
     *     * `DZD` - Algerian Dinar
     *     * `ADP` - Andorran Peseta
     *     * `AOA` - Angolan Kwanza
     *     * `AOK` - Angolan Kwanza (1977–1991)
     *     * `AON` - Angolan New Kwanza (1990–2000)
     *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
     *     * `ARA` - Argentine Austral
     *     * `ARS` - Argentine Peso
     *     * `ARM` - Argentine Peso (1881–1970)
     *     * `ARP` - Argentine Peso (1983–1985)
     *     * `ARL` - Argentine Peso Ley (1970–1983)
     *     * `AMD` - Armenian Dram
     *     * `AWG` - Aruban Florin
     *     * `AUD` - Australian Dollar
     *     * `ATS` - Austrian Schilling
     *     * `AZN` - Azerbaijani Manat
     *     * `AZM` - Azerbaijani Manat (1993–2006)
     *     * `BSD` - Bahamian Dollar
     *     * `BHD` - Bahraini Dinar
     *     * `BDT` - Bangladeshi Taka
     *     * `BBD` - Barbadian Dollar
     *     * `BYN` - Belarusian Ruble
     *     * `BYB` - Belarusian Ruble (1994–1999)
     *     * `BYR` - Belarusian Ruble (2000–2016)
     *     * `BEF` - Belgian Franc
     *     * `BEC` - Belgian Franc (convertible)
     *     * `BEL` - Belgian Franc (financial)
     *     * `BZD` - Belize Dollar
     *     * `BMD` - Bermudan Dollar
     *     * `BTN` - Bhutanese Ngultrum
     *     * `BOB` - Bolivian Boliviano
     *     * `BOL` - Bolivian Boliviano (1863–1963)
     *     * `BOV` - Bolivian Mvdol
     *     * `BOP` - Bolivian Peso
     *     * `BAM` - Bosnia-Herzegovina Convertible Mark
     *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
     *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
     *     * `BWP` - Botswanan Pula
     *     * `BRC` - Brazilian Cruzado (1986–1989)
     *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
     *     * `BRE` - Brazilian Cruzeiro (1990–1993)
     *     * `BRR` - Brazilian Cruzeiro (1993–1994)
     *     * `BRN` - Brazilian New Cruzado (1989–1990)
     *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
     *     * `BRL` - Brazilian Real
     *     * `GBP` - British Pound
     *     * `BND` - Brunei Dollar
     *     * `BGL` - Bulgarian Hard Lev
     *     * `BGN` - Bulgarian Lev
     *     * `BGO` - Bulgarian Lev (1879–1952)
     *     * `BGM` - Bulgarian Socialist Lev
     *     * `BUK` - Burmese Kyat
     *     * `BIF` - Burundian Franc
     *     * `XPF` - CFP Franc
     *     * `KHR` - Cambodian Riel
     *     * `CAD` - Canadian Dollar
     *     * `CVE` - Cape Verdean Escudo
     *     * `KYD` - Cayman Islands Dollar
     *     * `XAF` - Central African CFA Franc
     *     * `CLE` - Chilean Escudo
     *     * `CLP` - Chilean Peso
     *     * `CLF` - Chilean Unit of Account (UF)
     *     * `CNX` - Chinese People’s Bank Dollar
     *     * `CNY` - Chinese Yuan
     *     * `CNH` - Chinese Yuan (offshore)
     *     * `COP` - Colombian Peso
     *     * `COU` - Colombian Real Value Unit
     *     * `KMF` - Comorian Franc
     *     * `CDF` - Congolese Franc
     *     * `CRC` - Costa Rican Colón
     *     * `HRD` - Croatian Dinar
     *     * `HRK` - Croatian Kuna
     *     * `CUC` - Cuban Convertible Peso
     *     * `CUP` - Cuban Peso
     *     * `CYP` - Cypriot Pound
     *     * `CZK` - Czech Koruna
     *     * `CSK` - Czechoslovak Hard Koruna
     *     * `DKK` - Danish Krone
     *     * `DJF` - Djiboutian Franc
     *     * `DOP` - Dominican Peso
     *     * `NLG` - Dutch Guilder
     *     * `XCD` - East Caribbean Dollar
     *     * `DDM` - East German Mark
     *     * `ECS` - Ecuadorian Sucre
     *     * `ECV` - Ecuadorian Unit of Constant Value
     *     * `EGP` - Egyptian Pound
     *     * `GQE` - Equatorial Guinean Ekwele
     *     * `ERN` - Eritrean Nakfa
     *     * `EEK` - Estonian Kroon
     *     * `ETB` - Ethiopian Birr
     *     * `EUR` - Euro
     *     * `XBA` - European Composite Unit
     *     * `XEU` - European Currency Unit
     *     * `XBB` - European Monetary Unit
     *     * `XBC` - European Unit of Account (XBC)
     *     * `XBD` - European Unit of Account (XBD)
     *     * `FKP` - Falkland Islands Pound
     *     * `FJD` - Fijian Dollar
     *     * `FIM` - Finnish Markka
     *     * `FRF` - French Franc
     *     * `XFO` - French Gold Franc
     *     * `XFU` - French UIC-Franc
     *     * `GMD` - Gambian Dalasi
     *     * `GEK` - Georgian Kupon Larit
     *     * `GEL` - Georgian Lari
     *     * `DEM` - German Mark
     *     * `GHS` - Ghanaian Cedi
     *     * `GHC` - Ghanaian Cedi (1979–2007)
     *     * `GIP` - Gibraltar Pound
     *     * `XAU` - Gold
     *     * `GRD` - Greek Drachma
     *     * `GTQ` - Guatemalan Quetzal
     *     * `GWP` - Guinea-Bissau Peso
     *     * `GNF` - Guinean Franc
     *     * `GNS` - Guinean Syli
     *     * `GYD` - Guyanaese Dollar
     *     * `HTG` - Haitian Gourde
     *     * `HNL` - Honduran Lempira
     *     * `HKD` - Hong Kong Dollar
     *     * `HUF` - Hungarian Forint
     *     * `IMP` - IMP
     *     * `ISK` - Icelandic Króna
     *     * `ISJ` - Icelandic Króna (1918–1981)
     *     * `INR` - Indian Rupee
     *     * `IDR` - Indonesian Rupiah
     *     * `IRR` - Iranian Rial
     *     * `IQD` - Iraqi Dinar
     *     * `IEP` - Irish Pound
     *     * `ILS` - Israeli New Shekel
     *     * `ILP` - Israeli Pound
     *     * `ILR` - Israeli Shekel (1980–1985)
     *     * `ITL` - Italian Lira
     *     * `JMD` - Jamaican Dollar
     *     * `JPY` - Japanese Yen
     *     * `JOD` - Jordanian Dinar
     *     * `KZT` - Kazakhstani Tenge
     *     * `KES` - Kenyan Shilling
     *     * `KWD` - Kuwaiti Dinar
     *     * `KGS` - Kyrgystani Som
     *     * `LAK` - Laotian Kip
     *     * `LVL` - Latvian Lats
     *     * `LVR` - Latvian Ruble
     *     * `LBP` - Lebanese Pound
     *     * `LSL` - Lesotho Loti
     *     * `LRD` - Liberian Dollar
     *     * `LYD` - Libyan Dinar
     *     * `LTL` - Lithuanian Litas
     *     * `LTT` - Lithuanian Talonas
     *     * `LUL` - Luxembourg Financial Franc
     *     * `LUC` - Luxembourgian Convertible Franc
     *     * `LUF` - Luxembourgian Franc
     *     * `MOP` - Macanese Pataca
     *     * `MKD` - Macedonian Denar
     *     * `MKN` - Macedonian Denar (1992–1993)
     *     * `MGA` - Malagasy Ariary
     *     * `MGF` - Malagasy Franc
     *     * `MWK` - Malawian Kwacha
     *     * `MYR` - Malaysian Ringgit
     *     * `MVR` - Maldivian Rufiyaa
     *     * `MVP` - Maldivian Rupee (1947–1981)
     *     * `MLF` - Malian Franc
     *     * `MTL` - Maltese Lira
     *     * `MTP` - Maltese Pound
     *     * `MRU` - Mauritanian Ouguiya
     *     * `MRO` - Mauritanian Ouguiya (1973–2017)
     *     * `MUR` - Mauritian Rupee
     *     * `MXV` - Mexican Investment Unit
     *     * `MXN` - Mexican Peso
     *     * `MXP` - Mexican Silver Peso (1861–1992)
     *     * `MDC` - Moldovan Cupon
     *     * `MDL` - Moldovan Leu
     *     * `MCF` - Monegasque Franc
     *     * `MNT` - Mongolian Tugrik
     *     * `MAD` - Moroccan Dirham
     *     * `MAF` - Moroccan Franc
     *     * `MZE` - Mozambican Escudo
     *     * `MZN` - Mozambican Metical
     *     * `MZM` - Mozambican Metical (1980–2006)
     *     * `MMK` - Myanmar Kyat
     *     * `NAD` - Namibian Dollar
     *     * `NPR` - Nepalese Rupee
     *     * `ANG` - Netherlands Antillean Guilder
     *     * `TWD` - New Taiwan Dollar
     *     * `NZD` - New Zealand Dollar
     *     * `NIO` - Nicaraguan Córdoba
     *     * `NIC` - Nicaraguan Córdoba (1988–1991)
     *     * `NGN` - Nigerian Naira
     *     * `KPW` - North Korean Won
     *     * `NOK` - Norwegian Krone
     *     * `OMR` - Omani Rial
     *     * `PKR` - Pakistani Rupee
     *     * `XPD` - Palladium
     *     * `PAB` - Panamanian Balboa
     *     * `PGK` - Papua New Guinean Kina
     *     * `PYG` - Paraguayan Guarani
     *     * `PEI` - Peruvian Inti
     *     * `PEN` - Peruvian Sol
     *     * `PES` - Peruvian Sol (1863–1965)
     *     * `PHP` - Philippine Peso
     *     * `XPT` - Platinum
     *     * `PLN` - Polish Zloty
     *     * `PLZ` - Polish Zloty (1950–1995)
     *     * `PTE` - Portuguese Escudo
     *     * `GWE` - Portuguese Guinea Escudo
     *     * `QAR` - Qatari Rial
     *     * `XRE` - RINET Funds
     *     * `RHD` - Rhodesian Dollar
     *     * `RON` - Romanian Leu
     *     * `ROL` - Romanian Leu (1952–2006)
     *     * `RUB` - Russian Ruble
     *     * `RUR` - Russian Ruble (1991–1998)
     *     * `RWF` - Rwandan Franc
     *     * `SVC` - Salvadoran Colón
     *     * `WST` - Samoan Tala
     *     * `SAR` - Saudi Riyal
     *     * `RSD` - Serbian Dinar
     *     * `CSD` - Serbian Dinar (2002–2006)
     *     * `SCR` - Seychellois Rupee
     *     * `SLL` - Sierra Leonean Leone
     *     * `XAG` - Silver
     *     * `SGD` - Singapore Dollar
     *     * `SKK` - Slovak Koruna
     *     * `SIT` - Slovenian Tolar
     *     * `SBD` - Solomon Islands Dollar
     *     * `SOS` - Somali Shilling
     *     * `ZAR` - South African Rand
     *     * `ZAL` - South African Rand (financial)
     *     * `KRH` - South Korean Hwan (1953–1962)
     *     * `KRW` - South Korean Won
     *     * `KRO` - South Korean Won (1945–1953)
     *     * `SSP` - South Sudanese Pound
     *     * `SUR` - Soviet Rouble
     *     * `ESP` - Spanish Peseta
     *     * `ESA` - Spanish Peseta (A account)
     *     * `ESB` - Spanish Peseta (convertible account)
     *     * `XDR` - Special Drawing Rights
     *     * `LKR` - Sri Lankan Rupee
     *     * `SHP` - St. Helena Pound
     *     * `XSU` - Sucre
     *     * `SDD` - Sudanese Dinar (1992–2007)
     *     * `SDG` - Sudanese Pound
     *     * `SDP` - Sudanese Pound (1957–1998)
     *     * `SRD` - Surinamese Dollar
     *     * `SRG` - Surinamese Guilder
     *     * `SZL` - Swazi Lilangeni
     *     * `SEK` - Swedish Krona
     *     * `CHF` - Swiss Franc
     *     * `SYP` - Syrian Pound
     *     * `STN` - São Tomé & Príncipe Dobra
     *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
     *     * `TVD` - TVD
     *     * `TJR` - Tajikistani Ruble
     *     * `TJS` - Tajikistani Somoni
     *     * `TZS` - Tanzanian Shilling
     *     * `XTS` - Testing Currency Code
     *     * `THB` - Thai Baht
     *     * `XXX` - The codes assigned for transactions where no currency is involved
     *     * `TPE` - Timorese Escudo
     *     * `TOP` - Tongan Paʻanga
     *     * `TTD` - Trinidad & Tobago Dollar
     *     * `TND` - Tunisian Dinar
     *     * `TRY` - Turkish Lira
     *     * `TRL` - Turkish Lira (1922–2005)
     *     * `TMT` - Turkmenistani Manat
     *     * `TMM` - Turkmenistani Manat (1993–2009)
     *     * `USD` - US Dollar
     *     * `USN` - US Dollar (Next day)
     *     * `USS` - US Dollar (Same day)
     *     * `UGX` - Ugandan Shilling
     *     * `UGS` - Ugandan Shilling (1966–1987)
     *     * `UAH` - Ukrainian Hryvnia
     *     * `UAK` - Ukrainian Karbovanets
     *     * `AED` - United Arab Emirates Dirham
     *     * `UYW` - Uruguayan Nominal Wage Index Unit
     *     * `UYU` - Uruguayan Peso
     *     * `UYP` - Uruguayan Peso (1975–1993)
     *     * `UYI` - Uruguayan Peso (Indexed Units)
     *     * `UZS` - Uzbekistani Som
     *     * `VUV` - Vanuatu Vatu
     *     * `VES` - Venezuelan Bolívar
     *     * `VEB` - Venezuelan Bolívar (1871–2008)
     *     * `VEF` - Venezuelan Bolívar (2008–2018)
     *     * `VND` - Vietnamese Dong
     *     * `VNN` - Vietnamese Dong (1978–1985)
     *     * `CHE` - WIR Euro
     *     * `CHW` - WIR Franc
     *     * `XOF` - West African CFA Franc
     *     * `YDD` - Yemeni Dinar
     *     * `YER` - Yemeni Rial
     *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
     *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
     *     * `YUM` - Yugoslavian New Dinar (1994–2002)
     *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
     *     * `ZWN` - ZWN
     *     * `ZRN` - Zairean New Zaire (1993–1998)
     *     * `ZRZ` - Zairean Zaire (1971–1993)
     *     * `ZMW` - Zambian Kwacha
     *     * `ZMK` - Zambian Kwacha (1968–2012)
     *     * `ZWD` - Zimbabwean Dollar (1980–2008)
     *     * `ZWR` - Zimbabwean Dollar (2008)
     *     * `ZWL` - Zimbabwean Dollar (2009)
     * @enum {string}
     */
    TransactionCurrencyEnum:
      | 'XUA'
      | 'AFN'
      | 'AFA'
      | 'ALL'
      | 'ALK'
      | 'DZD'
      | 'ADP'
      | 'AOA'
      | 'AOK'
      | 'AON'
      | 'AOR'
      | 'ARA'
      | 'ARS'
      | 'ARM'
      | 'ARP'
      | 'ARL'
      | 'AMD'
      | 'AWG'
      | 'AUD'
      | 'ATS'
      | 'AZN'
      | 'AZM'
      | 'BSD'
      | 'BHD'
      | 'BDT'
      | 'BBD'
      | 'BYN'
      | 'BYB'
      | 'BYR'
      | 'BEF'
      | 'BEC'
      | 'BEL'
      | 'BZD'
      | 'BMD'
      | 'BTN'
      | 'BOB'
      | 'BOL'
      | 'BOV'
      | 'BOP'
      | 'BAM'
      | 'BAD'
      | 'BAN'
      | 'BWP'
      | 'BRC'
      | 'BRZ'
      | 'BRE'
      | 'BRR'
      | 'BRN'
      | 'BRB'
      | 'BRL'
      | 'GBP'
      | 'BND'
      | 'BGL'
      | 'BGN'
      | 'BGO'
      | 'BGM'
      | 'BUK'
      | 'BIF'
      | 'XPF'
      | 'KHR'
      | 'CAD'
      | 'CVE'
      | 'KYD'
      | 'XAF'
      | 'CLE'
      | 'CLP'
      | 'CLF'
      | 'CNX'
      | 'CNY'
      | 'CNH'
      | 'COP'
      | 'COU'
      | 'KMF'
      | 'CDF'
      | 'CRC'
      | 'HRD'
      | 'HRK'
      | 'CUC'
      | 'CUP'
      | 'CYP'
      | 'CZK'
      | 'CSK'
      | 'DKK'
      | 'DJF'
      | 'DOP'
      | 'NLG'
      | 'XCD'
      | 'DDM'
      | 'ECS'
      | 'ECV'
      | 'EGP'
      | 'GQE'
      | 'ERN'
      | 'EEK'
      | 'ETB'
      | 'EUR'
      | 'XBA'
      | 'XEU'
      | 'XBB'
      | 'XBC'
      | 'XBD'
      | 'FKP'
      | 'FJD'
      | 'FIM'
      | 'FRF'
      | 'XFO'
      | 'XFU'
      | 'GMD'
      | 'GEK'
      | 'GEL'
      | 'DEM'
      | 'GHS'
      | 'GHC'
      | 'GIP'
      | 'XAU'
      | 'GRD'
      | 'GTQ'
      | 'GWP'
      | 'GNF'
      | 'GNS'
      | 'GYD'
      | 'HTG'
      | 'HNL'
      | 'HKD'
      | 'HUF'
      | 'IMP'
      | 'ISK'
      | 'ISJ'
      | 'INR'
      | 'IDR'
      | 'IRR'
      | 'IQD'
      | 'IEP'
      | 'ILS'
      | 'ILP'
      | 'ILR'
      | 'ITL'
      | 'JMD'
      | 'JPY'
      | 'JOD'
      | 'KZT'
      | 'KES'
      | 'KWD'
      | 'KGS'
      | 'LAK'
      | 'LVL'
      | 'LVR'
      | 'LBP'
      | 'LSL'
      | 'LRD'
      | 'LYD'
      | 'LTL'
      | 'LTT'
      | 'LUL'
      | 'LUC'
      | 'LUF'
      | 'MOP'
      | 'MKD'
      | 'MKN'
      | 'MGA'
      | 'MGF'
      | 'MWK'
      | 'MYR'
      | 'MVR'
      | 'MVP'
      | 'MLF'
      | 'MTL'
      | 'MTP'
      | 'MRU'
      | 'MRO'
      | 'MUR'
      | 'MXV'
      | 'MXN'
      | 'MXP'
      | 'MDC'
      | 'MDL'
      | 'MCF'
      | 'MNT'
      | 'MAD'
      | 'MAF'
      | 'MZE'
      | 'MZN'
      | 'MZM'
      | 'MMK'
      | 'NAD'
      | 'NPR'
      | 'ANG'
      | 'TWD'
      | 'NZD'
      | 'NIO'
      | 'NIC'
      | 'NGN'
      | 'KPW'
      | 'NOK'
      | 'OMR'
      | 'PKR'
      | 'XPD'
      | 'PAB'
      | 'PGK'
      | 'PYG'
      | 'PEI'
      | 'PEN'
      | 'PES'
      | 'PHP'
      | 'XPT'
      | 'PLN'
      | 'PLZ'
      | 'PTE'
      | 'GWE'
      | 'QAR'
      | 'XRE'
      | 'RHD'
      | 'RON'
      | 'ROL'
      | 'RUB'
      | 'RUR'
      | 'RWF'
      | 'SVC'
      | 'WST'
      | 'SAR'
      | 'RSD'
      | 'CSD'
      | 'SCR'
      | 'SLL'
      | 'XAG'
      | 'SGD'
      | 'SKK'
      | 'SIT'
      | 'SBD'
      | 'SOS'
      | 'ZAR'
      | 'ZAL'
      | 'KRH'
      | 'KRW'
      | 'KRO'
      | 'SSP'
      | 'SUR'
      | 'ESP'
      | 'ESA'
      | 'ESB'
      | 'XDR'
      | 'LKR'
      | 'SHP'
      | 'XSU'
      | 'SDD'
      | 'SDG'
      | 'SDP'
      | 'SRD'
      | 'SRG'
      | 'SZL'
      | 'SEK'
      | 'CHF'
      | 'SYP'
      | 'STN'
      | 'STD'
      | 'TVD'
      | 'TJR'
      | 'TJS'
      | 'TZS'
      | 'XTS'
      | 'THB'
      | 'XXX'
      | 'TPE'
      | 'TOP'
      | 'TTD'
      | 'TND'
      | 'TRY'
      | 'TRL'
      | 'TMT'
      | 'TMM'
      | 'USD'
      | 'USN'
      | 'USS'
      | 'UGX'
      | 'UGS'
      | 'UAH'
      | 'UAK'
      | 'AED'
      | 'UYW'
      | 'UYU'
      | 'UYP'
      | 'UYI'
      | 'UZS'
      | 'VUV'
      | 'VES'
      | 'VEB'
      | 'VEF'
      | 'VND'
      | 'VNN'
      | 'CHE'
      | 'CHW'
      | 'XOF'
      | 'YDD'
      | 'YER'
      | 'YUN'
      | 'YUD'
      | 'YUM'
      | 'YUR'
      | 'ZWN'
      | 'ZRN'
      | 'ZRZ'
      | 'ZMW'
      | 'ZMK'
      | 'ZWD'
      | 'ZWR'
      | 'ZWL'
    /** @description # The TransactionLineItem Object
     *     ### Description
     *     The `TransactionLineItem` object is used to represent a transaction's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET TransactionLineItem` endpoint and view the transaction's line items. */
    TransactionLineItem: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description An internal note used by the business to clarify purpose of the transaction.
       * @example Pickleball paddles
       */
      memo?: string | null
      /**
       * Format: decimal
       * @description The line item's unit price.
       * @example 25.0
       */
      unit_price?: string | null
      /**
       * Format: decimal
       * @description The line item's quantity.
       * @example 10.0
       */
      quantity?: string | null
      /**
       * Format: uuid
       * @example 0958cbc6-6040-430a-848e-aafacbadf4ae
       */
      item?: string | null
      /**
       * Format: uuid
       * @description The line item's account.
       * @example 2b38c085-2620-4269-b5ec-75dd9095ed2c
       */
      account?: string | null
      /**
       * Format: uuid
       * @deprecated
       * @description The line's associated tracking category.
       */
      tracking_category?: string | null
      /**
       * @description The transaction line item's associated tracking categories.
       * @example [
       *       "f1214c24-2702-4617-b74b-3ddecfc0d384",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * Format: decimal
       * @description The line item's total.
       * @example 260
       */
      total_line_amount?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * @description The line item's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /**
       * Format: uuid
       * @description The company the line belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
    }
    /**
     * @description * `INVOICE` - INVOICE
     *     * `EXPENSE` - EXPENSE
     *     * `TRANSACTION` - TRANSACTION
     *     * `JOURNAL_ENTRY` - JOURNAL_ENTRY
     *     * `PAYMENT` - PAYMENT
     *     * `VENDOR_CREDIT` - VENDOR_CREDIT
     *     * `CREDIT_NOTE` - CREDIT_NOTE
     * @enum {string}
     */
    UnderlyingTransactionTypeEnum:
      | 'INVOICE'
      | 'EXPENSE'
      | 'TRANSACTION'
      | 'JOURNAL_ENTRY'
      | 'PAYMENT'
      | 'VENDOR_CREDIT'
      | 'CREDIT_NOTE'
    ValidationProblemSource: {
      pointer: string
    }
    /** @description # The VendorCredit Object
     *     ### Description
     *     A `VendorCredit` is transaction issued by a vendor to the accounting company, indicating a reduction or cancellation of the amount owed to the vendor. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a purchasing transaction. A `VendorCredit` can be applied to `Accounts Payable` Invoices to decrease the overall amount of the `Invoice`.
     *
     *     ### Usage Example
     *     Fetch from the `GET VendorCredit` endpoint and view a company's vendor credits. */
    VendorCredit: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * @description The vendor credit's number.
       * @example 6
       */
      number?: string | null
      /**
       * Format: date-time
       * @description The vendor credit's transaction date.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * Format: uuid
       * @description The vendor that owes the gift or refund.
       * @example 3d263469-51a1-4766-9205-f6c997826be1
       */
      vendor?: string | null
      /**
       * Format: double
       * @description The vendor credit's total amount.
       * @example 10000
       */
      total_amount?: number | null
      /**
       * @description The vendor credit's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The vendor credit's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /**
       * Format: uuid
       * @description The company the vendor credit belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @example [
       *       {
       *         "remote_id": "121222",
       *         "net_amount": 25.54,
       *         "tracking_categories": [
       *           "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384",
       *         "exchange_rate": "2.9",
       *         "description": "Gifted Merge Credit",
       *         "account": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
       *         "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
       *         "remote_was_deleted": false
       *       },
       *       {
       *         "remote_id": "121223",
       *         "net_amount": 10,
       *         "tracking_categories": [
       *           "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *           "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *           "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *         ],
       *         "description": "Refund for overpayment",
       *         "account": "9d892439-5fab-4dbb-8bd8-34f7f96c7912"
       *       }
       *     ] */
      readonly lines?: components['schemas']['VendorCreditLine'][]
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * @description A list of VendorCredit Applied to Lines objects.
       * @example [
       *       {
       *         "invoice": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
       *         "applied_date": "2020-03-31T00:00:00Z",
       *         "applied_amount": 2.9
       *       }
       *     ]
       */
      applied_to_lines?: components['schemas']['VendorCreditApplyLineForVendorCredit'][]
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
      /**
       * Format: uuid
       * @description The accounting period that the VendorCredit was generated in.
       * @example 9b840d2-686a-465a-8a8e-7b028498f8e4
       */
      accounting_period?: string | null
      /** @example {
       *       "organization_defined_targets": {
       *         "custom_key": "custom_value"
       *       },
       *       "linked_account_defined_targets": {
       *         "custom_key": "custom_value"
       *       }
       *     } */
      readonly field_mappings?: Record<string, never>
      /** @example [
       *       {
       *         "path": "/actions",
       *         "data": [
       *           "Varies by platform"
       *         ]
       *       }
       *     ] */
      readonly remote_data?: components['schemas']['RemoteData'][] | null
    }
    /** @description # The VendorCreditApplyLine Object
     *     ### Description
     *     The `VendorCreditApplyLine` object is used to represent a applied vendor credit.
     *
     *     ### Usage Example
     *     Fetch from the `GET VendorCredit` endpoint and view the vendor credit's applied to lines. */
    VendorCreditApplyLineForInvoice: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @example f776d7e886ebcc3c56ff31b5ab2608c10f9fd823
       */
      vendor_credit?: string | null
      /**
       * Format: date-time
       * @description Date that the vendor credit is applied to the invoice.
       * @example 2020-03-31T00:00:00Z
       */
      applied_date?: string | null
      /**
       * Format: decimal
       * @description The amount of the VendorCredit applied to the invoice.
       * @example 2.9
       */
      applied_amount?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
    }
    /** @description # The VendorCreditApplyLine Object
     *     ### Description
     *     The `VendorCreditApplyLine` object is used to represent a applied vendor credit.
     *
     *     ### Usage Example
     *     Fetch from the `GET VendorCredit` endpoint and view the vendor credit's applied to lines. */
    VendorCreditApplyLineForVendorCredit: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: uuid
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      invoice?: string | null
      /**
       * Format: date-time
       * @description Date that the vendor credit is applied to the invoice.
       * @example 2020-03-31T00:00:00Z
       */
      applied_date?: string | null
      /**
       * Format: decimal
       * @description The amount of the VendorCredit applied to the invoice.
       * @example 2.9
       */
      applied_amount?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
    }
    /** @description # The VendorCreditApplyLine Object
     *     ### Description
     *     The `VendorCreditApplyLine` object is used to represent a applied vendor credit.
     *
     *     ### Usage Example
     *     Fetch from the `GET VendorCredit` endpoint and view the vendor credit's applied to lines. */
    VendorCreditApplyLineForVendorCreditRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 088899
       */
      remote_id?: string | null
      /**
       * Format: uuid
       * @example 5b3c1341-a20f-4e51-b72c-f3830a16c97b
       */
      invoice?: string | null
      /**
       * Format: date-time
       * @description Date that the vendor credit is applied to the invoice.
       * @example 2020-03-31T00:00:00Z
       */
      applied_date?: string | null
      /**
       * Format: decimal
       * @description The amount of the VendorCredit applied to the invoice.
       * @example 2.9
       */
      applied_amount?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    VendorCreditEndpointRequest: {
      model: components['schemas']['VendorCreditRequest']
    }
    /** @description # The VendorCreditLine Object
     *     ### Description
     *     The `VendorCreditLine` object is used to represent a vendor credit's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET VendorCredit` endpoint and view the vendor credit's line items. */
    VendorCreditLine: {
      /**
       * Format: uuid
       * @example ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
       */
      readonly id?: string
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: date-time
       * @description The datetime that this object was created by Merge.
       * @example 2021-09-15T00:00:00Z
       */
      readonly created_at?: string
      /**
       * Format: date-time
       * @description The datetime that this object was modified by Merge.
       * @example 2021-10-16T00:00:00Z
       */
      readonly modified_at?: string
      /**
       * Format: double
       * @description The full value of the credit.
       * @example 25.54
       */
      net_amount?: number | null
      /**
       * Format: uuid
       * @deprecated
       * @description The line's associated tracking category.
       */
      tracking_category?: string | null
      /**
       * @description The vendor credit line item's associated tracking categories.
       * @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * @description The line's description.
       * @example Gifted Merge Credit
       */
      description?: string | null
      /**
       * Format: uuid
       * @description The line's account.
       * @example 9d892439-5fab-4dbb-8bd8-34f7f96c7912
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The company the line belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * Format: decimal
       * @description The vendor credit line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
      readonly remote_was_deleted?: boolean
    }
    /** @description # The VendorCreditLine Object
     *     ### Description
     *     The `VendorCreditLine` object is used to represent a vendor credit's line items.
     *
     *     ### Usage Example
     *     Fetch from the `GET VendorCredit` endpoint and view the vendor credit's line items. */
    VendorCreditLineRequest: {
      /**
       * @description The third-party API ID of the matching object.
       * @example 121222
       */
      remote_id?: string | null
      /**
       * Format: double
       * @description The full value of the credit.
       * @example 25.54
       */
      net_amount?: number | null
      /**
       * Format: uuid
       * @deprecated
       * @description The line's associated tracking category.
       */
      tracking_category?: string | null
      /**
       * @description The vendor credit line item's associated tracking categories.
       * @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ]
       */
      tracking_categories?: (string | null)[]
      /**
       * @description The line's description.
       * @example Gifted Merge Credit
       */
      description?: string | null
      /**
       * Format: uuid
       * @description The line's account.
       * @example 9d892439-5fab-4dbb-8bd8-34f7f96c7912
       */
      account?: string | null
      /**
       * Format: uuid
       * @description The company the line belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /**
       * Format: uuid
       * @description The tax rate that applies to this line item.
       * @example a12e7c20-1922-9df7-s75n-edfeewnn7384
       */
      tax_rate?: string | null
      /**
       * Format: decimal
       * @description The vendor credit line item's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    /** @description # The VendorCredit Object
     *     ### Description
     *     A `VendorCredit` is transaction issued by a vendor to the accounting company, indicating a reduction or cancellation of the amount owed to the vendor. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a purchasing transaction. A `VendorCredit` can be applied to `Accounts Payable` Invoices to decrease the overall amount of the `Invoice`.
     *
     *     ### Usage Example
     *     Fetch from the `GET VendorCredit` endpoint and view a company's vendor credits. */
    VendorCreditRequest: {
      /**
       * @description The vendor credit's number.
       * @example 6
       */
      number?: string | null
      /**
       * Format: date-time
       * @description The vendor credit's transaction date.
       * @example 2020-03-31T00:00:00Z
       */
      transaction_date?: string | null
      /**
       * Format: uuid
       * @description The vendor that owes the gift or refund.
       * @example 3d263469-51a1-4766-9205-f6c997826be1
       */
      vendor?: string | null
      /**
       * Format: double
       * @description The vendor credit's total amount.
       * @example 10000
       */
      total_amount?: number | null
      /**
       * @description The vendor credit's currency.
       *
       *     * `XUA` - ADB Unit of Account
       *     * `AFN` - Afghan Afghani
       *     * `AFA` - Afghan Afghani (1927–2002)
       *     * `ALL` - Albanian Lek
       *     * `ALK` - Albanian Lek (1946–1965)
       *     * `DZD` - Algerian Dinar
       *     * `ADP` - Andorran Peseta
       *     * `AOA` - Angolan Kwanza
       *     * `AOK` - Angolan Kwanza (1977–1991)
       *     * `AON` - Angolan New Kwanza (1990–2000)
       *     * `AOR` - Angolan Readjusted Kwanza (1995–1999)
       *     * `ARA` - Argentine Austral
       *     * `ARS` - Argentine Peso
       *     * `ARM` - Argentine Peso (1881–1970)
       *     * `ARP` - Argentine Peso (1983–1985)
       *     * `ARL` - Argentine Peso Ley (1970–1983)
       *     * `AMD` - Armenian Dram
       *     * `AWG` - Aruban Florin
       *     * `AUD` - Australian Dollar
       *     * `ATS` - Austrian Schilling
       *     * `AZN` - Azerbaijani Manat
       *     * `AZM` - Azerbaijani Manat (1993–2006)
       *     * `BSD` - Bahamian Dollar
       *     * `BHD` - Bahraini Dinar
       *     * `BDT` - Bangladeshi Taka
       *     * `BBD` - Barbadian Dollar
       *     * `BYN` - Belarusian Ruble
       *     * `BYB` - Belarusian Ruble (1994–1999)
       *     * `BYR` - Belarusian Ruble (2000–2016)
       *     * `BEF` - Belgian Franc
       *     * `BEC` - Belgian Franc (convertible)
       *     * `BEL` - Belgian Franc (financial)
       *     * `BZD` - Belize Dollar
       *     * `BMD` - Bermudan Dollar
       *     * `BTN` - Bhutanese Ngultrum
       *     * `BOB` - Bolivian Boliviano
       *     * `BOL` - Bolivian Boliviano (1863–1963)
       *     * `BOV` - Bolivian Mvdol
       *     * `BOP` - Bolivian Peso
       *     * `BAM` - Bosnia-Herzegovina Convertible Mark
       *     * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
       *     * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
       *     * `BWP` - Botswanan Pula
       *     * `BRC` - Brazilian Cruzado (1986–1989)
       *     * `BRZ` - Brazilian Cruzeiro (1942–1967)
       *     * `BRE` - Brazilian Cruzeiro (1990–1993)
       *     * `BRR` - Brazilian Cruzeiro (1993–1994)
       *     * `BRN` - Brazilian New Cruzado (1989–1990)
       *     * `BRB` - Brazilian New Cruzeiro (1967–1986)
       *     * `BRL` - Brazilian Real
       *     * `GBP` - British Pound
       *     * `BND` - Brunei Dollar
       *     * `BGL` - Bulgarian Hard Lev
       *     * `BGN` - Bulgarian Lev
       *     * `BGO` - Bulgarian Lev (1879–1952)
       *     * `BGM` - Bulgarian Socialist Lev
       *     * `BUK` - Burmese Kyat
       *     * `BIF` - Burundian Franc
       *     * `XPF` - CFP Franc
       *     * `KHR` - Cambodian Riel
       *     * `CAD` - Canadian Dollar
       *     * `CVE` - Cape Verdean Escudo
       *     * `KYD` - Cayman Islands Dollar
       *     * `XAF` - Central African CFA Franc
       *     * `CLE` - Chilean Escudo
       *     * `CLP` - Chilean Peso
       *     * `CLF` - Chilean Unit of Account (UF)
       *     * `CNX` - Chinese People’s Bank Dollar
       *     * `CNY` - Chinese Yuan
       *     * `CNH` - Chinese Yuan (offshore)
       *     * `COP` - Colombian Peso
       *     * `COU` - Colombian Real Value Unit
       *     * `KMF` - Comorian Franc
       *     * `CDF` - Congolese Franc
       *     * `CRC` - Costa Rican Colón
       *     * `HRD` - Croatian Dinar
       *     * `HRK` - Croatian Kuna
       *     * `CUC` - Cuban Convertible Peso
       *     * `CUP` - Cuban Peso
       *     * `CYP` - Cypriot Pound
       *     * `CZK` - Czech Koruna
       *     * `CSK` - Czechoslovak Hard Koruna
       *     * `DKK` - Danish Krone
       *     * `DJF` - Djiboutian Franc
       *     * `DOP` - Dominican Peso
       *     * `NLG` - Dutch Guilder
       *     * `XCD` - East Caribbean Dollar
       *     * `DDM` - East German Mark
       *     * `ECS` - Ecuadorian Sucre
       *     * `ECV` - Ecuadorian Unit of Constant Value
       *     * `EGP` - Egyptian Pound
       *     * `GQE` - Equatorial Guinean Ekwele
       *     * `ERN` - Eritrean Nakfa
       *     * `EEK` - Estonian Kroon
       *     * `ETB` - Ethiopian Birr
       *     * `EUR` - Euro
       *     * `XBA` - European Composite Unit
       *     * `XEU` - European Currency Unit
       *     * `XBB` - European Monetary Unit
       *     * `XBC` - European Unit of Account (XBC)
       *     * `XBD` - European Unit of Account (XBD)
       *     * `FKP` - Falkland Islands Pound
       *     * `FJD` - Fijian Dollar
       *     * `FIM` - Finnish Markka
       *     * `FRF` - French Franc
       *     * `XFO` - French Gold Franc
       *     * `XFU` - French UIC-Franc
       *     * `GMD` - Gambian Dalasi
       *     * `GEK` - Georgian Kupon Larit
       *     * `GEL` - Georgian Lari
       *     * `DEM` - German Mark
       *     * `GHS` - Ghanaian Cedi
       *     * `GHC` - Ghanaian Cedi (1979–2007)
       *     * `GIP` - Gibraltar Pound
       *     * `XAU` - Gold
       *     * `GRD` - Greek Drachma
       *     * `GTQ` - Guatemalan Quetzal
       *     * `GWP` - Guinea-Bissau Peso
       *     * `GNF` - Guinean Franc
       *     * `GNS` - Guinean Syli
       *     * `GYD` - Guyanaese Dollar
       *     * `HTG` - Haitian Gourde
       *     * `HNL` - Honduran Lempira
       *     * `HKD` - Hong Kong Dollar
       *     * `HUF` - Hungarian Forint
       *     * `IMP` - IMP
       *     * `ISK` - Icelandic Króna
       *     * `ISJ` - Icelandic Króna (1918–1981)
       *     * `INR` - Indian Rupee
       *     * `IDR` - Indonesian Rupiah
       *     * `IRR` - Iranian Rial
       *     * `IQD` - Iraqi Dinar
       *     * `IEP` - Irish Pound
       *     * `ILS` - Israeli New Shekel
       *     * `ILP` - Israeli Pound
       *     * `ILR` - Israeli Shekel (1980–1985)
       *     * `ITL` - Italian Lira
       *     * `JMD` - Jamaican Dollar
       *     * `JPY` - Japanese Yen
       *     * `JOD` - Jordanian Dinar
       *     * `KZT` - Kazakhstani Tenge
       *     * `KES` - Kenyan Shilling
       *     * `KWD` - Kuwaiti Dinar
       *     * `KGS` - Kyrgystani Som
       *     * `LAK` - Laotian Kip
       *     * `LVL` - Latvian Lats
       *     * `LVR` - Latvian Ruble
       *     * `LBP` - Lebanese Pound
       *     * `LSL` - Lesotho Loti
       *     * `LRD` - Liberian Dollar
       *     * `LYD` - Libyan Dinar
       *     * `LTL` - Lithuanian Litas
       *     * `LTT` - Lithuanian Talonas
       *     * `LUL` - Luxembourg Financial Franc
       *     * `LUC` - Luxembourgian Convertible Franc
       *     * `LUF` - Luxembourgian Franc
       *     * `MOP` - Macanese Pataca
       *     * `MKD` - Macedonian Denar
       *     * `MKN` - Macedonian Denar (1992–1993)
       *     * `MGA` - Malagasy Ariary
       *     * `MGF` - Malagasy Franc
       *     * `MWK` - Malawian Kwacha
       *     * `MYR` - Malaysian Ringgit
       *     * `MVR` - Maldivian Rufiyaa
       *     * `MVP` - Maldivian Rupee (1947–1981)
       *     * `MLF` - Malian Franc
       *     * `MTL` - Maltese Lira
       *     * `MTP` - Maltese Pound
       *     * `MRU` - Mauritanian Ouguiya
       *     * `MRO` - Mauritanian Ouguiya (1973–2017)
       *     * `MUR` - Mauritian Rupee
       *     * `MXV` - Mexican Investment Unit
       *     * `MXN` - Mexican Peso
       *     * `MXP` - Mexican Silver Peso (1861–1992)
       *     * `MDC` - Moldovan Cupon
       *     * `MDL` - Moldovan Leu
       *     * `MCF` - Monegasque Franc
       *     * `MNT` - Mongolian Tugrik
       *     * `MAD` - Moroccan Dirham
       *     * `MAF` - Moroccan Franc
       *     * `MZE` - Mozambican Escudo
       *     * `MZN` - Mozambican Metical
       *     * `MZM` - Mozambican Metical (1980–2006)
       *     * `MMK` - Myanmar Kyat
       *     * `NAD` - Namibian Dollar
       *     * `NPR` - Nepalese Rupee
       *     * `ANG` - Netherlands Antillean Guilder
       *     * `TWD` - New Taiwan Dollar
       *     * `NZD` - New Zealand Dollar
       *     * `NIO` - Nicaraguan Córdoba
       *     * `NIC` - Nicaraguan Córdoba (1988–1991)
       *     * `NGN` - Nigerian Naira
       *     * `KPW` - North Korean Won
       *     * `NOK` - Norwegian Krone
       *     * `OMR` - Omani Rial
       *     * `PKR` - Pakistani Rupee
       *     * `XPD` - Palladium
       *     * `PAB` - Panamanian Balboa
       *     * `PGK` - Papua New Guinean Kina
       *     * `PYG` - Paraguayan Guarani
       *     * `PEI` - Peruvian Inti
       *     * `PEN` - Peruvian Sol
       *     * `PES` - Peruvian Sol (1863–1965)
       *     * `PHP` - Philippine Peso
       *     * `XPT` - Platinum
       *     * `PLN` - Polish Zloty
       *     * `PLZ` - Polish Zloty (1950–1995)
       *     * `PTE` - Portuguese Escudo
       *     * `GWE` - Portuguese Guinea Escudo
       *     * `QAR` - Qatari Rial
       *     * `XRE` - RINET Funds
       *     * `RHD` - Rhodesian Dollar
       *     * `RON` - Romanian Leu
       *     * `ROL` - Romanian Leu (1952–2006)
       *     * `RUB` - Russian Ruble
       *     * `RUR` - Russian Ruble (1991–1998)
       *     * `RWF` - Rwandan Franc
       *     * `SVC` - Salvadoran Colón
       *     * `WST` - Samoan Tala
       *     * `SAR` - Saudi Riyal
       *     * `RSD` - Serbian Dinar
       *     * `CSD` - Serbian Dinar (2002–2006)
       *     * `SCR` - Seychellois Rupee
       *     * `SLL` - Sierra Leonean Leone
       *     * `XAG` - Silver
       *     * `SGD` - Singapore Dollar
       *     * `SKK` - Slovak Koruna
       *     * `SIT` - Slovenian Tolar
       *     * `SBD` - Solomon Islands Dollar
       *     * `SOS` - Somali Shilling
       *     * `ZAR` - South African Rand
       *     * `ZAL` - South African Rand (financial)
       *     * `KRH` - South Korean Hwan (1953–1962)
       *     * `KRW` - South Korean Won
       *     * `KRO` - South Korean Won (1945–1953)
       *     * `SSP` - South Sudanese Pound
       *     * `SUR` - Soviet Rouble
       *     * `ESP` - Spanish Peseta
       *     * `ESA` - Spanish Peseta (A account)
       *     * `ESB` - Spanish Peseta (convertible account)
       *     * `XDR` - Special Drawing Rights
       *     * `LKR` - Sri Lankan Rupee
       *     * `SHP` - St. Helena Pound
       *     * `XSU` - Sucre
       *     * `SDD` - Sudanese Dinar (1992–2007)
       *     * `SDG` - Sudanese Pound
       *     * `SDP` - Sudanese Pound (1957–1998)
       *     * `SRD` - Surinamese Dollar
       *     * `SRG` - Surinamese Guilder
       *     * `SZL` - Swazi Lilangeni
       *     * `SEK` - Swedish Krona
       *     * `CHF` - Swiss Franc
       *     * `SYP` - Syrian Pound
       *     * `STN` - São Tomé & Príncipe Dobra
       *     * `STD` - São Tomé & Príncipe Dobra (1977–2017)
       *     * `TVD` - TVD
       *     * `TJR` - Tajikistani Ruble
       *     * `TJS` - Tajikistani Somoni
       *     * `TZS` - Tanzanian Shilling
       *     * `XTS` - Testing Currency Code
       *     * `THB` - Thai Baht
       *     * `XXX` - The codes assigned for transactions where no currency is involved
       *     * `TPE` - Timorese Escudo
       *     * `TOP` - Tongan Paʻanga
       *     * `TTD` - Trinidad & Tobago Dollar
       *     * `TND` - Tunisian Dinar
       *     * `TRY` - Turkish Lira
       *     * `TRL` - Turkish Lira (1922–2005)
       *     * `TMT` - Turkmenistani Manat
       *     * `TMM` - Turkmenistani Manat (1993–2009)
       *     * `USD` - US Dollar
       *     * `USN` - US Dollar (Next day)
       *     * `USS` - US Dollar (Same day)
       *     * `UGX` - Ugandan Shilling
       *     * `UGS` - Ugandan Shilling (1966–1987)
       *     * `UAH` - Ukrainian Hryvnia
       *     * `UAK` - Ukrainian Karbovanets
       *     * `AED` - United Arab Emirates Dirham
       *     * `UYW` - Uruguayan Nominal Wage Index Unit
       *     * `UYU` - Uruguayan Peso
       *     * `UYP` - Uruguayan Peso (1975–1993)
       *     * `UYI` - Uruguayan Peso (Indexed Units)
       *     * `UZS` - Uzbekistani Som
       *     * `VUV` - Vanuatu Vatu
       *     * `VES` - Venezuelan Bolívar
       *     * `VEB` - Venezuelan Bolívar (1871–2008)
       *     * `VEF` - Venezuelan Bolívar (2008–2018)
       *     * `VND` - Vietnamese Dong
       *     * `VNN` - Vietnamese Dong (1978–1985)
       *     * `CHE` - WIR Euro
       *     * `CHW` - WIR Franc
       *     * `XOF` - West African CFA Franc
       *     * `YDD` - Yemeni Dinar
       *     * `YER` - Yemeni Rial
       *     * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
       *     * `YUD` - Yugoslavian Hard Dinar (1966–1990)
       *     * `YUM` - Yugoslavian New Dinar (1994–2002)
       *     * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
       *     * `ZWN` - ZWN
       *     * `ZRN` - Zairean New Zaire (1993–1998)
       *     * `ZRZ` - Zairean Zaire (1971–1993)
       *     * `ZMW` - Zambian Kwacha
       *     * `ZMK` - Zambian Kwacha (1968–2012)
       *     * `ZWD` - Zimbabwean Dollar (1980–2008)
       *     * `ZWR` - Zimbabwean Dollar (2008)
       *     * `ZWL` - Zimbabwean Dollar (2009)
       * @example USD
       */
      currency?: components['schemas']['TransactionCurrencyEnum'] | null
      /**
       * Format: decimal
       * @description The vendor credit's exchange rate.
       * @example 2.9
       */
      exchange_rate?: string | null
      /** @description If the transaction is inclusive or exclusive of tax. `True` if inclusive, `False` if exclusive. */
      inclusive_of_tax?: boolean | null
      /**
       * Format: uuid
       * @description The company the vendor credit belongs to.
       * @example 595c8f97-2ac4-45b7-b000-41bdf43240b5
       */
      company?: string | null
      /** @example [
       *       "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
       *       "9b840d2-686a-465a-8a8e-7b028498f8e4",
       *       "a47e11b6-c73b-4a0c-be31-130fc48177fa"
       *     ] */
      tracking_categories?: (string | null)[]
      /**
       * @description A list of VendorCredit Applied to Lines objects.
       * @example [
       *       {
       *         "invoice": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
       *         "applied_date": "2020-03-31T00:00:00Z",
       *         "applied_amount": 2.9
       *       }
       *     ]
       */
      applied_to_lines?: components['schemas']['VendorCreditApplyLineForVendorCreditRequest'][]
      /**
       * Format: uuid
       * @description The accounting period that the VendorCredit was generated in.
       * @example 9b840d2-686a-465a-8a8e-7b028498f8e4
       */
      accounting_period?: string | null
      /** @example {
       *       "unique_integration_field": "unique_integration_field_value"
       *     } */
      integration_params?: {
        [key: string]: unknown
      } | null
      /** @example {
       *       "unique_linked_account_field": "unique_linked_account_field_value"
       *     } */
      linked_account_params?: {
        [key: string]: unknown
      } | null
    }
    VendorCreditResponse: {
      model: components['schemas']['VendorCredit']
      warnings: components['schemas']['WarningValidationProblem'][]
      errors: components['schemas']['ErrorValidationProblem'][]
      logs?: components['schemas']['DebugModeLog'][]
    }
    WarningValidationProblem: {
      /** @example {
       *       "pointer": "/age"
       *     } */
      source?: components['schemas']['ValidationProblemSource']
      /** @example Unrecognized Field */
      title: string
      /** @example An unrecognized field, age, was passed in with request data. */
      detail: string
      /** @example UNRECOGNIZED_FIELD */
      problem_type: string
    }
    WebhookReceiver: {
      event: string
      is_active: boolean
      key?: string
    }
    WebhookReceiverRequest: {
      event: string
      is_active: boolean
      key?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  account_details_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AccountDetails']
        }
      }
    }
  }
  account_token_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        public_token: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AccountToken']
        }
      }
    }
  }
  accounting_periods_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedAccountingPeriodList']
        }
      }
    }
  }
  accounting_periods_retrieve: {
    parameters: {
      query?: {
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AccountingPeriod']
        }
      }
    }
  }
  accounts_list: {
    parameters: {
      query?: {
        /** @description If provided, will only provide accounts with the passed in enum. */
        account_type?: string
        /** @description If provided, will only return accounts for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description If provided, will only return Accounts with this name. */
        name?: string | null
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'classification' | 'classification,status' | 'status'
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?:
          | 'classification'
          | 'classification,status'
          | 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedAccountList']
        }
      }
    }
  }
  accounts_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AccountEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['AccountEndpointRequest']
        'multipart/form-data': components['schemas']['AccountEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AccountResponse']
        }
      }
    }
  }
  accounts_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'classification' | 'classification,status' | 'status'
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?:
          | 'classification'
          | 'classification,status'
          | 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Account']
        }
      }
    }
  }
  accounts_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  addresses_retrieve: {
    parameters: {
      query?: {
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'type'
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'type'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Address']
        }
      }
    }
  }
  async_passthrough_create: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DataPassthroughRequest']
        'application/x-www-form-urlencoded': components['schemas']['DataPassthroughRequest']
        'multipart/form-data': components['schemas']['DataPassthroughRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AsyncPassthroughReciept']
        }
      }
    }
  }
  async_passthrough_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        async_passthrough_receipt_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RemoteResponse']
        }
      }
    }
  }
  async_tasks_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AsyncPostTask']
        }
      }
    }
  }
  attachments_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return accounting attachments for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedAccountingAttachmentList']
        }
      }
    }
  }
  attachments_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AccountingAttachmentEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['AccountingAttachmentEndpointRequest']
        'multipart/form-data': components['schemas']['AccountingAttachmentEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AccountingAttachmentResponse']
        }
      }
    }
  }
  attachments_retrieve: {
    parameters: {
      query?: {
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AccountingAttachment']
        }
      }
    }
  }
  attachments_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  audit_trail_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description If included, will only include audit trail events that occurred before this time */
        end_date?: string
        /** @description If included, will only include events with the given event type. Possible values include: `CREATED_REMOTE_PRODUCTION_API_KEY`, `DELETED_REMOTE_PRODUCTION_API_KEY`, `CREATED_TEST_API_KEY`, `DELETED_TEST_API_KEY`, `REGENERATED_PRODUCTION_API_KEY`, `INVITED_USER`, `TWO_FACTOR_AUTH_ENABLED`, `TWO_FACTOR_AUTH_DISABLED`, `DELETED_LINKED_ACCOUNT`, `CREATED_DESTINATION`, `DELETED_DESTINATION`, `CHANGED_DESTINATION`, `CHANGED_SCOPES`, `CHANGED_PERSONAL_INFORMATION`, `CHANGED_ORGANIZATION_SETTINGS`, `ENABLED_INTEGRATION`, `DISABLED_INTEGRATION`, `ENABLED_CATEGORY`, `DISABLED_CATEGORY`, `CHANGED_PASSWORD`, `RESET_PASSWORD`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`, `CREATED_INTEGRATION_WIDE_FIELD_MAPPING`, `CREATED_LINKED_ACCOUNT_FIELD_MAPPING`, `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING`, `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING`, `DELETED_INTEGRATION_WIDE_FIELD_MAPPING`, `DELETED_LINKED_ACCOUNT_FIELD_MAPPING`, `CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE`, `CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE`, `DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE`, `FORCED_LINKED_ACCOUNT_RESYNC`, `MUTED_ISSUE`, `GENERATED_MAGIC_LINK`, `ENABLED_MERGE_WEBHOOK`, `DISABLED_MERGE_WEBHOOK`, `MERGE_WEBHOOK_TARGET_CHANGED`, `END_USER_CREDENTIALS_ACCESSED` */
        event_type?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description If included, will only include audit trail events that occurred after this time */
        start_date?: string
        /** @description If provided, this will return events associated with the specified user email. Please note that the email address reflects the user's email at the time of the event, and may not be their current email. */
        user_email?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedAuditLogEventList']
        }
      }
    }
  }
  available_actions_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AvailableActions']
        }
      }
    }
  }
  balance_sheets_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return balance sheets for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedBalanceSheetList']
        }
      }
    }
  }
  balance_sheets_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BalanceSheet']
        }
      }
    }
  }
  bank_feed_accounts_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedBankFeedAccountList']
        }
      }
    }
  }
  bank_feed_accounts_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BankFeedAccountEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['BankFeedAccountEndpointRequest']
        'multipart/form-data': components['schemas']['BankFeedAccountEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BankFeedAccountResponse']
        }
      }
    }
  }
  bank_feed_accounts_retrieve: {
    parameters: {
      query?: {
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BankFeedAccount']
        }
      }
    }
  }
  bank_feed_accounts_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  bank_feed_transactions_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'bank_feed_account'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return bank feed transactions with this is_processed value */
        is_processed?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedBankFeedTransactionList']
        }
      }
    }
  }
  bank_feed_transactions_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BankFeedTransactionEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['BankFeedTransactionEndpointRequest']
        'multipart/form-data': components['schemas']['BankFeedTransactionEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BankFeedTransactionResponse']
        }
      }
    }
  }
  bank_feed_transactions_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'bank_feed_account'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BankFeedTransaction']
        }
      }
    }
  }
  bank_feed_transactions_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  cash_flow_statements_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return cash flow statements for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedCashFlowStatementList']
        }
      }
    }
  }
  cash_flow_statements_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CashFlowStatement']
        }
      }
    }
  }
  company_info_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'addresses' | 'addresses,phone_numbers' | 'phone_numbers'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedCompanyInfoList']
        }
      }
    }
  }
  company_info_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'addresses' | 'addresses,phone_numbers' | 'phone_numbers'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CompanyInfo']
        }
      }
    }
  }
  contacts_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return contacts for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description If provided, will only return Contacts that match this email. */
        email_address?: string | null
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'addresses'
          | 'addresses,company'
          | 'addresses,phone_numbers'
          | 'addresses,phone_numbers,company'
          | 'company'
          | 'phone_numbers'
          | 'phone_numbers,company'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return Contacts that are denoted as customers. */
        is_customer?: string
        /** @description If provided, will only return Contacts that are denoted as suppliers. */
        is_supplier?: string
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description If provided, will only return Contacts that match this name. */
        name?: string | null
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status'
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedContactList']
        }
      }
    }
  }
  contacts_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ContactEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['ContactEndpointRequest']
        'multipart/form-data': components['schemas']['ContactEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContactResponse']
        }
      }
    }
  }
  contacts_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'addresses'
          | 'addresses,company'
          | 'addresses,phone_numbers'
          | 'addresses,phone_numbers,company'
          | 'company'
          | 'phone_numbers'
          | 'phone_numbers,company'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status'
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Contact']
        }
      }
    }
  }
  contacts_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  contacts_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  credit_notes_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return credit notes for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'applied_payments'
          | 'applied_payments,accounting_period'
          | 'applied_payments,company'
          | 'applied_payments,company,accounting_period'
          | 'applied_payments,contact'
          | 'applied_payments,contact,accounting_period'
          | 'applied_payments,contact,company'
          | 'applied_payments,contact,company,accounting_period'
          | 'applied_payments,line_items'
          | 'applied_payments,line_items,accounting_period'
          | 'applied_payments,line_items,company'
          | 'applied_payments,line_items,company,accounting_period'
          | 'applied_payments,line_items,contact'
          | 'applied_payments,line_items,contact,accounting_period'
          | 'applied_payments,line_items,contact,company'
          | 'applied_payments,line_items,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories'
          | 'applied_payments,line_items,tracking_categories,accounting_period'
          | 'applied_payments,line_items,tracking_categories,company'
          | 'applied_payments,line_items,tracking_categories,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact'
          | 'applied_payments,line_items,tracking_categories,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact,company'
          | 'applied_payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'applied_payments,tracking_categories'
          | 'applied_payments,tracking_categories,accounting_period'
          | 'applied_payments,tracking_categories,company'
          | 'applied_payments,tracking_categories,company,accounting_period'
          | 'applied_payments,tracking_categories,contact'
          | 'applied_payments,tracking_categories,contact,accounting_period'
          | 'applied_payments,tracking_categories,contact,company'
          | 'applied_payments,tracking_categories,contact,company,accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'contact'
          | 'contact,accounting_period'
          | 'contact,company'
          | 'contact,company,accounting_period'
          | 'line_items'
          | 'line_items,accounting_period'
          | 'line_items,company'
          | 'line_items,company,accounting_period'
          | 'line_items,contact'
          | 'line_items,contact,accounting_period'
          | 'line_items,contact,company'
          | 'line_items,contact,company,accounting_period'
          | 'line_items,tracking_categories'
          | 'line_items,tracking_categories,accounting_period'
          | 'line_items,tracking_categories,company'
          | 'line_items,tracking_categories,company,accounting_period'
          | 'line_items,tracking_categories,contact'
          | 'line_items,tracking_categories,contact,accounting_period'
          | 'line_items,tracking_categories,contact,company'
          | 'line_items,tracking_categories,contact,company,accounting_period'
          | 'payments'
          | 'payments,accounting_period'
          | 'payments,applied_payments'
          | 'payments,applied_payments,accounting_period'
          | 'payments,applied_payments,company'
          | 'payments,applied_payments,company,accounting_period'
          | 'payments,applied_payments,contact'
          | 'payments,applied_payments,contact,accounting_period'
          | 'payments,applied_payments,contact,company'
          | 'payments,applied_payments,contact,company,accounting_period'
          | 'payments,applied_payments,line_items'
          | 'payments,applied_payments,line_items,accounting_period'
          | 'payments,applied_payments,line_items,company'
          | 'payments,applied_payments,line_items,company,accounting_period'
          | 'payments,applied_payments,line_items,contact'
          | 'payments,applied_payments,line_items,contact,accounting_period'
          | 'payments,applied_payments,line_items,contact,company'
          | 'payments,applied_payments,line_items,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories'
          | 'payments,applied_payments,line_items,tracking_categories,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,company'
          | 'payments,applied_payments,line_items,tracking_categories,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact'
          | 'payments,applied_payments,line_items,tracking_categories,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories'
          | 'payments,applied_payments,tracking_categories,accounting_period'
          | 'payments,applied_payments,tracking_categories,company'
          | 'payments,applied_payments,tracking_categories,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact'
          | 'payments,applied_payments,tracking_categories,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact,company'
          | 'payments,applied_payments,tracking_categories,contact,company,accounting_period'
          | 'payments,company'
          | 'payments,company,accounting_period'
          | 'payments,contact'
          | 'payments,contact,accounting_period'
          | 'payments,contact,company'
          | 'payments,contact,company,accounting_period'
          | 'payments,line_items'
          | 'payments,line_items,accounting_period'
          | 'payments,line_items,company'
          | 'payments,line_items,company,accounting_period'
          | 'payments,line_items,contact'
          | 'payments,line_items,contact,accounting_period'
          | 'payments,line_items,contact,company'
          | 'payments,line_items,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories'
          | 'payments,line_items,tracking_categories,accounting_period'
          | 'payments,line_items,tracking_categories,company'
          | 'payments,line_items,tracking_categories,company,accounting_period'
          | 'payments,line_items,tracking_categories,contact'
          | 'payments,line_items,tracking_categories,contact,accounting_period'
          | 'payments,line_items,tracking_categories,contact,company'
          | 'payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'payments,tracking_categories'
          | 'payments,tracking_categories,accounting_period'
          | 'payments,tracking_categories,company'
          | 'payments,tracking_categories,company,accounting_period'
          | 'payments,tracking_categories,contact'
          | 'payments,tracking_categories,contact,accounting_period'
          | 'payments,tracking_categories,contact,company'
          | 'payments,tracking_categories,contact,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,accounting_period'
          | 'tracking_categories,contact,company'
          | 'tracking_categories,contact,company,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status' | 'status,type' | 'type'
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status' | 'status,type' | 'type'
        /** @description If provided, will only return objects created after this datetime. */
        transaction_date_after?: string | null
        /** @description If provided, will only return objects created before this datetime. */
        transaction_date_before?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedCreditNoteList']
        }
      }
    }
  }
  credit_notes_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreditNoteEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['CreditNoteEndpointRequest']
        'multipart/form-data': components['schemas']['CreditNoteEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CreditNoteResponse']
        }
      }
    }
  }
  credit_notes_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'applied_payments'
          | 'applied_payments,accounting_period'
          | 'applied_payments,company'
          | 'applied_payments,company,accounting_period'
          | 'applied_payments,contact'
          | 'applied_payments,contact,accounting_period'
          | 'applied_payments,contact,company'
          | 'applied_payments,contact,company,accounting_period'
          | 'applied_payments,line_items'
          | 'applied_payments,line_items,accounting_period'
          | 'applied_payments,line_items,company'
          | 'applied_payments,line_items,company,accounting_period'
          | 'applied_payments,line_items,contact'
          | 'applied_payments,line_items,contact,accounting_period'
          | 'applied_payments,line_items,contact,company'
          | 'applied_payments,line_items,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories'
          | 'applied_payments,line_items,tracking_categories,accounting_period'
          | 'applied_payments,line_items,tracking_categories,company'
          | 'applied_payments,line_items,tracking_categories,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact'
          | 'applied_payments,line_items,tracking_categories,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact,company'
          | 'applied_payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'applied_payments,tracking_categories'
          | 'applied_payments,tracking_categories,accounting_period'
          | 'applied_payments,tracking_categories,company'
          | 'applied_payments,tracking_categories,company,accounting_period'
          | 'applied_payments,tracking_categories,contact'
          | 'applied_payments,tracking_categories,contact,accounting_period'
          | 'applied_payments,tracking_categories,contact,company'
          | 'applied_payments,tracking_categories,contact,company,accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'contact'
          | 'contact,accounting_period'
          | 'contact,company'
          | 'contact,company,accounting_period'
          | 'line_items'
          | 'line_items,accounting_period'
          | 'line_items,company'
          | 'line_items,company,accounting_period'
          | 'line_items,contact'
          | 'line_items,contact,accounting_period'
          | 'line_items,contact,company'
          | 'line_items,contact,company,accounting_period'
          | 'line_items,tracking_categories'
          | 'line_items,tracking_categories,accounting_period'
          | 'line_items,tracking_categories,company'
          | 'line_items,tracking_categories,company,accounting_period'
          | 'line_items,tracking_categories,contact'
          | 'line_items,tracking_categories,contact,accounting_period'
          | 'line_items,tracking_categories,contact,company'
          | 'line_items,tracking_categories,contact,company,accounting_period'
          | 'payments'
          | 'payments,accounting_period'
          | 'payments,applied_payments'
          | 'payments,applied_payments,accounting_period'
          | 'payments,applied_payments,company'
          | 'payments,applied_payments,company,accounting_period'
          | 'payments,applied_payments,contact'
          | 'payments,applied_payments,contact,accounting_period'
          | 'payments,applied_payments,contact,company'
          | 'payments,applied_payments,contact,company,accounting_period'
          | 'payments,applied_payments,line_items'
          | 'payments,applied_payments,line_items,accounting_period'
          | 'payments,applied_payments,line_items,company'
          | 'payments,applied_payments,line_items,company,accounting_period'
          | 'payments,applied_payments,line_items,contact'
          | 'payments,applied_payments,line_items,contact,accounting_period'
          | 'payments,applied_payments,line_items,contact,company'
          | 'payments,applied_payments,line_items,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories'
          | 'payments,applied_payments,line_items,tracking_categories,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,company'
          | 'payments,applied_payments,line_items,tracking_categories,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact'
          | 'payments,applied_payments,line_items,tracking_categories,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories'
          | 'payments,applied_payments,tracking_categories,accounting_period'
          | 'payments,applied_payments,tracking_categories,company'
          | 'payments,applied_payments,tracking_categories,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact'
          | 'payments,applied_payments,tracking_categories,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact,company'
          | 'payments,applied_payments,tracking_categories,contact,company,accounting_period'
          | 'payments,company'
          | 'payments,company,accounting_period'
          | 'payments,contact'
          | 'payments,contact,accounting_period'
          | 'payments,contact,company'
          | 'payments,contact,company,accounting_period'
          | 'payments,line_items'
          | 'payments,line_items,accounting_period'
          | 'payments,line_items,company'
          | 'payments,line_items,company,accounting_period'
          | 'payments,line_items,contact'
          | 'payments,line_items,contact,accounting_period'
          | 'payments,line_items,contact,company'
          | 'payments,line_items,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories'
          | 'payments,line_items,tracking_categories,accounting_period'
          | 'payments,line_items,tracking_categories,company'
          | 'payments,line_items,tracking_categories,company,accounting_period'
          | 'payments,line_items,tracking_categories,contact'
          | 'payments,line_items,tracking_categories,contact,accounting_period'
          | 'payments,line_items,tracking_categories,contact,company'
          | 'payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'payments,tracking_categories'
          | 'payments,tracking_categories,accounting_period'
          | 'payments,tracking_categories,company'
          | 'payments,tracking_categories,company,accounting_period'
          | 'payments,tracking_categories,contact'
          | 'payments,tracking_categories,contact,accounting_period'
          | 'payments,tracking_categories,contact,company'
          | 'payments,tracking_categories,contact,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,accounting_period'
          | 'tracking_categories,contact,company'
          | 'tracking_categories,contact,company,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status' | 'status,type' | 'type'
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status' | 'status,type' | 'type'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CreditNote']
        }
      }
    }
  }
  credit_notes_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  default_scopes_retrieve: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CommonModelScopeAPI']
        }
      }
    }
  }
  delete_account_delete: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  employees_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedEmployeeList']
        }
      }
    }
  }
  employees_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Employee']
        }
      }
    }
  }
  expenses_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return expenses for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'account'
          | 'account,accounting_period'
          | 'account,company'
          | 'account,company,accounting_period'
          | 'account,company,employee'
          | 'account,company,employee,accounting_period'
          | 'account,contact'
          | 'account,contact,accounting_period'
          | 'account,contact,company'
          | 'account,contact,company,accounting_period'
          | 'account,contact,company,employee'
          | 'account,contact,company,employee,accounting_period'
          | 'account,contact,employee'
          | 'account,contact,employee,accounting_period'
          | 'account,employee'
          | 'account,employee,accounting_period'
          | 'accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'company,employee'
          | 'company,employee,accounting_period'
          | 'contact'
          | 'contact,accounting_period'
          | 'contact,company'
          | 'contact,company,accounting_period'
          | 'contact,company,employee'
          | 'contact,company,employee,accounting_period'
          | 'contact,employee'
          | 'contact,employee,accounting_period'
          | 'employee'
          | 'employee,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,account'
          | 'tracking_categories,account,accounting_period'
          | 'tracking_categories,account,company'
          | 'tracking_categories,account,company,accounting_period'
          | 'tracking_categories,account,company,employee'
          | 'tracking_categories,account,company,employee,accounting_period'
          | 'tracking_categories,account,contact'
          | 'tracking_categories,account,contact,accounting_period'
          | 'tracking_categories,account,contact,company'
          | 'tracking_categories,account,contact,company,accounting_period'
          | 'tracking_categories,account,contact,company,employee'
          | 'tracking_categories,account,contact,company,employee,accounting_period'
          | 'tracking_categories,account,contact,employee'
          | 'tracking_categories,account,contact,employee,accounting_period'
          | 'tracking_categories,account,employee'
          | 'tracking_categories,account,employee,accounting_period'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,company,employee'
          | 'tracking_categories,company,employee,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,accounting_period'
          | 'tracking_categories,contact,company'
          | 'tracking_categories,contact,company,accounting_period'
          | 'tracking_categories,contact,company,employee'
          | 'tracking_categories,contact,company,employee,accounting_period'
          | 'tracking_categories,contact,employee'
          | 'tracking_categories,contact,employee,accounting_period'
          | 'tracking_categories,employee'
          | 'tracking_categories,employee,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description If provided, will only return objects created after this datetime. */
        transaction_date_after?: string | null
        /** @description If provided, will only return objects created before this datetime. */
        transaction_date_before?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedExpenseList']
        }
      }
    }
  }
  expenses_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ExpenseEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['ExpenseEndpointRequest']
        'multipart/form-data': components['schemas']['ExpenseEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ExpenseResponse']
        }
      }
    }
  }
  expenses_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'account'
          | 'account,accounting_period'
          | 'account,company'
          | 'account,company,accounting_period'
          | 'account,company,employee'
          | 'account,company,employee,accounting_period'
          | 'account,contact'
          | 'account,contact,accounting_period'
          | 'account,contact,company'
          | 'account,contact,company,accounting_period'
          | 'account,contact,company,employee'
          | 'account,contact,company,employee,accounting_period'
          | 'account,contact,employee'
          | 'account,contact,employee,accounting_period'
          | 'account,employee'
          | 'account,employee,accounting_period'
          | 'accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'company,employee'
          | 'company,employee,accounting_period'
          | 'contact'
          | 'contact,accounting_period'
          | 'contact,company'
          | 'contact,company,accounting_period'
          | 'contact,company,employee'
          | 'contact,company,employee,accounting_period'
          | 'contact,employee'
          | 'contact,employee,accounting_period'
          | 'employee'
          | 'employee,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,account'
          | 'tracking_categories,account,accounting_period'
          | 'tracking_categories,account,company'
          | 'tracking_categories,account,company,accounting_period'
          | 'tracking_categories,account,company,employee'
          | 'tracking_categories,account,company,employee,accounting_period'
          | 'tracking_categories,account,contact'
          | 'tracking_categories,account,contact,accounting_period'
          | 'tracking_categories,account,contact,company'
          | 'tracking_categories,account,contact,company,accounting_period'
          | 'tracking_categories,account,contact,company,employee'
          | 'tracking_categories,account,contact,company,employee,accounting_period'
          | 'tracking_categories,account,contact,employee'
          | 'tracking_categories,account,contact,employee,accounting_period'
          | 'tracking_categories,account,employee'
          | 'tracking_categories,account,employee,accounting_period'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,company,employee'
          | 'tracking_categories,company,employee,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,accounting_period'
          | 'tracking_categories,contact,company'
          | 'tracking_categories,contact,company,accounting_period'
          | 'tracking_categories,contact,company,employee'
          | 'tracking_categories,contact,company,employee,accounting_period'
          | 'tracking_categories,contact,employee'
          | 'tracking_categories,contact,employee,accounting_period'
          | 'tracking_categories,employee'
          | 'tracking_categories,employee,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Expense']
        }
      }
    }
  }
  expenses_lines_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  expenses_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  expenses_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  field_mappings_retrieve: {
    parameters: {
      query?: {
        /** @description If `true`, remote fields metadata is excluded from each field mapping instance (i.e. `remote_fields.remote_key_name` and `remote_fields.schema` will be null). This will increase the speed of the request since these fields require some calculations. */
        exclude_remote_field_metadata?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['FieldMappingApiInstanceResponse']
        }
      }
    }
  }
  field_mappings_create: {
    parameters: {
      query?: {
        /** @description If `true`, remote fields metadata is excluded from each field mapping instance (i.e. `remote_fields.remote_key_name` and `remote_fields.schema` will be null). This will increase the speed of the request since these fields require some calculations. */
        exclude_remote_field_metadata?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateFieldMappingRequest']
        'application/x-www-form-urlencoded': components['schemas']['CreateFieldMappingRequest']
        'multipart/form-data': components['schemas']['CreateFieldMappingRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['FieldMappingInstanceResponse']
        }
      }
    }
  }
  field_mappings_destroy: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        field_mapping_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['FieldMappingInstanceResponse']
        }
      }
    }
  }
  field_mappings_partial_update: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        field_mapping_id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['PatchedEditFieldMappingRequest']
        'application/x-www-form-urlencoded': components['schemas']['PatchedEditFieldMappingRequest']
        'multipart/form-data': components['schemas']['PatchedEditFieldMappingRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['FieldMappingInstanceResponse']
        }
      }
    }
  }
  general_ledger_transactions_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return general ledger transactions for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'general_ledger_transaction_lines'
          | 'general_ledger_transaction_lines,accounting_period'
          | 'general_ledger_transaction_lines,company'
          | 'general_ledger_transaction_lines,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,general_ledger_transaction_lines'
          | 'tracking_categories,general_ledger_transaction_lines,accounting_period'
          | 'tracking_categories,general_ledger_transaction_lines,company'
          | 'tracking_categories,general_ledger_transaction_lines,company,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description If provided, will only return objects posted after this datetime. */
        posted_date_after?: string | null
        /** @description If provided, will only return objects posted before this datetime. */
        posted_date_before?: string | null
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedGeneralLedgerTransactionList']
        }
      }
    }
  }
  general_ledger_transactions_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'general_ledger_transaction_lines'
          | 'general_ledger_transaction_lines,accounting_period'
          | 'general_ledger_transaction_lines,company'
          | 'general_ledger_transaction_lines,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,general_ledger_transaction_lines'
          | 'tracking_categories,general_ledger_transaction_lines,accounting_period'
          | 'tracking_categories,general_ledger_transaction_lines,company'
          | 'tracking_categories,general_ledger_transaction_lines,company,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GeneralLedgerTransaction']
        }
      }
    }
  }
  generate_key_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['GenerateRemoteKeyRequest']
        'application/x-www-form-urlencoded': components['schemas']['GenerateRemoteKeyRequest']
        'multipart/form-data': components['schemas']['GenerateRemoteKeyRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RemoteKey']
        }
      }
    }
  }
  income_statements_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return income statements for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedIncomeStatementList']
        }
      }
    }
  }
  income_statements_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['IncomeStatement']
        }
      }
    }
  }
  invoices_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return invoices for this company. */
        company_id?: string
        /** @description If provided, will only return invoices for this contact. */
        contact_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'applied_credit_notes'
          | 'applied_credit_notes,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits'
          | 'applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,company'
          | 'applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_credit_notes,company'
          | 'applied_credit_notes,company,accounting_period'
          | 'applied_credit_notes,company,employee'
          | 'applied_credit_notes,company,employee,accounting_period'
          | 'applied_credit_notes,contact'
          | 'applied_credit_notes,contact,accounting_period'
          | 'applied_credit_notes,contact,company'
          | 'applied_credit_notes,contact,company,accounting_period'
          | 'applied_credit_notes,contact,company,employee'
          | 'applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_credit_notes,contact,employee'
          | 'applied_credit_notes,contact,employee,accounting_period'
          | 'applied_credit_notes,employee'
          | 'applied_credit_notes,employee,accounting_period'
          | 'applied_payments'
          | 'applied_payments,accounting_period'
          | 'applied_payments,applied_credit_notes'
          | 'applied_payments,applied_credit_notes,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,company'
          | 'applied_payments,applied_credit_notes,company,accounting_period'
          | 'applied_payments,applied_credit_notes,company,employee'
          | 'applied_payments,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,contact'
          | 'applied_payments,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,applied_credit_notes,contact,company'
          | 'applied_payments,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,applied_credit_notes,contact,company,employee'
          | 'applied_payments,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,contact,employee'
          | 'applied_payments,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,employee'
          | 'applied_payments,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,applied_vendor_credits'
          | 'applied_payments,applied_vendor_credits,accounting_period'
          | 'applied_payments,applied_vendor_credits,company'
          | 'applied_payments,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,applied_vendor_credits,company,employee'
          | 'applied_payments,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,applied_vendor_credits,contact'
          | 'applied_payments,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,applied_vendor_credits,contact,company'
          | 'applied_payments,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,applied_vendor_credits,contact,employee'
          | 'applied_payments,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,applied_vendor_credits,employee'
          | 'applied_payments,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,company'
          | 'applied_payments,company,accounting_period'
          | 'applied_payments,company,employee'
          | 'applied_payments,company,employee,accounting_period'
          | 'applied_payments,contact'
          | 'applied_payments,contact,accounting_period'
          | 'applied_payments,contact,company'
          | 'applied_payments,contact,company,accounting_period'
          | 'applied_payments,contact,company,employee'
          | 'applied_payments,contact,company,employee,accounting_period'
          | 'applied_payments,contact,employee'
          | 'applied_payments,contact,employee,accounting_period'
          | 'applied_payments,employee'
          | 'applied_payments,employee,accounting_period'
          | 'applied_payments,line_items'
          | 'applied_payments,line_items,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes'
          | 'applied_payments,line_items,applied_credit_notes,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,company'
          | 'applied_payments,line_items,applied_credit_notes,company,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,company,employee'
          | 'applied_payments,line_items,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,contact'
          | 'applied_payments,line_items,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,contact,company'
          | 'applied_payments,line_items,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,contact,company,employee'
          | 'applied_payments,line_items,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,contact,employee'
          | 'applied_payments,line_items,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,employee'
          | 'applied_payments,line_items,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits'
          | 'applied_payments,line_items,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,company'
          | 'applied_payments,line_items,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,contact'
          | 'applied_payments,line_items,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,employee'
          | 'applied_payments,line_items,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,company'
          | 'applied_payments,line_items,company,accounting_period'
          | 'applied_payments,line_items,company,employee'
          | 'applied_payments,line_items,company,employee,accounting_period'
          | 'applied_payments,line_items,contact'
          | 'applied_payments,line_items,contact,accounting_period'
          | 'applied_payments,line_items,contact,company'
          | 'applied_payments,line_items,contact,company,accounting_period'
          | 'applied_payments,line_items,contact,company,employee'
          | 'applied_payments,line_items,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,contact,employee'
          | 'applied_payments,line_items,contact,employee,accounting_period'
          | 'applied_payments,line_items,employee'
          | 'applied_payments,line_items,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders'
          | 'applied_payments,line_items,purchase_orders,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,company'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,company'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,employee'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,company'
          | 'applied_payments,line_items,purchase_orders,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,company,employee'
          | 'applied_payments,line_items,purchase_orders,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,contact'
          | 'applied_payments,line_items,purchase_orders,contact,accounting_period'
          | 'applied_payments,line_items,purchase_orders,contact,company'
          | 'applied_payments,line_items,purchase_orders,contact,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,contact,company,employee'
          | 'applied_payments,line_items,purchase_orders,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,contact,employee'
          | 'applied_payments,line_items,purchase_orders,contact,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,employee'
          | 'applied_payments,line_items,purchase_orders,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories'
          | 'applied_payments,line_items,tracking_categories,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,company'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,company'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,employee'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,company'
          | 'applied_payments,line_items,tracking_categories,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,company,employee'
          | 'applied_payments,line_items,tracking_categories,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact'
          | 'applied_payments,line_items,tracking_categories,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact,company'
          | 'applied_payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact,employee'
          | 'applied_payments,line_items,tracking_categories,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,employee'
          | 'applied_payments,line_items,tracking_categories,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,employee,accounting_period'
          | 'applied_payments,purchase_orders'
          | 'applied_payments,purchase_orders,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes'
          | 'applied_payments,purchase_orders,applied_credit_notes,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,company'
          | 'applied_payments,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,company,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,company'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits'
          | 'applied_payments,purchase_orders,applied_vendor_credits,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,company'
          | 'applied_payments,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,company,employee'
          | 'applied_payments,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,company'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,employee'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,employee'
          | 'applied_payments,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,purchase_orders,company'
          | 'applied_payments,purchase_orders,company,accounting_period'
          | 'applied_payments,purchase_orders,company,employee'
          | 'applied_payments,purchase_orders,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,contact'
          | 'applied_payments,purchase_orders,contact,accounting_period'
          | 'applied_payments,purchase_orders,contact,company'
          | 'applied_payments,purchase_orders,contact,company,accounting_period'
          | 'applied_payments,purchase_orders,contact,company,employee'
          | 'applied_payments,purchase_orders,contact,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,contact,employee'
          | 'applied_payments,purchase_orders,contact,employee,accounting_period'
          | 'applied_payments,purchase_orders,employee'
          | 'applied_payments,purchase_orders,employee,accounting_period'
          | 'applied_payments,tracking_categories'
          | 'applied_payments,tracking_categories,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes'
          | 'applied_payments,tracking_categories,applied_credit_notes,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,company'
          | 'applied_payments,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,company,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,company'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits'
          | 'applied_payments,tracking_categories,applied_vendor_credits,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,company'
          | 'applied_payments,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,company,employee'
          | 'applied_payments,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,company'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,employee'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,employee'
          | 'applied_payments,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,tracking_categories,company'
          | 'applied_payments,tracking_categories,company,accounting_period'
          | 'applied_payments,tracking_categories,company,employee'
          | 'applied_payments,tracking_categories,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,contact'
          | 'applied_payments,tracking_categories,contact,accounting_period'
          | 'applied_payments,tracking_categories,contact,company'
          | 'applied_payments,tracking_categories,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,contact,company,employee'
          | 'applied_payments,tracking_categories,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,contact,employee'
          | 'applied_payments,tracking_categories,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,employee'
          | 'applied_payments,tracking_categories,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders'
          | 'applied_payments,tracking_categories,purchase_orders,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,company'
          | 'applied_payments,tracking_categories,purchase_orders,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,contact'
          | 'applied_payments,tracking_categories,purchase_orders,contact,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,contact,company'
          | 'applied_payments,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,contact,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,contact,employee'
          | 'applied_payments,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,employee'
          | 'applied_payments,tracking_categories,purchase_orders,employee,accounting_period'
          | 'applied_vendor_credits'
          | 'applied_vendor_credits,accounting_period'
          | 'applied_vendor_credits,company'
          | 'applied_vendor_credits,company,accounting_period'
          | 'applied_vendor_credits,company,employee'
          | 'applied_vendor_credits,company,employee,accounting_period'
          | 'applied_vendor_credits,contact'
          | 'applied_vendor_credits,contact,accounting_period'
          | 'applied_vendor_credits,contact,company'
          | 'applied_vendor_credits,contact,company,accounting_period'
          | 'applied_vendor_credits,contact,company,employee'
          | 'applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_vendor_credits,contact,employee'
          | 'applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_vendor_credits,employee'
          | 'applied_vendor_credits,employee,accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'company,employee'
          | 'company,employee,accounting_period'
          | 'contact'
          | 'contact,accounting_period'
          | 'contact,company'
          | 'contact,company,accounting_period'
          | 'contact,company,employee'
          | 'contact,company,employee,accounting_period'
          | 'contact,employee'
          | 'contact,employee,accounting_period'
          | 'employee'
          | 'employee,accounting_period'
          | 'line_items'
          | 'line_items,accounting_period'
          | 'line_items,applied_credit_notes'
          | 'line_items,applied_credit_notes,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits'
          | 'line_items,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,company'
          | 'line_items,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'line_items,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,employee'
          | 'line_items,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'line_items,applied_credit_notes,company'
          | 'line_items,applied_credit_notes,company,accounting_period'
          | 'line_items,applied_credit_notes,company,employee'
          | 'line_items,applied_credit_notes,company,employee,accounting_period'
          | 'line_items,applied_credit_notes,contact'
          | 'line_items,applied_credit_notes,contact,accounting_period'
          | 'line_items,applied_credit_notes,contact,company'
          | 'line_items,applied_credit_notes,contact,company,accounting_period'
          | 'line_items,applied_credit_notes,contact,company,employee'
          | 'line_items,applied_credit_notes,contact,company,employee,accounting_period'
          | 'line_items,applied_credit_notes,contact,employee'
          | 'line_items,applied_credit_notes,contact,employee,accounting_period'
          | 'line_items,applied_credit_notes,employee'
          | 'line_items,applied_credit_notes,employee,accounting_period'
          | 'line_items,applied_vendor_credits'
          | 'line_items,applied_vendor_credits,accounting_period'
          | 'line_items,applied_vendor_credits,company'
          | 'line_items,applied_vendor_credits,company,accounting_period'
          | 'line_items,applied_vendor_credits,company,employee'
          | 'line_items,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,applied_vendor_credits,contact'
          | 'line_items,applied_vendor_credits,contact,accounting_period'
          | 'line_items,applied_vendor_credits,contact,company'
          | 'line_items,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,applied_vendor_credits,contact,company,employee'
          | 'line_items,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,applied_vendor_credits,contact,employee'
          | 'line_items,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,applied_vendor_credits,employee'
          | 'line_items,applied_vendor_credits,employee,accounting_period'
          | 'line_items,company'
          | 'line_items,company,accounting_period'
          | 'line_items,company,employee'
          | 'line_items,company,employee,accounting_period'
          | 'line_items,contact'
          | 'line_items,contact,accounting_period'
          | 'line_items,contact,company'
          | 'line_items,contact,company,accounting_period'
          | 'line_items,contact,company,employee'
          | 'line_items,contact,company,employee,accounting_period'
          | 'line_items,contact,employee'
          | 'line_items,contact,employee,accounting_period'
          | 'line_items,employee'
          | 'line_items,employee,accounting_period'
          | 'line_items,purchase_orders'
          | 'line_items,purchase_orders,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes'
          | 'line_items,purchase_orders,applied_credit_notes,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,company'
          | 'line_items,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,company,employee'
          | 'line_items,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,contact'
          | 'line_items,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,contact,company'
          | 'line_items,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'line_items,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,contact,employee'
          | 'line_items,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,employee'
          | 'line_items,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits'
          | 'line_items,purchase_orders,applied_vendor_credits,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,company'
          | 'line_items,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,company,employee'
          | 'line_items,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,contact'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,company'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,employee'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,employee'
          | 'line_items,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'line_items,purchase_orders,company'
          | 'line_items,purchase_orders,company,accounting_period'
          | 'line_items,purchase_orders,company,employee'
          | 'line_items,purchase_orders,company,employee,accounting_period'
          | 'line_items,purchase_orders,contact'
          | 'line_items,purchase_orders,contact,accounting_period'
          | 'line_items,purchase_orders,contact,company'
          | 'line_items,purchase_orders,contact,company,accounting_period'
          | 'line_items,purchase_orders,contact,company,employee'
          | 'line_items,purchase_orders,contact,company,employee,accounting_period'
          | 'line_items,purchase_orders,contact,employee'
          | 'line_items,purchase_orders,contact,employee,accounting_period'
          | 'line_items,purchase_orders,employee'
          | 'line_items,purchase_orders,employee,accounting_period'
          | 'line_items,tracking_categories'
          | 'line_items,tracking_categories,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes'
          | 'line_items,tracking_categories,applied_credit_notes,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,company'
          | 'line_items,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,company,employee'
          | 'line_items,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,contact'
          | 'line_items,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,contact,company'
          | 'line_items,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'line_items,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,contact,employee'
          | 'line_items,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,employee'
          | 'line_items,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits'
          | 'line_items,tracking_categories,applied_vendor_credits,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,company'
          | 'line_items,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,company,employee'
          | 'line_items,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,contact'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,company'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,employee'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,employee'
          | 'line_items,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'line_items,tracking_categories,company'
          | 'line_items,tracking_categories,company,accounting_period'
          | 'line_items,tracking_categories,company,employee'
          | 'line_items,tracking_categories,company,employee,accounting_period'
          | 'line_items,tracking_categories,contact'
          | 'line_items,tracking_categories,contact,accounting_period'
          | 'line_items,tracking_categories,contact,company'
          | 'line_items,tracking_categories,contact,company,accounting_period'
          | 'line_items,tracking_categories,contact,company,employee'
          | 'line_items,tracking_categories,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,contact,employee'
          | 'line_items,tracking_categories,contact,employee,accounting_period'
          | 'line_items,tracking_categories,employee'
          | 'line_items,tracking_categories,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders'
          | 'line_items,tracking_categories,purchase_orders,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,company'
          | 'line_items,tracking_categories,purchase_orders,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,company,employee'
          | 'line_items,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,contact'
          | 'line_items,tracking_categories,purchase_orders,contact,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,contact,company'
          | 'line_items,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,contact,company,employee'
          | 'line_items,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,contact,employee'
          | 'line_items,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,employee'
          | 'line_items,tracking_categories,purchase_orders,employee,accounting_period'
          | 'payments'
          | 'payments,accounting_period'
          | 'payments,applied_credit_notes'
          | 'payments,applied_credit_notes,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_credit_notes,company'
          | 'payments,applied_credit_notes,company,accounting_period'
          | 'payments,applied_credit_notes,company,employee'
          | 'payments,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_credit_notes,contact'
          | 'payments,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_credit_notes,contact,company'
          | 'payments,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_credit_notes,contact,company,employee'
          | 'payments,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_credit_notes,contact,employee'
          | 'payments,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_credit_notes,employee'
          | 'payments,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments'
          | 'payments,applied_payments,accounting_period'
          | 'payments,applied_payments,applied_credit_notes'
          | 'payments,applied_payments,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,company'
          | 'payments,applied_payments,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,company,employee'
          | 'payments,applied_payments,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,contact'
          | 'payments,applied_payments,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,contact,company'
          | 'payments,applied_payments,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,employee'
          | 'payments,applied_payments,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits'
          | 'payments,applied_payments,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,company'
          | 'payments,applied_payments,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,contact'
          | 'payments,applied_payments,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,employee'
          | 'payments,applied_payments,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,company'
          | 'payments,applied_payments,company,accounting_period'
          | 'payments,applied_payments,company,employee'
          | 'payments,applied_payments,company,employee,accounting_period'
          | 'payments,applied_payments,contact'
          | 'payments,applied_payments,contact,accounting_period'
          | 'payments,applied_payments,contact,company'
          | 'payments,applied_payments,contact,company,accounting_period'
          | 'payments,applied_payments,contact,company,employee'
          | 'payments,applied_payments,contact,company,employee,accounting_period'
          | 'payments,applied_payments,contact,employee'
          | 'payments,applied_payments,contact,employee,accounting_period'
          | 'payments,applied_payments,employee'
          | 'payments,applied_payments,employee,accounting_period'
          | 'payments,applied_payments,line_items'
          | 'payments,applied_payments,line_items,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes'
          | 'payments,applied_payments,line_items,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,company'
          | 'payments,applied_payments,line_items,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,company,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,company'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits'
          | 'payments,applied_payments,line_items,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,company'
          | 'payments,applied_payments,line_items,company,accounting_period'
          | 'payments,applied_payments,line_items,company,employee'
          | 'payments,applied_payments,line_items,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,contact'
          | 'payments,applied_payments,line_items,contact,accounting_period'
          | 'payments,applied_payments,line_items,contact,company'
          | 'payments,applied_payments,line_items,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,contact,company,employee'
          | 'payments,applied_payments,line_items,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,contact,employee'
          | 'payments,applied_payments,line_items,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,employee'
          | 'payments,applied_payments,line_items,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders'
          | 'payments,applied_payments,line_items,purchase_orders,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,company'
          | 'payments,applied_payments,line_items,purchase_orders,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,contact'
          | 'payments,applied_payments,line_items,purchase_orders,contact,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,contact,company'
          | 'payments,applied_payments,line_items,purchase_orders,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,contact,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,contact,employee'
          | 'payments,applied_payments,line_items,purchase_orders,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,employee'
          | 'payments,applied_payments,line_items,purchase_orders,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories'
          | 'payments,applied_payments,line_items,tracking_categories,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,company'
          | 'payments,applied_payments,line_items,tracking_categories,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact'
          | 'payments,applied_payments,line_items,tracking_categories,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,employee'
          | 'payments,applied_payments,line_items,tracking_categories,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders'
          | 'payments,applied_payments,purchase_orders,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,company'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,company'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,employee'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,company'
          | 'payments,applied_payments,purchase_orders,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,company,employee'
          | 'payments,applied_payments,purchase_orders,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,contact'
          | 'payments,applied_payments,purchase_orders,contact,accounting_period'
          | 'payments,applied_payments,purchase_orders,contact,company'
          | 'payments,applied_payments,purchase_orders,contact,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,contact,company,employee'
          | 'payments,applied_payments,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,contact,employee'
          | 'payments,applied_payments,purchase_orders,contact,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,employee'
          | 'payments,applied_payments,purchase_orders,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories'
          | 'payments,applied_payments,tracking_categories,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,company'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,company'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,company'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,employee'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,company'
          | 'payments,applied_payments,tracking_categories,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,company,employee'
          | 'payments,applied_payments,tracking_categories,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact'
          | 'payments,applied_payments,tracking_categories,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact,company'
          | 'payments,applied_payments,tracking_categories,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact,employee'
          | 'payments,applied_payments,tracking_categories,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,employee'
          | 'payments,applied_payments,tracking_categories,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders'
          | 'payments,applied_payments,tracking_categories,purchase_orders,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,employee,accounting_period'
          | 'payments,applied_vendor_credits'
          | 'payments,applied_vendor_credits,accounting_period'
          | 'payments,applied_vendor_credits,company'
          | 'payments,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_vendor_credits,company,employee'
          | 'payments,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_vendor_credits,contact'
          | 'payments,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_vendor_credits,contact,company'
          | 'payments,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_vendor_credits,contact,employee'
          | 'payments,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_vendor_credits,employee'
          | 'payments,applied_vendor_credits,employee,accounting_period'
          | 'payments,company'
          | 'payments,company,accounting_period'
          | 'payments,company,employee'
          | 'payments,company,employee,accounting_period'
          | 'payments,contact'
          | 'payments,contact,accounting_period'
          | 'payments,contact,company'
          | 'payments,contact,company,accounting_period'
          | 'payments,contact,company,employee'
          | 'payments,contact,company,employee,accounting_period'
          | 'payments,contact,employee'
          | 'payments,contact,employee,accounting_period'
          | 'payments,employee'
          | 'payments,employee,accounting_period'
          | 'payments,line_items'
          | 'payments,line_items,accounting_period'
          | 'payments,line_items,applied_credit_notes'
          | 'payments,line_items,applied_credit_notes,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,company'
          | 'payments,line_items,applied_credit_notes,company,accounting_period'
          | 'payments,line_items,applied_credit_notes,company,employee'
          | 'payments,line_items,applied_credit_notes,company,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,contact'
          | 'payments,line_items,applied_credit_notes,contact,accounting_period'
          | 'payments,line_items,applied_credit_notes,contact,company'
          | 'payments,line_items,applied_credit_notes,contact,company,accounting_period'
          | 'payments,line_items,applied_credit_notes,contact,company,employee'
          | 'payments,line_items,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,contact,employee'
          | 'payments,line_items,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,employee'
          | 'payments,line_items,applied_credit_notes,employee,accounting_period'
          | 'payments,line_items,applied_vendor_credits'
          | 'payments,line_items,applied_vendor_credits,accounting_period'
          | 'payments,line_items,applied_vendor_credits,company'
          | 'payments,line_items,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,applied_vendor_credits,company,employee'
          | 'payments,line_items,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,applied_vendor_credits,contact'
          | 'payments,line_items,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,applied_vendor_credits,contact,company'
          | 'payments,line_items,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,applied_vendor_credits,contact,employee'
          | 'payments,line_items,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,applied_vendor_credits,employee'
          | 'payments,line_items,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,company'
          | 'payments,line_items,company,accounting_period'
          | 'payments,line_items,company,employee'
          | 'payments,line_items,company,employee,accounting_period'
          | 'payments,line_items,contact'
          | 'payments,line_items,contact,accounting_period'
          | 'payments,line_items,contact,company'
          | 'payments,line_items,contact,company,accounting_period'
          | 'payments,line_items,contact,company,employee'
          | 'payments,line_items,contact,company,employee,accounting_period'
          | 'payments,line_items,contact,employee'
          | 'payments,line_items,contact,employee,accounting_period'
          | 'payments,line_items,employee'
          | 'payments,line_items,employee,accounting_period'
          | 'payments,line_items,purchase_orders'
          | 'payments,line_items,purchase_orders,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes'
          | 'payments,line_items,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,company'
          | 'payments,line_items,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,company'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,employee'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,purchase_orders,company'
          | 'payments,line_items,purchase_orders,company,accounting_period'
          | 'payments,line_items,purchase_orders,company,employee'
          | 'payments,line_items,purchase_orders,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,contact'
          | 'payments,line_items,purchase_orders,contact,accounting_period'
          | 'payments,line_items,purchase_orders,contact,company'
          | 'payments,line_items,purchase_orders,contact,company,accounting_period'
          | 'payments,line_items,purchase_orders,contact,company,employee'
          | 'payments,line_items,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,contact,employee'
          | 'payments,line_items,purchase_orders,contact,employee,accounting_period'
          | 'payments,line_items,purchase_orders,employee'
          | 'payments,line_items,purchase_orders,employee,accounting_period'
          | 'payments,line_items,tracking_categories'
          | 'payments,line_items,tracking_categories,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes'
          | 'payments,line_items,tracking_categories,applied_credit_notes,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,company'
          | 'payments,line_items,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,company,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,company'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,company'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,company,employee'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,company'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,employee'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,employee'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,tracking_categories,company'
          | 'payments,line_items,tracking_categories,company,accounting_period'
          | 'payments,line_items,tracking_categories,company,employee'
          | 'payments,line_items,tracking_categories,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,contact'
          | 'payments,line_items,tracking_categories,contact,accounting_period'
          | 'payments,line_items,tracking_categories,contact,company'
          | 'payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,contact,company,employee'
          | 'payments,line_items,tracking_categories,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,contact,employee'
          | 'payments,line_items,tracking_categories,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,employee'
          | 'payments,line_items,tracking_categories,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders'
          | 'payments,line_items,tracking_categories,purchase_orders,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,company'
          | 'payments,line_items,tracking_categories,purchase_orders,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,contact'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,company'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,employee,accounting_period'
          | 'payments,purchase_orders'
          | 'payments,purchase_orders,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes'
          | 'payments,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,company'
          | 'payments,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,contact'
          | 'payments,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,employee'
          | 'payments,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits'
          | 'payments,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,company'
          | 'payments,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,contact'
          | 'payments,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,employee'
          | 'payments,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,purchase_orders,company'
          | 'payments,purchase_orders,company,accounting_period'
          | 'payments,purchase_orders,company,employee'
          | 'payments,purchase_orders,company,employee,accounting_period'
          | 'payments,purchase_orders,contact'
          | 'payments,purchase_orders,contact,accounting_period'
          | 'payments,purchase_orders,contact,company'
          | 'payments,purchase_orders,contact,company,accounting_period'
          | 'payments,purchase_orders,contact,company,employee'
          | 'payments,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,purchase_orders,contact,employee'
          | 'payments,purchase_orders,contact,employee,accounting_period'
          | 'payments,purchase_orders,employee'
          | 'payments,purchase_orders,employee,accounting_period'
          | 'payments,tracking_categories'
          | 'payments,tracking_categories,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes'
          | 'payments,tracking_categories,applied_credit_notes,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,company'
          | 'payments,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,company,employee'
          | 'payments,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,contact'
          | 'payments,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,contact,company'
          | 'payments,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'payments,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,contact,employee'
          | 'payments,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,employee'
          | 'payments,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits'
          | 'payments,tracking_categories,applied_vendor_credits,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,company'
          | 'payments,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,company,employee'
          | 'payments,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,contact'
          | 'payments,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,contact,company'
          | 'payments,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'payments,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,contact,employee'
          | 'payments,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,employee'
          | 'payments,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'payments,tracking_categories,company'
          | 'payments,tracking_categories,company,accounting_period'
          | 'payments,tracking_categories,company,employee'
          | 'payments,tracking_categories,company,employee,accounting_period'
          | 'payments,tracking_categories,contact'
          | 'payments,tracking_categories,contact,accounting_period'
          | 'payments,tracking_categories,contact,company'
          | 'payments,tracking_categories,contact,company,accounting_period'
          | 'payments,tracking_categories,contact,company,employee'
          | 'payments,tracking_categories,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,contact,employee'
          | 'payments,tracking_categories,contact,employee,accounting_period'
          | 'payments,tracking_categories,employee'
          | 'payments,tracking_categories,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders'
          | 'payments,tracking_categories,purchase_orders,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,company'
          | 'payments,tracking_categories,purchase_orders,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,company,employee'
          | 'payments,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,contact'
          | 'payments,tracking_categories,purchase_orders,contact,accounting_period'
          | 'payments,tracking_categories,purchase_orders,contact,company'
          | 'payments,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,contact,company,employee'
          | 'payments,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,contact,employee'
          | 'payments,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,employee'
          | 'payments,tracking_categories,purchase_orders,employee,accounting_period'
          | 'purchase_orders'
          | 'purchase_orders,accounting_period'
          | 'purchase_orders,applied_credit_notes'
          | 'purchase_orders,applied_credit_notes,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,company'
          | 'purchase_orders,applied_credit_notes,company,accounting_period'
          | 'purchase_orders,applied_credit_notes,company,employee'
          | 'purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,contact'
          | 'purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'purchase_orders,applied_credit_notes,contact,company'
          | 'purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'purchase_orders,applied_credit_notes,contact,company,employee'
          | 'purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,contact,employee'
          | 'purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,employee'
          | 'purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'purchase_orders,applied_vendor_credits'
          | 'purchase_orders,applied_vendor_credits,accounting_period'
          | 'purchase_orders,applied_vendor_credits,company'
          | 'purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'purchase_orders,applied_vendor_credits,company,employee'
          | 'purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'purchase_orders,applied_vendor_credits,contact'
          | 'purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'purchase_orders,applied_vendor_credits,contact,company'
          | 'purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'purchase_orders,applied_vendor_credits,contact,employee'
          | 'purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'purchase_orders,applied_vendor_credits,employee'
          | 'purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'purchase_orders,company'
          | 'purchase_orders,company,accounting_period'
          | 'purchase_orders,company,employee'
          | 'purchase_orders,company,employee,accounting_period'
          | 'purchase_orders,contact'
          | 'purchase_orders,contact,accounting_period'
          | 'purchase_orders,contact,company'
          | 'purchase_orders,contact,company,accounting_period'
          | 'purchase_orders,contact,company,employee'
          | 'purchase_orders,contact,company,employee,accounting_period'
          | 'purchase_orders,contact,employee'
          | 'purchase_orders,contact,employee,accounting_period'
          | 'purchase_orders,employee'
          | 'purchase_orders,employee,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,applied_credit_notes'
          | 'tracking_categories,applied_credit_notes,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,company'
          | 'tracking_categories,applied_credit_notes,company,accounting_period'
          | 'tracking_categories,applied_credit_notes,company,employee'
          | 'tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,contact'
          | 'tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'tracking_categories,applied_credit_notes,contact,company'
          | 'tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'tracking_categories,applied_credit_notes,contact,company,employee'
          | 'tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,contact,employee'
          | 'tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,employee'
          | 'tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'tracking_categories,applied_vendor_credits'
          | 'tracking_categories,applied_vendor_credits,accounting_period'
          | 'tracking_categories,applied_vendor_credits,company'
          | 'tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'tracking_categories,applied_vendor_credits,company,employee'
          | 'tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'tracking_categories,applied_vendor_credits,contact'
          | 'tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'tracking_categories,applied_vendor_credits,contact,company'
          | 'tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'tracking_categories,applied_vendor_credits,contact,employee'
          | 'tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'tracking_categories,applied_vendor_credits,employee'
          | 'tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,company,employee'
          | 'tracking_categories,company,employee,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,accounting_period'
          | 'tracking_categories,contact,company'
          | 'tracking_categories,contact,company,accounting_period'
          | 'tracking_categories,contact,company,employee'
          | 'tracking_categories,contact,company,employee,accounting_period'
          | 'tracking_categories,contact,employee'
          | 'tracking_categories,contact,employee,accounting_period'
          | 'tracking_categories,employee'
          | 'tracking_categories,employee,accounting_period'
          | 'tracking_categories,purchase_orders'
          | 'tracking_categories,purchase_orders,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes'
          | 'tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'tracking_categories,purchase_orders,company'
          | 'tracking_categories,purchase_orders,company,accounting_period'
          | 'tracking_categories,purchase_orders,company,employee'
          | 'tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,contact'
          | 'tracking_categories,purchase_orders,contact,accounting_period'
          | 'tracking_categories,purchase_orders,contact,company'
          | 'tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'tracking_categories,purchase_orders,contact,company,employee'
          | 'tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,contact,employee'
          | 'tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'tracking_categories,purchase_orders,employee'
          | 'tracking_categories,purchase_orders,employee,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return objects created after this datetime. */
        issue_date_after?: string | null
        /** @description If provided, will only return objects created before this datetime. */
        issue_date_before?: string | null
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description If provided, will only return Invoices with this number. */
        number?: string | null
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'type'
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'type'
        /** @description If provided, will only return Invoices with this status.
         *
         *     * `PAID` - PAID
         *     * `DRAFT` - DRAFT
         *     * `SUBMITTED` - SUBMITTED
         *     * `PARTIALLY_PAID` - PARTIALLY_PAID
         *     * `OPEN` - OPEN
         *     * `VOID` - VOID */
        status?:
          | 'DRAFT'
          | 'OPEN'
          | 'PAID'
          | 'PARTIALLY_PAID'
          | 'SUBMITTED'
          | 'VOID'
          | null
        /** @description If provided, will only return Invoices with this type.
         *
         *     * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
         *     * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE */
        type?: 'ACCOUNTS_PAYABLE' | 'ACCOUNTS_RECEIVABLE' | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedInvoiceList']
        }
      }
    }
  }
  invoices_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['InvoiceEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['InvoiceEndpointRequest']
        'multipart/form-data': components['schemas']['InvoiceEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InvoiceResponse']
        }
      }
    }
  }
  invoices_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'applied_credit_notes'
          | 'applied_credit_notes,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits'
          | 'applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,company'
          | 'applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_credit_notes,company'
          | 'applied_credit_notes,company,accounting_period'
          | 'applied_credit_notes,company,employee'
          | 'applied_credit_notes,company,employee,accounting_period'
          | 'applied_credit_notes,contact'
          | 'applied_credit_notes,contact,accounting_period'
          | 'applied_credit_notes,contact,company'
          | 'applied_credit_notes,contact,company,accounting_period'
          | 'applied_credit_notes,contact,company,employee'
          | 'applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_credit_notes,contact,employee'
          | 'applied_credit_notes,contact,employee,accounting_period'
          | 'applied_credit_notes,employee'
          | 'applied_credit_notes,employee,accounting_period'
          | 'applied_payments'
          | 'applied_payments,accounting_period'
          | 'applied_payments,applied_credit_notes'
          | 'applied_payments,applied_credit_notes,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,company'
          | 'applied_payments,applied_credit_notes,company,accounting_period'
          | 'applied_payments,applied_credit_notes,company,employee'
          | 'applied_payments,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,contact'
          | 'applied_payments,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,applied_credit_notes,contact,company'
          | 'applied_payments,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,applied_credit_notes,contact,company,employee'
          | 'applied_payments,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,contact,employee'
          | 'applied_payments,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,applied_credit_notes,employee'
          | 'applied_payments,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,applied_vendor_credits'
          | 'applied_payments,applied_vendor_credits,accounting_period'
          | 'applied_payments,applied_vendor_credits,company'
          | 'applied_payments,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,applied_vendor_credits,company,employee'
          | 'applied_payments,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,applied_vendor_credits,contact'
          | 'applied_payments,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,applied_vendor_credits,contact,company'
          | 'applied_payments,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,applied_vendor_credits,contact,employee'
          | 'applied_payments,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,applied_vendor_credits,employee'
          | 'applied_payments,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,company'
          | 'applied_payments,company,accounting_period'
          | 'applied_payments,company,employee'
          | 'applied_payments,company,employee,accounting_period'
          | 'applied_payments,contact'
          | 'applied_payments,contact,accounting_period'
          | 'applied_payments,contact,company'
          | 'applied_payments,contact,company,accounting_period'
          | 'applied_payments,contact,company,employee'
          | 'applied_payments,contact,company,employee,accounting_period'
          | 'applied_payments,contact,employee'
          | 'applied_payments,contact,employee,accounting_period'
          | 'applied_payments,employee'
          | 'applied_payments,employee,accounting_period'
          | 'applied_payments,line_items'
          | 'applied_payments,line_items,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes'
          | 'applied_payments,line_items,applied_credit_notes,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,line_items,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,company'
          | 'applied_payments,line_items,applied_credit_notes,company,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,company,employee'
          | 'applied_payments,line_items,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,contact'
          | 'applied_payments,line_items,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,contact,company'
          | 'applied_payments,line_items,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,contact,company,employee'
          | 'applied_payments,line_items,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,contact,employee'
          | 'applied_payments,line_items,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,line_items,applied_credit_notes,employee'
          | 'applied_payments,line_items,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits'
          | 'applied_payments,line_items,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,company'
          | 'applied_payments,line_items,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,contact'
          | 'applied_payments,line_items,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,applied_vendor_credits,employee'
          | 'applied_payments,line_items,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,company'
          | 'applied_payments,line_items,company,accounting_period'
          | 'applied_payments,line_items,company,employee'
          | 'applied_payments,line_items,company,employee,accounting_period'
          | 'applied_payments,line_items,contact'
          | 'applied_payments,line_items,contact,accounting_period'
          | 'applied_payments,line_items,contact,company'
          | 'applied_payments,line_items,contact,company,accounting_period'
          | 'applied_payments,line_items,contact,company,employee'
          | 'applied_payments,line_items,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,contact,employee'
          | 'applied_payments,line_items,contact,employee,accounting_period'
          | 'applied_payments,line_items,employee'
          | 'applied_payments,line_items,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders'
          | 'applied_payments,line_items,purchase_orders,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,company'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,employee'
          | 'applied_payments,line_items,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,company'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,employee'
          | 'applied_payments,line_items,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,company'
          | 'applied_payments,line_items,purchase_orders,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,company,employee'
          | 'applied_payments,line_items,purchase_orders,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,contact'
          | 'applied_payments,line_items,purchase_orders,contact,accounting_period'
          | 'applied_payments,line_items,purchase_orders,contact,company'
          | 'applied_payments,line_items,purchase_orders,contact,company,accounting_period'
          | 'applied_payments,line_items,purchase_orders,contact,company,employee'
          | 'applied_payments,line_items,purchase_orders,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,contact,employee'
          | 'applied_payments,line_items,purchase_orders,contact,employee,accounting_period'
          | 'applied_payments,line_items,purchase_orders,employee'
          | 'applied_payments,line_items,purchase_orders,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories'
          | 'applied_payments,line_items,tracking_categories,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,company'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,employee'
          | 'applied_payments,line_items,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,company'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,employee'
          | 'applied_payments,line_items,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,company'
          | 'applied_payments,line_items,tracking_categories,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,company,employee'
          | 'applied_payments,line_items,tracking_categories,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact'
          | 'applied_payments,line_items,tracking_categories,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact,company'
          | 'applied_payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,contact,employee'
          | 'applied_payments,line_items,tracking_categories,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,employee'
          | 'applied_payments,line_items,tracking_categories,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,company'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,company,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,employee'
          | 'applied_payments,line_items,tracking_categories,purchase_orders,employee,accounting_period'
          | 'applied_payments,purchase_orders'
          | 'applied_payments,purchase_orders,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes'
          | 'applied_payments,purchase_orders,applied_credit_notes,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,company'
          | 'applied_payments,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,company,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,company'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_credit_notes,employee'
          | 'applied_payments,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits'
          | 'applied_payments,purchase_orders,applied_vendor_credits,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,company'
          | 'applied_payments,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,company,employee'
          | 'applied_payments,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,company'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,employee'
          | 'applied_payments,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,purchase_orders,applied_vendor_credits,employee'
          | 'applied_payments,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,purchase_orders,company'
          | 'applied_payments,purchase_orders,company,accounting_period'
          | 'applied_payments,purchase_orders,company,employee'
          | 'applied_payments,purchase_orders,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,contact'
          | 'applied_payments,purchase_orders,contact,accounting_period'
          | 'applied_payments,purchase_orders,contact,company'
          | 'applied_payments,purchase_orders,contact,company,accounting_period'
          | 'applied_payments,purchase_orders,contact,company,employee'
          | 'applied_payments,purchase_orders,contact,company,employee,accounting_period'
          | 'applied_payments,purchase_orders,contact,employee'
          | 'applied_payments,purchase_orders,contact,employee,accounting_period'
          | 'applied_payments,purchase_orders,employee'
          | 'applied_payments,purchase_orders,employee,accounting_period'
          | 'applied_payments,tracking_categories'
          | 'applied_payments,tracking_categories,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes'
          | 'applied_payments,tracking_categories,applied_credit_notes,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,company'
          | 'applied_payments,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,company,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,company'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_credit_notes,employee'
          | 'applied_payments,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits'
          | 'applied_payments,tracking_categories,applied_vendor_credits,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,company'
          | 'applied_payments,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,company,employee'
          | 'applied_payments,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,company'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,employee'
          | 'applied_payments,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,applied_vendor_credits,employee'
          | 'applied_payments,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,tracking_categories,company'
          | 'applied_payments,tracking_categories,company,accounting_period'
          | 'applied_payments,tracking_categories,company,employee'
          | 'applied_payments,tracking_categories,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,contact'
          | 'applied_payments,tracking_categories,contact,accounting_period'
          | 'applied_payments,tracking_categories,contact,company'
          | 'applied_payments,tracking_categories,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,contact,company,employee'
          | 'applied_payments,tracking_categories,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,contact,employee'
          | 'applied_payments,tracking_categories,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,employee'
          | 'applied_payments,tracking_categories,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders'
          | 'applied_payments,tracking_categories,purchase_orders,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,company'
          | 'applied_payments,tracking_categories,purchase_orders,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,contact'
          | 'applied_payments,tracking_categories,purchase_orders,contact,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,contact,company'
          | 'applied_payments,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,contact,company,employee'
          | 'applied_payments,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,contact,employee'
          | 'applied_payments,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'applied_payments,tracking_categories,purchase_orders,employee'
          | 'applied_payments,tracking_categories,purchase_orders,employee,accounting_period'
          | 'applied_vendor_credits'
          | 'applied_vendor_credits,accounting_period'
          | 'applied_vendor_credits,company'
          | 'applied_vendor_credits,company,accounting_period'
          | 'applied_vendor_credits,company,employee'
          | 'applied_vendor_credits,company,employee,accounting_period'
          | 'applied_vendor_credits,contact'
          | 'applied_vendor_credits,contact,accounting_period'
          | 'applied_vendor_credits,contact,company'
          | 'applied_vendor_credits,contact,company,accounting_period'
          | 'applied_vendor_credits,contact,company,employee'
          | 'applied_vendor_credits,contact,company,employee,accounting_period'
          | 'applied_vendor_credits,contact,employee'
          | 'applied_vendor_credits,contact,employee,accounting_period'
          | 'applied_vendor_credits,employee'
          | 'applied_vendor_credits,employee,accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'company,employee'
          | 'company,employee,accounting_period'
          | 'contact'
          | 'contact,accounting_period'
          | 'contact,company'
          | 'contact,company,accounting_period'
          | 'contact,company,employee'
          | 'contact,company,employee,accounting_period'
          | 'contact,employee'
          | 'contact,employee,accounting_period'
          | 'employee'
          | 'employee,accounting_period'
          | 'line_items'
          | 'line_items,accounting_period'
          | 'line_items,applied_credit_notes'
          | 'line_items,applied_credit_notes,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits'
          | 'line_items,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,company'
          | 'line_items,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'line_items,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'line_items,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,applied_credit_notes,applied_vendor_credits,employee'
          | 'line_items,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'line_items,applied_credit_notes,company'
          | 'line_items,applied_credit_notes,company,accounting_period'
          | 'line_items,applied_credit_notes,company,employee'
          | 'line_items,applied_credit_notes,company,employee,accounting_period'
          | 'line_items,applied_credit_notes,contact'
          | 'line_items,applied_credit_notes,contact,accounting_period'
          | 'line_items,applied_credit_notes,contact,company'
          | 'line_items,applied_credit_notes,contact,company,accounting_period'
          | 'line_items,applied_credit_notes,contact,company,employee'
          | 'line_items,applied_credit_notes,contact,company,employee,accounting_period'
          | 'line_items,applied_credit_notes,contact,employee'
          | 'line_items,applied_credit_notes,contact,employee,accounting_period'
          | 'line_items,applied_credit_notes,employee'
          | 'line_items,applied_credit_notes,employee,accounting_period'
          | 'line_items,applied_vendor_credits'
          | 'line_items,applied_vendor_credits,accounting_period'
          | 'line_items,applied_vendor_credits,company'
          | 'line_items,applied_vendor_credits,company,accounting_period'
          | 'line_items,applied_vendor_credits,company,employee'
          | 'line_items,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,applied_vendor_credits,contact'
          | 'line_items,applied_vendor_credits,contact,accounting_period'
          | 'line_items,applied_vendor_credits,contact,company'
          | 'line_items,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,applied_vendor_credits,contact,company,employee'
          | 'line_items,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,applied_vendor_credits,contact,employee'
          | 'line_items,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,applied_vendor_credits,employee'
          | 'line_items,applied_vendor_credits,employee,accounting_period'
          | 'line_items,company'
          | 'line_items,company,accounting_period'
          | 'line_items,company,employee'
          | 'line_items,company,employee,accounting_period'
          | 'line_items,contact'
          | 'line_items,contact,accounting_period'
          | 'line_items,contact,company'
          | 'line_items,contact,company,accounting_period'
          | 'line_items,contact,company,employee'
          | 'line_items,contact,company,employee,accounting_period'
          | 'line_items,contact,employee'
          | 'line_items,contact,employee,accounting_period'
          | 'line_items,employee'
          | 'line_items,employee,accounting_period'
          | 'line_items,purchase_orders'
          | 'line_items,purchase_orders,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes'
          | 'line_items,purchase_orders,applied_credit_notes,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,company'
          | 'line_items,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,company,employee'
          | 'line_items,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,contact'
          | 'line_items,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,contact,company'
          | 'line_items,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'line_items,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,contact,employee'
          | 'line_items,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'line_items,purchase_orders,applied_credit_notes,employee'
          | 'line_items,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits'
          | 'line_items,purchase_orders,applied_vendor_credits,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,company'
          | 'line_items,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,company,employee'
          | 'line_items,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,contact'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,company'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,employee'
          | 'line_items,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,purchase_orders,applied_vendor_credits,employee'
          | 'line_items,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'line_items,purchase_orders,company'
          | 'line_items,purchase_orders,company,accounting_period'
          | 'line_items,purchase_orders,company,employee'
          | 'line_items,purchase_orders,company,employee,accounting_period'
          | 'line_items,purchase_orders,contact'
          | 'line_items,purchase_orders,contact,accounting_period'
          | 'line_items,purchase_orders,contact,company'
          | 'line_items,purchase_orders,contact,company,accounting_period'
          | 'line_items,purchase_orders,contact,company,employee'
          | 'line_items,purchase_orders,contact,company,employee,accounting_period'
          | 'line_items,purchase_orders,contact,employee'
          | 'line_items,purchase_orders,contact,employee,accounting_period'
          | 'line_items,purchase_orders,employee'
          | 'line_items,purchase_orders,employee,accounting_period'
          | 'line_items,tracking_categories'
          | 'line_items,tracking_categories,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes'
          | 'line_items,tracking_categories,applied_credit_notes,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,company'
          | 'line_items,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,company,employee'
          | 'line_items,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,contact'
          | 'line_items,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,contact,company'
          | 'line_items,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'line_items,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,contact,employee'
          | 'line_items,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'line_items,tracking_categories,applied_credit_notes,employee'
          | 'line_items,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits'
          | 'line_items,tracking_categories,applied_vendor_credits,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,company'
          | 'line_items,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,company,employee'
          | 'line_items,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,contact'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,company'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,employee'
          | 'line_items,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,tracking_categories,applied_vendor_credits,employee'
          | 'line_items,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'line_items,tracking_categories,company'
          | 'line_items,tracking_categories,company,accounting_period'
          | 'line_items,tracking_categories,company,employee'
          | 'line_items,tracking_categories,company,employee,accounting_period'
          | 'line_items,tracking_categories,contact'
          | 'line_items,tracking_categories,contact,accounting_period'
          | 'line_items,tracking_categories,contact,company'
          | 'line_items,tracking_categories,contact,company,accounting_period'
          | 'line_items,tracking_categories,contact,company,employee'
          | 'line_items,tracking_categories,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,contact,employee'
          | 'line_items,tracking_categories,contact,employee,accounting_period'
          | 'line_items,tracking_categories,employee'
          | 'line_items,tracking_categories,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders'
          | 'line_items,tracking_categories,purchase_orders,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,company'
          | 'line_items,tracking_categories,purchase_orders,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,company,employee'
          | 'line_items,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,contact'
          | 'line_items,tracking_categories,purchase_orders,contact,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,contact,company'
          | 'line_items,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,contact,company,employee'
          | 'line_items,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,contact,employee'
          | 'line_items,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'line_items,tracking_categories,purchase_orders,employee'
          | 'line_items,tracking_categories,purchase_orders,employee,accounting_period'
          | 'payments'
          | 'payments,accounting_period'
          | 'payments,applied_credit_notes'
          | 'payments,applied_credit_notes,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_credit_notes,company'
          | 'payments,applied_credit_notes,company,accounting_period'
          | 'payments,applied_credit_notes,company,employee'
          | 'payments,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_credit_notes,contact'
          | 'payments,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_credit_notes,contact,company'
          | 'payments,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_credit_notes,contact,company,employee'
          | 'payments,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_credit_notes,contact,employee'
          | 'payments,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_credit_notes,employee'
          | 'payments,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments'
          | 'payments,applied_payments,accounting_period'
          | 'payments,applied_payments,applied_credit_notes'
          | 'payments,applied_payments,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,company'
          | 'payments,applied_payments,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,company,employee'
          | 'payments,applied_payments,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,contact'
          | 'payments,applied_payments,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,contact,company'
          | 'payments,applied_payments,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,applied_credit_notes,employee'
          | 'payments,applied_payments,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits'
          | 'payments,applied_payments,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,company'
          | 'payments,applied_payments,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,contact'
          | 'payments,applied_payments,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,applied_vendor_credits,employee'
          | 'payments,applied_payments,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,company'
          | 'payments,applied_payments,company,accounting_period'
          | 'payments,applied_payments,company,employee'
          | 'payments,applied_payments,company,employee,accounting_period'
          | 'payments,applied_payments,contact'
          | 'payments,applied_payments,contact,accounting_period'
          | 'payments,applied_payments,contact,company'
          | 'payments,applied_payments,contact,company,accounting_period'
          | 'payments,applied_payments,contact,company,employee'
          | 'payments,applied_payments,contact,company,employee,accounting_period'
          | 'payments,applied_payments,contact,employee'
          | 'payments,applied_payments,contact,employee,accounting_period'
          | 'payments,applied_payments,employee'
          | 'payments,applied_payments,employee,accounting_period'
          | 'payments,applied_payments,line_items'
          | 'payments,applied_payments,line_items,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes'
          | 'payments,applied_payments,line_items,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,company'
          | 'payments,applied_payments,line_items,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,company,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,company'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_credit_notes,employee'
          | 'payments,applied_payments,line_items,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits'
          | 'payments,applied_payments,line_items,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,company'
          | 'payments,applied_payments,line_items,company,accounting_period'
          | 'payments,applied_payments,line_items,company,employee'
          | 'payments,applied_payments,line_items,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,contact'
          | 'payments,applied_payments,line_items,contact,accounting_period'
          | 'payments,applied_payments,line_items,contact,company'
          | 'payments,applied_payments,line_items,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,contact,company,employee'
          | 'payments,applied_payments,line_items,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,contact,employee'
          | 'payments,applied_payments,line_items,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,employee'
          | 'payments,applied_payments,line_items,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders'
          | 'payments,applied_payments,line_items,purchase_orders,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,company'
          | 'payments,applied_payments,line_items,purchase_orders,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,contact'
          | 'payments,applied_payments,line_items,purchase_orders,contact,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,contact,company'
          | 'payments,applied_payments,line_items,purchase_orders,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,contact,company,employee'
          | 'payments,applied_payments,line_items,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,contact,employee'
          | 'payments,applied_payments,line_items,purchase_orders,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,purchase_orders,employee'
          | 'payments,applied_payments,line_items,purchase_orders,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories'
          | 'payments,applied_payments,line_items,tracking_categories,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,company'
          | 'payments,applied_payments,line_items,tracking_categories,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact'
          | 'payments,applied_payments,line_items,tracking_categories,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,employee'
          | 'payments,applied_payments,line_items,tracking_categories,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,employee'
          | 'payments,applied_payments,line_items,tracking_categories,purchase_orders,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders'
          | 'payments,applied_payments,purchase_orders,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,company'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,employee'
          | 'payments,applied_payments,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,company'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,employee'
          | 'payments,applied_payments,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,company'
          | 'payments,applied_payments,purchase_orders,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,company,employee'
          | 'payments,applied_payments,purchase_orders,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,contact'
          | 'payments,applied_payments,purchase_orders,contact,accounting_period'
          | 'payments,applied_payments,purchase_orders,contact,company'
          | 'payments,applied_payments,purchase_orders,contact,company,accounting_period'
          | 'payments,applied_payments,purchase_orders,contact,company,employee'
          | 'payments,applied_payments,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,contact,employee'
          | 'payments,applied_payments,purchase_orders,contact,employee,accounting_period'
          | 'payments,applied_payments,purchase_orders,employee'
          | 'payments,applied_payments,purchase_orders,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories'
          | 'payments,applied_payments,tracking_categories,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,company'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,company'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,employee'
          | 'payments,applied_payments,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,company'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,employee'
          | 'payments,applied_payments,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,company'
          | 'payments,applied_payments,tracking_categories,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,company,employee'
          | 'payments,applied_payments,tracking_categories,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact'
          | 'payments,applied_payments,tracking_categories,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact,company'
          | 'payments,applied_payments,tracking_categories,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,contact,employee'
          | 'payments,applied_payments,tracking_categories,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,employee'
          | 'payments,applied_payments,tracking_categories,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders'
          | 'payments,applied_payments,tracking_categories,purchase_orders,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,company'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,company,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'payments,applied_payments,tracking_categories,purchase_orders,employee'
          | 'payments,applied_payments,tracking_categories,purchase_orders,employee,accounting_period'
          | 'payments,applied_vendor_credits'
          | 'payments,applied_vendor_credits,accounting_period'
          | 'payments,applied_vendor_credits,company'
          | 'payments,applied_vendor_credits,company,accounting_period'
          | 'payments,applied_vendor_credits,company,employee'
          | 'payments,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,applied_vendor_credits,contact'
          | 'payments,applied_vendor_credits,contact,accounting_period'
          | 'payments,applied_vendor_credits,contact,company'
          | 'payments,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,applied_vendor_credits,contact,company,employee'
          | 'payments,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,applied_vendor_credits,contact,employee'
          | 'payments,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,applied_vendor_credits,employee'
          | 'payments,applied_vendor_credits,employee,accounting_period'
          | 'payments,company'
          | 'payments,company,accounting_period'
          | 'payments,company,employee'
          | 'payments,company,employee,accounting_period'
          | 'payments,contact'
          | 'payments,contact,accounting_period'
          | 'payments,contact,company'
          | 'payments,contact,company,accounting_period'
          | 'payments,contact,company,employee'
          | 'payments,contact,company,employee,accounting_period'
          | 'payments,contact,employee'
          | 'payments,contact,employee,accounting_period'
          | 'payments,employee'
          | 'payments,employee,accounting_period'
          | 'payments,line_items'
          | 'payments,line_items,accounting_period'
          | 'payments,line_items,applied_credit_notes'
          | 'payments,line_items,applied_credit_notes,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,line_items,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,company'
          | 'payments,line_items,applied_credit_notes,company,accounting_period'
          | 'payments,line_items,applied_credit_notes,company,employee'
          | 'payments,line_items,applied_credit_notes,company,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,contact'
          | 'payments,line_items,applied_credit_notes,contact,accounting_period'
          | 'payments,line_items,applied_credit_notes,contact,company'
          | 'payments,line_items,applied_credit_notes,contact,company,accounting_period'
          | 'payments,line_items,applied_credit_notes,contact,company,employee'
          | 'payments,line_items,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,contact,employee'
          | 'payments,line_items,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,line_items,applied_credit_notes,employee'
          | 'payments,line_items,applied_credit_notes,employee,accounting_period'
          | 'payments,line_items,applied_vendor_credits'
          | 'payments,line_items,applied_vendor_credits,accounting_period'
          | 'payments,line_items,applied_vendor_credits,company'
          | 'payments,line_items,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,applied_vendor_credits,company,employee'
          | 'payments,line_items,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,applied_vendor_credits,contact'
          | 'payments,line_items,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,applied_vendor_credits,contact,company'
          | 'payments,line_items,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,applied_vendor_credits,contact,employee'
          | 'payments,line_items,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,applied_vendor_credits,employee'
          | 'payments,line_items,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,company'
          | 'payments,line_items,company,accounting_period'
          | 'payments,line_items,company,employee'
          | 'payments,line_items,company,employee,accounting_period'
          | 'payments,line_items,contact'
          | 'payments,line_items,contact,accounting_period'
          | 'payments,line_items,contact,company'
          | 'payments,line_items,contact,company,accounting_period'
          | 'payments,line_items,contact,company,employee'
          | 'payments,line_items,contact,company,employee,accounting_period'
          | 'payments,line_items,contact,employee'
          | 'payments,line_items,contact,employee,accounting_period'
          | 'payments,line_items,employee'
          | 'payments,line_items,employee,accounting_period'
          | 'payments,line_items,purchase_orders'
          | 'payments,line_items,purchase_orders,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes'
          | 'payments,line_items,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,company'
          | 'payments,line_items,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_credit_notes,employee'
          | 'payments,line_items,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,company'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,employee'
          | 'payments,line_items,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,purchase_orders,company'
          | 'payments,line_items,purchase_orders,company,accounting_period'
          | 'payments,line_items,purchase_orders,company,employee'
          | 'payments,line_items,purchase_orders,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,contact'
          | 'payments,line_items,purchase_orders,contact,accounting_period'
          | 'payments,line_items,purchase_orders,contact,company'
          | 'payments,line_items,purchase_orders,contact,company,accounting_period'
          | 'payments,line_items,purchase_orders,contact,company,employee'
          | 'payments,line_items,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,line_items,purchase_orders,contact,employee'
          | 'payments,line_items,purchase_orders,contact,employee,accounting_period'
          | 'payments,line_items,purchase_orders,employee'
          | 'payments,line_items,purchase_orders,employee,accounting_period'
          | 'payments,line_items,tracking_categories'
          | 'payments,line_items,tracking_categories,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes'
          | 'payments,line_items,tracking_categories,applied_credit_notes,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,company'
          | 'payments,line_items,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,company,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,company'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_credit_notes,employee'
          | 'payments,line_items,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,company'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,company,employee'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,company'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,employee'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,employee'
          | 'payments,line_items,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,tracking_categories,company'
          | 'payments,line_items,tracking_categories,company,accounting_period'
          | 'payments,line_items,tracking_categories,company,employee'
          | 'payments,line_items,tracking_categories,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,contact'
          | 'payments,line_items,tracking_categories,contact,accounting_period'
          | 'payments,line_items,tracking_categories,contact,company'
          | 'payments,line_items,tracking_categories,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,contact,company,employee'
          | 'payments,line_items,tracking_categories,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,contact,employee'
          | 'payments,line_items,tracking_categories,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,employee'
          | 'payments,line_items,tracking_categories,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders'
          | 'payments,line_items,tracking_categories,purchase_orders,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,company'
          | 'payments,line_items,tracking_categories,purchase_orders,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,contact'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,company'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,company,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'payments,line_items,tracking_categories,purchase_orders,employee'
          | 'payments,line_items,tracking_categories,purchase_orders,employee,accounting_period'
          | 'payments,purchase_orders'
          | 'payments,purchase_orders,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes'
          | 'payments,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,company'
          | 'payments,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,contact'
          | 'payments,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,purchase_orders,applied_credit_notes,employee'
          | 'payments,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits'
          | 'payments,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,company'
          | 'payments,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,contact'
          | 'payments,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,purchase_orders,applied_vendor_credits,employee'
          | 'payments,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,purchase_orders,company'
          | 'payments,purchase_orders,company,accounting_period'
          | 'payments,purchase_orders,company,employee'
          | 'payments,purchase_orders,company,employee,accounting_period'
          | 'payments,purchase_orders,contact'
          | 'payments,purchase_orders,contact,accounting_period'
          | 'payments,purchase_orders,contact,company'
          | 'payments,purchase_orders,contact,company,accounting_period'
          | 'payments,purchase_orders,contact,company,employee'
          | 'payments,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,purchase_orders,contact,employee'
          | 'payments,purchase_orders,contact,employee,accounting_period'
          | 'payments,purchase_orders,employee'
          | 'payments,purchase_orders,employee,accounting_period'
          | 'payments,tracking_categories'
          | 'payments,tracking_categories,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes'
          | 'payments,tracking_categories,applied_credit_notes,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,company'
          | 'payments,tracking_categories,applied_credit_notes,company,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,company,employee'
          | 'payments,tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,contact'
          | 'payments,tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,contact,company'
          | 'payments,tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,contact,company,employee'
          | 'payments,tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,contact,employee'
          | 'payments,tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,tracking_categories,applied_credit_notes,employee'
          | 'payments,tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits'
          | 'payments,tracking_categories,applied_vendor_credits,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,company'
          | 'payments,tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,company,employee'
          | 'payments,tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,contact'
          | 'payments,tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,contact,company'
          | 'payments,tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'payments,tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,contact,employee'
          | 'payments,tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,tracking_categories,applied_vendor_credits,employee'
          | 'payments,tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'payments,tracking_categories,company'
          | 'payments,tracking_categories,company,accounting_period'
          | 'payments,tracking_categories,company,employee'
          | 'payments,tracking_categories,company,employee,accounting_period'
          | 'payments,tracking_categories,contact'
          | 'payments,tracking_categories,contact,accounting_period'
          | 'payments,tracking_categories,contact,company'
          | 'payments,tracking_categories,contact,company,accounting_period'
          | 'payments,tracking_categories,contact,company,employee'
          | 'payments,tracking_categories,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,contact,employee'
          | 'payments,tracking_categories,contact,employee,accounting_period'
          | 'payments,tracking_categories,employee'
          | 'payments,tracking_categories,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders'
          | 'payments,tracking_categories,purchase_orders,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'payments,tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'payments,tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,company'
          | 'payments,tracking_categories,purchase_orders,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,company,employee'
          | 'payments,tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,contact'
          | 'payments,tracking_categories,purchase_orders,contact,accounting_period'
          | 'payments,tracking_categories,purchase_orders,contact,company'
          | 'payments,tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'payments,tracking_categories,purchase_orders,contact,company,employee'
          | 'payments,tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,contact,employee'
          | 'payments,tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'payments,tracking_categories,purchase_orders,employee'
          | 'payments,tracking_categories,purchase_orders,employee,accounting_period'
          | 'purchase_orders'
          | 'purchase_orders,accounting_period'
          | 'purchase_orders,applied_credit_notes'
          | 'purchase_orders,applied_credit_notes,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,company'
          | 'purchase_orders,applied_credit_notes,company,accounting_period'
          | 'purchase_orders,applied_credit_notes,company,employee'
          | 'purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,contact'
          | 'purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'purchase_orders,applied_credit_notes,contact,company'
          | 'purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'purchase_orders,applied_credit_notes,contact,company,employee'
          | 'purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,contact,employee'
          | 'purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'purchase_orders,applied_credit_notes,employee'
          | 'purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'purchase_orders,applied_vendor_credits'
          | 'purchase_orders,applied_vendor_credits,accounting_period'
          | 'purchase_orders,applied_vendor_credits,company'
          | 'purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'purchase_orders,applied_vendor_credits,company,employee'
          | 'purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'purchase_orders,applied_vendor_credits,contact'
          | 'purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'purchase_orders,applied_vendor_credits,contact,company'
          | 'purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'purchase_orders,applied_vendor_credits,contact,employee'
          | 'purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'purchase_orders,applied_vendor_credits,employee'
          | 'purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'purchase_orders,company'
          | 'purchase_orders,company,accounting_period'
          | 'purchase_orders,company,employee'
          | 'purchase_orders,company,employee,accounting_period'
          | 'purchase_orders,contact'
          | 'purchase_orders,contact,accounting_period'
          | 'purchase_orders,contact,company'
          | 'purchase_orders,contact,company,accounting_period'
          | 'purchase_orders,contact,company,employee'
          | 'purchase_orders,contact,company,employee,accounting_period'
          | 'purchase_orders,contact,employee'
          | 'purchase_orders,contact,employee,accounting_period'
          | 'purchase_orders,employee'
          | 'purchase_orders,employee,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,applied_credit_notes'
          | 'tracking_categories,applied_credit_notes,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,company'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,employee'
          | 'tracking_categories,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,company'
          | 'tracking_categories,applied_credit_notes,company,accounting_period'
          | 'tracking_categories,applied_credit_notes,company,employee'
          | 'tracking_categories,applied_credit_notes,company,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,contact'
          | 'tracking_categories,applied_credit_notes,contact,accounting_period'
          | 'tracking_categories,applied_credit_notes,contact,company'
          | 'tracking_categories,applied_credit_notes,contact,company,accounting_period'
          | 'tracking_categories,applied_credit_notes,contact,company,employee'
          | 'tracking_categories,applied_credit_notes,contact,company,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,contact,employee'
          | 'tracking_categories,applied_credit_notes,contact,employee,accounting_period'
          | 'tracking_categories,applied_credit_notes,employee'
          | 'tracking_categories,applied_credit_notes,employee,accounting_period'
          | 'tracking_categories,applied_vendor_credits'
          | 'tracking_categories,applied_vendor_credits,accounting_period'
          | 'tracking_categories,applied_vendor_credits,company'
          | 'tracking_categories,applied_vendor_credits,company,accounting_period'
          | 'tracking_categories,applied_vendor_credits,company,employee'
          | 'tracking_categories,applied_vendor_credits,company,employee,accounting_period'
          | 'tracking_categories,applied_vendor_credits,contact'
          | 'tracking_categories,applied_vendor_credits,contact,accounting_period'
          | 'tracking_categories,applied_vendor_credits,contact,company'
          | 'tracking_categories,applied_vendor_credits,contact,company,accounting_period'
          | 'tracking_categories,applied_vendor_credits,contact,company,employee'
          | 'tracking_categories,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'tracking_categories,applied_vendor_credits,contact,employee'
          | 'tracking_categories,applied_vendor_credits,contact,employee,accounting_period'
          | 'tracking_categories,applied_vendor_credits,employee'
          | 'tracking_categories,applied_vendor_credits,employee,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,company,employee'
          | 'tracking_categories,company,employee,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,accounting_period'
          | 'tracking_categories,contact,company'
          | 'tracking_categories,contact,company,accounting_period'
          | 'tracking_categories,contact,company,employee'
          | 'tracking_categories,contact,company,employee,accounting_period'
          | 'tracking_categories,contact,employee'
          | 'tracking_categories,contact,employee,accounting_period'
          | 'tracking_categories,employee'
          | 'tracking_categories,employee,accounting_period'
          | 'tracking_categories,purchase_orders'
          | 'tracking_categories,purchase_orders,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes'
          | 'tracking_categories,purchase_orders,applied_credit_notes,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,company'
          | 'tracking_categories,purchase_orders,applied_credit_notes,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,company,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,company'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,contact,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_credit_notes,employee'
          | 'tracking_categories,purchase_orders,applied_credit_notes,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,company'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,company,employee'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,company'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,company,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,employee'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,contact,employee,accounting_period'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,employee'
          | 'tracking_categories,purchase_orders,applied_vendor_credits,employee,accounting_period'
          | 'tracking_categories,purchase_orders,company'
          | 'tracking_categories,purchase_orders,company,accounting_period'
          | 'tracking_categories,purchase_orders,company,employee'
          | 'tracking_categories,purchase_orders,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,contact'
          | 'tracking_categories,purchase_orders,contact,accounting_period'
          | 'tracking_categories,purchase_orders,contact,company'
          | 'tracking_categories,purchase_orders,contact,company,accounting_period'
          | 'tracking_categories,purchase_orders,contact,company,employee'
          | 'tracking_categories,purchase_orders,contact,company,employee,accounting_period'
          | 'tracking_categories,purchase_orders,contact,employee'
          | 'tracking_categories,purchase_orders,contact,employee,accounting_period'
          | 'tracking_categories,purchase_orders,employee'
          | 'tracking_categories,purchase_orders,employee,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'type'
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'type'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Invoice']
        }
      }
    }
  }
  invoices_partial_update: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PatchedInvoiceEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['PatchedInvoiceEndpointRequest']
        'multipart/form-data': components['schemas']['PatchedInvoiceEndpointRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InvoiceResponse']
        }
      }
    }
  }
  invoices_line_items_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  invoices_meta_patch_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  invoices_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  invoices_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  issues_list: {
    parameters: {
      query?: {
        account_token?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description If included, will only include issues whose most recent action occurred before this time */
        end_date?: string
        end_user_organization_name?: string
        /** @description If provided, will only return issues whose first incident time was after this datetime. */
        first_incident_time_after?: string | null
        /** @description If provided, will only return issues whose first incident time was before this datetime. */
        first_incident_time_before?: string | null
        /** @description If true, will include muted issues */
        include_muted?: string
        integration_name?: string
        /** @description If provided, will only return issues whose last incident time was after this datetime. */
        last_incident_time_after?: string | null
        /** @description If provided, will only return issues whose last incident time was before this datetime. */
        last_incident_time_before?: string | null
        /** @description If provided, will only include issues pertaining to the linked account passed in. */
        linked_account_id?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description If included, will only include issues whose most recent action occurred after this time */
        start_date?: string
        /** @description Status of the issue. Options: ('ONGOING', 'RESOLVED')
         *
         *     * `ONGOING` - ONGOING
         *     * `RESOLVED` - RESOLVED */
        status?: 'ONGOING' | 'RESOLVED'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedIssueList']
        }
      }
    }
  }
  issues_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Issue']
        }
      }
    }
  }
  items_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return items for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'company'
          | 'company,purchase_tax_rate'
          | 'company,sales_tax_rate'
          | 'company,sales_tax_rate,purchase_tax_rate'
          | 'purchase_account'
          | 'purchase_account,company'
          | 'purchase_account,company,purchase_tax_rate'
          | 'purchase_account,company,sales_tax_rate'
          | 'purchase_account,company,sales_tax_rate,purchase_tax_rate'
          | 'purchase_account,purchase_tax_rate'
          | 'purchase_account,sales_account'
          | 'purchase_account,sales_account,company'
          | 'purchase_account,sales_account,company,purchase_tax_rate'
          | 'purchase_account,sales_account,company,sales_tax_rate'
          | 'purchase_account,sales_account,company,sales_tax_rate,purchase_tax_rate'
          | 'purchase_account,sales_account,purchase_tax_rate'
          | 'purchase_account,sales_account,sales_tax_rate'
          | 'purchase_account,sales_account,sales_tax_rate,purchase_tax_rate'
          | 'purchase_account,sales_tax_rate'
          | 'purchase_account,sales_tax_rate,purchase_tax_rate'
          | 'purchase_tax_rate'
          | 'sales_account'
          | 'sales_account,company'
          | 'sales_account,company,purchase_tax_rate'
          | 'sales_account,company,sales_tax_rate'
          | 'sales_account,company,sales_tax_rate,purchase_tax_rate'
          | 'sales_account,purchase_tax_rate'
          | 'sales_account,sales_tax_rate'
          | 'sales_account,sales_tax_rate,purchase_tax_rate'
          | 'sales_tax_rate'
          | 'sales_tax_rate,purchase_tax_rate'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status'
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedItemList']
        }
      }
    }
  }
  items_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'company'
          | 'company,purchase_tax_rate'
          | 'company,sales_tax_rate'
          | 'company,sales_tax_rate,purchase_tax_rate'
          | 'purchase_account'
          | 'purchase_account,company'
          | 'purchase_account,company,purchase_tax_rate'
          | 'purchase_account,company,sales_tax_rate'
          | 'purchase_account,company,sales_tax_rate,purchase_tax_rate'
          | 'purchase_account,purchase_tax_rate'
          | 'purchase_account,sales_account'
          | 'purchase_account,sales_account,company'
          | 'purchase_account,sales_account,company,purchase_tax_rate'
          | 'purchase_account,sales_account,company,sales_tax_rate'
          | 'purchase_account,sales_account,company,sales_tax_rate,purchase_tax_rate'
          | 'purchase_account,sales_account,purchase_tax_rate'
          | 'purchase_account,sales_account,sales_tax_rate'
          | 'purchase_account,sales_account,sales_tax_rate,purchase_tax_rate'
          | 'purchase_account,sales_tax_rate'
          | 'purchase_account,sales_tax_rate,purchase_tax_rate'
          | 'purchase_tax_rate'
          | 'sales_account'
          | 'sales_account,company'
          | 'sales_account,company,purchase_tax_rate'
          | 'sales_account,company,sales_tax_rate'
          | 'sales_account,company,sales_tax_rate,purchase_tax_rate'
          | 'sales_account,purchase_tax_rate'
          | 'sales_account,sales_tax_rate'
          | 'sales_account,sales_tax_rate,purchase_tax_rate'
          | 'sales_tax_rate'
          | 'sales_tax_rate,purchase_tax_rate'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status'
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Item']
        }
      }
    }
  }
  journal_entries_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return journal entries for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'applied_payments'
          | 'applied_payments,accounting_period'
          | 'applied_payments,company'
          | 'applied_payments,company,accounting_period'
          | 'applied_payments,tracking_categories'
          | 'applied_payments,tracking_categories,accounting_period'
          | 'applied_payments,tracking_categories,company'
          | 'applied_payments,tracking_categories,company,accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'lines'
          | 'lines,accounting_period'
          | 'lines,applied_payments'
          | 'lines,applied_payments,accounting_period'
          | 'lines,applied_payments,company'
          | 'lines,applied_payments,company,accounting_period'
          | 'lines,applied_payments,tracking_categories'
          | 'lines,applied_payments,tracking_categories,accounting_period'
          | 'lines,applied_payments,tracking_categories,company'
          | 'lines,applied_payments,tracking_categories,company,accounting_period'
          | 'lines,company'
          | 'lines,company,accounting_period'
          | 'lines,payments'
          | 'lines,payments,accounting_period'
          | 'lines,payments,applied_payments'
          | 'lines,payments,applied_payments,accounting_period'
          | 'lines,payments,applied_payments,company'
          | 'lines,payments,applied_payments,company,accounting_period'
          | 'lines,payments,applied_payments,tracking_categories'
          | 'lines,payments,applied_payments,tracking_categories,accounting_period'
          | 'lines,payments,applied_payments,tracking_categories,company'
          | 'lines,payments,applied_payments,tracking_categories,company,accounting_period'
          | 'lines,payments,company'
          | 'lines,payments,company,accounting_period'
          | 'lines,payments,tracking_categories'
          | 'lines,payments,tracking_categories,accounting_period'
          | 'lines,payments,tracking_categories,company'
          | 'lines,payments,tracking_categories,company,accounting_period'
          | 'lines,tracking_categories'
          | 'lines,tracking_categories,accounting_period'
          | 'lines,tracking_categories,company'
          | 'lines,tracking_categories,company,accounting_period'
          | 'payments'
          | 'payments,accounting_period'
          | 'payments,applied_payments'
          | 'payments,applied_payments,accounting_period'
          | 'payments,applied_payments,company'
          | 'payments,applied_payments,company,accounting_period'
          | 'payments,applied_payments,tracking_categories'
          | 'payments,applied_payments,tracking_categories,accounting_period'
          | 'payments,applied_payments,tracking_categories,company'
          | 'payments,applied_payments,tracking_categories,company,accounting_period'
          | 'payments,company'
          | 'payments,company,accounting_period'
          | 'payments,tracking_categories'
          | 'payments,tracking_categories,accounting_period'
          | 'payments,tracking_categories,company'
          | 'payments,tracking_categories,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description If provided, will only return objects created after this datetime. */
        transaction_date_after?: string | null
        /** @description If provided, will only return objects created before this datetime. */
        transaction_date_before?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedJournalEntryList']
        }
      }
    }
  }
  journal_entries_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['JournalEntryEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['JournalEntryEndpointRequest']
        'multipart/form-data': components['schemas']['JournalEntryEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['JournalEntryResponse']
        }
      }
    }
  }
  journal_entries_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'applied_payments'
          | 'applied_payments,accounting_period'
          | 'applied_payments,company'
          | 'applied_payments,company,accounting_period'
          | 'applied_payments,tracking_categories'
          | 'applied_payments,tracking_categories,accounting_period'
          | 'applied_payments,tracking_categories,company'
          | 'applied_payments,tracking_categories,company,accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'lines'
          | 'lines,accounting_period'
          | 'lines,applied_payments'
          | 'lines,applied_payments,accounting_period'
          | 'lines,applied_payments,company'
          | 'lines,applied_payments,company,accounting_period'
          | 'lines,applied_payments,tracking_categories'
          | 'lines,applied_payments,tracking_categories,accounting_period'
          | 'lines,applied_payments,tracking_categories,company'
          | 'lines,applied_payments,tracking_categories,company,accounting_period'
          | 'lines,company'
          | 'lines,company,accounting_period'
          | 'lines,payments'
          | 'lines,payments,accounting_period'
          | 'lines,payments,applied_payments'
          | 'lines,payments,applied_payments,accounting_period'
          | 'lines,payments,applied_payments,company'
          | 'lines,payments,applied_payments,company,accounting_period'
          | 'lines,payments,applied_payments,tracking_categories'
          | 'lines,payments,applied_payments,tracking_categories,accounting_period'
          | 'lines,payments,applied_payments,tracking_categories,company'
          | 'lines,payments,applied_payments,tracking_categories,company,accounting_period'
          | 'lines,payments,company'
          | 'lines,payments,company,accounting_period'
          | 'lines,payments,tracking_categories'
          | 'lines,payments,tracking_categories,accounting_period'
          | 'lines,payments,tracking_categories,company'
          | 'lines,payments,tracking_categories,company,accounting_period'
          | 'lines,tracking_categories'
          | 'lines,tracking_categories,accounting_period'
          | 'lines,tracking_categories,company'
          | 'lines,tracking_categories,company,accounting_period'
          | 'payments'
          | 'payments,accounting_period'
          | 'payments,applied_payments'
          | 'payments,applied_payments,accounting_period'
          | 'payments,applied_payments,company'
          | 'payments,applied_payments,company,accounting_period'
          | 'payments,applied_payments,tracking_categories'
          | 'payments,applied_payments,tracking_categories,accounting_period'
          | 'payments,applied_payments,tracking_categories,company'
          | 'payments,applied_payments,tracking_categories,company,accounting_period'
          | 'payments,company'
          | 'payments,company,accounting_period'
          | 'payments,tracking_categories'
          | 'payments,tracking_categories,accounting_period'
          | 'payments,tracking_categories,company'
          | 'payments,tracking_categories,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['JournalEntry']
        }
      }
    }
  }
  journal_entries_lines_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  journal_entries_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  journal_entries_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  link_token_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['EndUserDetailsRequest']
        'application/x-www-form-urlencoded': components['schemas']['EndUserDetailsRequest']
        'multipart/form-data': components['schemas']['EndUserDetailsRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['LinkToken']
        }
      }
    }
  }
  linked_account_scopes_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CommonModelScopeAPI']
        }
      }
    }
  }
  linked_account_scopes_create: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LinkedAccountCommonModelScopeDeserializerRequest']
        'application/x-www-form-urlencoded': components['schemas']['LinkedAccountCommonModelScopeDeserializerRequest']
        'multipart/form-data': components['schemas']['LinkedAccountCommonModelScopeDeserializerRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CommonModelScopeAPI']
        }
      }
    }
  }
  linked_accounts_list: {
    parameters: {
      query?: {
        /** @description Options: `accounting`, `ats`, `crm`, `filestorage`, `hris`, `mktg`, `ticketing`
         *
         *     * `hris` - hris
         *     * `ats` - ats
         *     * `accounting` - accounting
         *     * `ticketing` - ticketing
         *     * `crm` - crm
         *     * `mktg` - mktg
         *     * `filestorage` - filestorage
         *     * `datawarehouse` - datawarehouse */
        category?:
          | 'accounting'
          | 'ats'
          | 'crm'
          | 'datawarehouse'
          | 'filestorage'
          | 'hris'
          | 'mktg'
          | 'ticketing'
          | null
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description If provided, will only return linked accounts associated with the given email address. */
        end_user_email_address?: string
        /** @description If provided, will only return linked accounts associated with the given organization name. */
        end_user_organization_name?: string
        /** @description If provided, will only return linked accounts associated with the given origin ID. */
        end_user_origin_id?: string
        /** @description Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once. */
        end_user_origin_ids?: string
        id?: string
        /** @description Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once. */
        ids?: string
        /** @description If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account. */
        include_duplicates?: boolean
        /** @description If provided, will only return linked accounts associated with the given integration name. */
        integration_name?: string
        /** @description If included, will only include test linked accounts. If not included, will only include non-test linked accounts. */
        is_test_account?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description Filter by status. Options: `COMPLETE`, `IDLE`, `INCOMPLETE`, `RELINK_NEEDED` */
        status?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedAccountDetailsAndActionsList']
        }
      }
    }
  }
  passthrough_create: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DataPassthroughRequest']
        'application/x-www-form-urlencoded': components['schemas']['DataPassthroughRequest']
        'multipart/form-data': components['schemas']['DataPassthroughRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RemoteResponse']
        }
      }
    }
  }
  payments_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return payments for this account. */
        account_id?: string
        /** @description If provided, will only return payments for this company. */
        company_id?: string
        /** @description If provided, will only return payments for this contact. */
        contact_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'account'
          | 'account,accounting_period'
          | 'account,company'
          | 'account,company,accounting_period'
          | 'accounting_period'
          | 'applied_to_lines'
          | 'applied_to_lines,account'
          | 'applied_to_lines,account,accounting_period'
          | 'applied_to_lines,account,company'
          | 'applied_to_lines,account,company,accounting_period'
          | 'applied_to_lines,accounting_period'
          | 'applied_to_lines,company'
          | 'applied_to_lines,company,accounting_period'
          | 'applied_to_lines,contact'
          | 'applied_to_lines,contact,account'
          | 'applied_to_lines,contact,account,accounting_period'
          | 'applied_to_lines,contact,account,company'
          | 'applied_to_lines,contact,account,company,accounting_period'
          | 'applied_to_lines,contact,accounting_period'
          | 'applied_to_lines,contact,company'
          | 'applied_to_lines,contact,company,accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'contact'
          | 'contact,account'
          | 'contact,account,accounting_period'
          | 'contact,account,company'
          | 'contact,account,company,accounting_period'
          | 'contact,accounting_period'
          | 'contact,company'
          | 'contact,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,account'
          | 'tracking_categories,account,accounting_period'
          | 'tracking_categories,account,company'
          | 'tracking_categories,account,company,accounting_period'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,applied_to_lines'
          | 'tracking_categories,applied_to_lines,account'
          | 'tracking_categories,applied_to_lines,account,accounting_period'
          | 'tracking_categories,applied_to_lines,account,company'
          | 'tracking_categories,applied_to_lines,account,company,accounting_period'
          | 'tracking_categories,applied_to_lines,accounting_period'
          | 'tracking_categories,applied_to_lines,company'
          | 'tracking_categories,applied_to_lines,company,accounting_period'
          | 'tracking_categories,applied_to_lines,contact'
          | 'tracking_categories,applied_to_lines,contact,account'
          | 'tracking_categories,applied_to_lines,contact,account,accounting_period'
          | 'tracking_categories,applied_to_lines,contact,account,company'
          | 'tracking_categories,applied_to_lines,contact,account,company,accounting_period'
          | 'tracking_categories,applied_to_lines,contact,accounting_period'
          | 'tracking_categories,applied_to_lines,contact,company'
          | 'tracking_categories,applied_to_lines,contact,company,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,account'
          | 'tracking_categories,contact,account,accounting_period'
          | 'tracking_categories,contact,account,company'
          | 'tracking_categories,contact,account,company,accounting_period'
          | 'tracking_categories,contact,accounting_period'
          | 'tracking_categories,contact,company'
          | 'tracking_categories,contact,company,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description If provided, will only return objects created after this datetime. */
        transaction_date_after?: string | null
        /** @description If provided, will only return objects created before this datetime. */
        transaction_date_before?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedPaymentList']
        }
      }
    }
  }
  payments_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PaymentEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['PaymentEndpointRequest']
        'multipart/form-data': components['schemas']['PaymentEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaymentResponse']
        }
      }
    }
  }
  payments_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'account'
          | 'account,accounting_period'
          | 'account,company'
          | 'account,company,accounting_period'
          | 'accounting_period'
          | 'applied_to_lines'
          | 'applied_to_lines,account'
          | 'applied_to_lines,account,accounting_period'
          | 'applied_to_lines,account,company'
          | 'applied_to_lines,account,company,accounting_period'
          | 'applied_to_lines,accounting_period'
          | 'applied_to_lines,company'
          | 'applied_to_lines,company,accounting_period'
          | 'applied_to_lines,contact'
          | 'applied_to_lines,contact,account'
          | 'applied_to_lines,contact,account,accounting_period'
          | 'applied_to_lines,contact,account,company'
          | 'applied_to_lines,contact,account,company,accounting_period'
          | 'applied_to_lines,contact,accounting_period'
          | 'applied_to_lines,contact,company'
          | 'applied_to_lines,contact,company,accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'contact'
          | 'contact,account'
          | 'contact,account,accounting_period'
          | 'contact,account,company'
          | 'contact,account,company,accounting_period'
          | 'contact,accounting_period'
          | 'contact,company'
          | 'contact,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,account'
          | 'tracking_categories,account,accounting_period'
          | 'tracking_categories,account,company'
          | 'tracking_categories,account,company,accounting_period'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,applied_to_lines'
          | 'tracking_categories,applied_to_lines,account'
          | 'tracking_categories,applied_to_lines,account,accounting_period'
          | 'tracking_categories,applied_to_lines,account,company'
          | 'tracking_categories,applied_to_lines,account,company,accounting_period'
          | 'tracking_categories,applied_to_lines,accounting_period'
          | 'tracking_categories,applied_to_lines,company'
          | 'tracking_categories,applied_to_lines,company,accounting_period'
          | 'tracking_categories,applied_to_lines,contact'
          | 'tracking_categories,applied_to_lines,contact,account'
          | 'tracking_categories,applied_to_lines,contact,account,accounting_period'
          | 'tracking_categories,applied_to_lines,contact,account,company'
          | 'tracking_categories,applied_to_lines,contact,account,company,accounting_period'
          | 'tracking_categories,applied_to_lines,contact,accounting_period'
          | 'tracking_categories,applied_to_lines,contact,company'
          | 'tracking_categories,applied_to_lines,contact,company,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,account'
          | 'tracking_categories,contact,account,accounting_period'
          | 'tracking_categories,contact,account,company'
          | 'tracking_categories,contact,account,company,accounting_period'
          | 'tracking_categories,contact,accounting_period'
          | 'tracking_categories,contact,company'
          | 'tracking_categories,contact,company,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Payment']
        }
      }
    }
  }
  payments_partial_update: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PatchedPaymentEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['PatchedPaymentEndpointRequest']
        'multipart/form-data': components['schemas']['PatchedPaymentEndpointRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaymentResponse']
        }
      }
    }
  }
  payments_line_items_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  payments_meta_patch_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  payments_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  payments_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  phone_numbers_retrieve: {
    parameters: {
      query?: {
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AccountingPhoneNumber']
        }
      }
    }
  }
  purchase_orders_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return purchase orders for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'delivery_address'
          | 'delivery_address,accounting_period'
          | 'delivery_address,company'
          | 'delivery_address,company,accounting_period'
          | 'delivery_address,vendor'
          | 'delivery_address,vendor,accounting_period'
          | 'delivery_address,vendor,company'
          | 'delivery_address,vendor,company,accounting_period'
          | 'line_items'
          | 'line_items,accounting_period'
          | 'line_items,company'
          | 'line_items,company,accounting_period'
          | 'line_items,delivery_address'
          | 'line_items,delivery_address,accounting_period'
          | 'line_items,delivery_address,company'
          | 'line_items,delivery_address,company,accounting_period'
          | 'line_items,delivery_address,vendor'
          | 'line_items,delivery_address,vendor,accounting_period'
          | 'line_items,delivery_address,vendor,company'
          | 'line_items,delivery_address,vendor,company,accounting_period'
          | 'line_items,tracking_categories'
          | 'line_items,tracking_categories,accounting_period'
          | 'line_items,tracking_categories,company'
          | 'line_items,tracking_categories,company,accounting_period'
          | 'line_items,tracking_categories,delivery_address'
          | 'line_items,tracking_categories,delivery_address,accounting_period'
          | 'line_items,tracking_categories,delivery_address,company'
          | 'line_items,tracking_categories,delivery_address,company,accounting_period'
          | 'line_items,tracking_categories,delivery_address,vendor'
          | 'line_items,tracking_categories,delivery_address,vendor,accounting_period'
          | 'line_items,tracking_categories,delivery_address,vendor,company'
          | 'line_items,tracking_categories,delivery_address,vendor,company,accounting_period'
          | 'line_items,tracking_categories,vendor'
          | 'line_items,tracking_categories,vendor,accounting_period'
          | 'line_items,tracking_categories,vendor,company'
          | 'line_items,tracking_categories,vendor,company,accounting_period'
          | 'line_items,vendor'
          | 'line_items,vendor,accounting_period'
          | 'line_items,vendor,company'
          | 'line_items,vendor,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,delivery_address'
          | 'tracking_categories,delivery_address,accounting_period'
          | 'tracking_categories,delivery_address,company'
          | 'tracking_categories,delivery_address,company,accounting_period'
          | 'tracking_categories,delivery_address,vendor'
          | 'tracking_categories,delivery_address,vendor,accounting_period'
          | 'tracking_categories,delivery_address,vendor,company'
          | 'tracking_categories,delivery_address,vendor,company,accounting_period'
          | 'tracking_categories,vendor'
          | 'tracking_categories,vendor,accounting_period'
          | 'tracking_categories,vendor,company'
          | 'tracking_categories,vendor,company,accounting_period'
          | 'vendor'
          | 'vendor,accounting_period'
          | 'vendor,company'
          | 'vendor,company,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return objects created after this datetime. */
        issue_date_after?: string | null
        /** @description If provided, will only return objects created before this datetime. */
        issue_date_before?: string | null
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status'
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedPurchaseOrderList']
        }
      }
    }
  }
  purchase_orders_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PurchaseOrderEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['PurchaseOrderEndpointRequest']
        'multipart/form-data': components['schemas']['PurchaseOrderEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PurchaseOrderResponse']
        }
      }
    }
  }
  purchase_orders_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'delivery_address'
          | 'delivery_address,accounting_period'
          | 'delivery_address,company'
          | 'delivery_address,company,accounting_period'
          | 'delivery_address,vendor'
          | 'delivery_address,vendor,accounting_period'
          | 'delivery_address,vendor,company'
          | 'delivery_address,vendor,company,accounting_period'
          | 'line_items'
          | 'line_items,accounting_period'
          | 'line_items,company'
          | 'line_items,company,accounting_period'
          | 'line_items,delivery_address'
          | 'line_items,delivery_address,accounting_period'
          | 'line_items,delivery_address,company'
          | 'line_items,delivery_address,company,accounting_period'
          | 'line_items,delivery_address,vendor'
          | 'line_items,delivery_address,vendor,accounting_period'
          | 'line_items,delivery_address,vendor,company'
          | 'line_items,delivery_address,vendor,company,accounting_period'
          | 'line_items,tracking_categories'
          | 'line_items,tracking_categories,accounting_period'
          | 'line_items,tracking_categories,company'
          | 'line_items,tracking_categories,company,accounting_period'
          | 'line_items,tracking_categories,delivery_address'
          | 'line_items,tracking_categories,delivery_address,accounting_period'
          | 'line_items,tracking_categories,delivery_address,company'
          | 'line_items,tracking_categories,delivery_address,company,accounting_period'
          | 'line_items,tracking_categories,delivery_address,vendor'
          | 'line_items,tracking_categories,delivery_address,vendor,accounting_period'
          | 'line_items,tracking_categories,delivery_address,vendor,company'
          | 'line_items,tracking_categories,delivery_address,vendor,company,accounting_period'
          | 'line_items,tracking_categories,vendor'
          | 'line_items,tracking_categories,vendor,accounting_period'
          | 'line_items,tracking_categories,vendor,company'
          | 'line_items,tracking_categories,vendor,company,accounting_period'
          | 'line_items,vendor'
          | 'line_items,vendor,accounting_period'
          | 'line_items,vendor,company'
          | 'line_items,vendor,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,delivery_address'
          | 'tracking_categories,delivery_address,accounting_period'
          | 'tracking_categories,delivery_address,company'
          | 'tracking_categories,delivery_address,company,accounting_period'
          | 'tracking_categories,delivery_address,vendor'
          | 'tracking_categories,delivery_address,vendor,accounting_period'
          | 'tracking_categories,delivery_address,vendor,company'
          | 'tracking_categories,delivery_address,vendor,company,accounting_period'
          | 'tracking_categories,vendor'
          | 'tracking_categories,vendor,accounting_period'
          | 'tracking_categories,vendor,company'
          | 'tracking_categories,vendor,company,accounting_period'
          | 'vendor'
          | 'vendor,accounting_period'
          | 'vendor,company'
          | 'vendor,company,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. */
        include_remote_fields?: boolean
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status'
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PurchaseOrder']
        }
      }
    }
  }
  purchase_orders_line_items_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  purchase_orders_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  purchase_orders_remote_field_classes_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, will only return remote field classes with this is_common_model_field value */
        is_common_model_field?: boolean | null
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedRemoteFieldClassList']
        }
      }
    }
  }
  regenerate_key_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RemoteKeyForRegenerationRequest']
        'application/x-www-form-urlencoded': components['schemas']['RemoteKeyForRegenerationRequest']
        'multipart/form-data': components['schemas']['RemoteKeyForRegenerationRequest']
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RemoteKey']
        }
      }
    }
  }
  remote_fields_retrieve: {
    parameters: {
      query?: {
        /** @description A comma seperated list of Common Model names. If included, will only return Remote Fields for those Common Models. */
        common_models?: string
        /** @description If true, will include example values, where available, for remote fields in the 3rd party platform. These examples come from active data from your customers. */
        include_example_values?: string
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['RemoteFieldAPIResponse']
        }
      }
    }
  }
  sync_status_list: {
    parameters: {
      query?: {
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedSyncStatusList']
        }
      }
    }
  }
  sync_status_resync_create: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncStatus'][]
        }
      }
    }
  }
  target_fields_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ExternalTargetFieldAPIResponse']
        }
      }
    }
  }
  tax_rates_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return tax rates for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description If provided, will only return TaxRates with this name. */
        name?: string | null
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedTaxRateList']
        }
      }
    }
  }
  tax_rates_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['TaxRate']
        }
      }
    }
  }
  tracking_categories_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return tracking categories for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description If provided, will only return TrackingCategories with this name. */
        name?: string | null
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status'
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedTrackingCategoryList']
        }
      }
    }
  }
  tracking_categories_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?: 'company'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Deprecated. Use show_enum_origins. */
        remote_fields?: 'status'
        /** @description A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter) */
        show_enum_origins?: 'status'
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['TrackingCategory']
        }
      }
    }
  }
  transactions_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return accounting transactions for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'account'
          | 'account,accounting_period'
          | 'accounting_period'
          | 'contact'
          | 'contact,account'
          | 'contact,account,accounting_period'
          | 'contact,accounting_period'
          | 'line_items'
          | 'line_items,account'
          | 'line_items,account,accounting_period'
          | 'line_items,accounting_period'
          | 'line_items,contact'
          | 'line_items,contact,account'
          | 'line_items,contact,account,accounting_period'
          | 'line_items,contact,accounting_period'
          | 'line_items,tracking_categories'
          | 'line_items,tracking_categories,account'
          | 'line_items,tracking_categories,account,accounting_period'
          | 'line_items,tracking_categories,accounting_period'
          | 'line_items,tracking_categories,contact'
          | 'line_items,tracking_categories,contact,account'
          | 'line_items,tracking_categories,contact,account,accounting_period'
          | 'line_items,tracking_categories,contact,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,account'
          | 'tracking_categories,account,accounting_period'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,account'
          | 'tracking_categories,contact,account,accounting_period'
          | 'tracking_categories,contact,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description If provided, will only return objects created after this datetime. */
        transaction_date_after?: string | null
        /** @description If provided, will only return objects created before this datetime. */
        transaction_date_before?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedTransactionList']
        }
      }
    }
  }
  transactions_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'account'
          | 'account,accounting_period'
          | 'accounting_period'
          | 'contact'
          | 'contact,account'
          | 'contact,account,accounting_period'
          | 'contact,accounting_period'
          | 'line_items'
          | 'line_items,account'
          | 'line_items,account,accounting_period'
          | 'line_items,accounting_period'
          | 'line_items,contact'
          | 'line_items,contact,account'
          | 'line_items,contact,account,accounting_period'
          | 'line_items,contact,accounting_period'
          | 'line_items,tracking_categories'
          | 'line_items,tracking_categories,account'
          | 'line_items,tracking_categories,account,accounting_period'
          | 'line_items,tracking_categories,accounting_period'
          | 'line_items,tracking_categories,contact'
          | 'line_items,tracking_categories,contact,account'
          | 'line_items,tracking_categories,contact,account,accounting_period'
          | 'line_items,tracking_categories,contact,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,account'
          | 'tracking_categories,account,accounting_period'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,contact'
          | 'tracking_categories,contact,account'
          | 'tracking_categories,contact,account,accounting_period'
          | 'tracking_categories,contact,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Transaction']
        }
      }
    }
  }
  vendor_credits_list: {
    parameters: {
      query?: {
        /** @description If provided, will only return vendor credits for this company. */
        company_id?: string
        /** @description If provided, will only return objects created after this datetime. */
        created_after?: string
        /** @description If provided, will only return objects created before this datetime. */
        created_before?: string
        /** @description The pagination cursor value. */
        cursor?: string
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'lines'
          | 'lines,accounting_period'
          | 'lines,company'
          | 'lines,company,accounting_period'
          | 'lines,tracking_categories'
          | 'lines,tracking_categories,accounting_period'
          | 'lines,tracking_categories,company'
          | 'lines,tracking_categories,company,accounting_period'
          | 'lines,tracking_categories,vendor'
          | 'lines,tracking_categories,vendor,accounting_period'
          | 'lines,tracking_categories,vendor,company'
          | 'lines,tracking_categories,vendor,company,accounting_period'
          | 'lines,vendor'
          | 'lines,vendor,accounting_period'
          | 'lines,vendor,company'
          | 'lines,vendor,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,vendor'
          | 'tracking_categories,vendor,accounting_period'
          | 'tracking_categories,vendor,company'
          | 'tracking_categories,vendor,company,accounting_period'
          | 'vendor'
          | 'vendor,accounting_period'
          | 'vendor,company'
          | 'vendor,company,accounting_period'
        /** @description Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
        include_deleted_data?: boolean
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
        /** @description Whether to include shell records. Shell records are empty records (they may contain some metadata but all other fields are null). */
        include_shell_data?: boolean
        /** @description If provided, only objects synced by Merge after this date time will be returned. */
        modified_after?: string
        /** @description If provided, only objects synced by Merge before this date time will be returned. */
        modified_before?: string
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description The API provider's ID for the given object. */
        remote_id?: string | null
        /** @description If provided, will only return objects created after this datetime. */
        transaction_date_after?: string | null
        /** @description If provided, will only return objects created before this datetime. */
        transaction_date_before?: string | null
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PaginatedVendorCreditList']
        }
      }
    }
  }
  vendor_credits_create: {
    parameters: {
      query?: {
        /** @description Whether to include debug fields (such as log file links) in the response. */
        is_debug_mode?: boolean
        /** @description Whether or not third-party updates should be run asynchronously. */
        run_async?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['VendorCreditEndpointRequest']
        'application/x-www-form-urlencoded': components['schemas']['VendorCreditEndpointRequest']
        'multipart/form-data': components['schemas']['VendorCreditEndpointRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['VendorCreditResponse']
        }
      }
    }
  }
  vendor_credits_retrieve: {
    parameters: {
      query?: {
        /** @description Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. */
        expand?:
          | 'accounting_period'
          | 'company'
          | 'company,accounting_period'
          | 'lines'
          | 'lines,accounting_period'
          | 'lines,company'
          | 'lines,company,accounting_period'
          | 'lines,tracking_categories'
          | 'lines,tracking_categories,accounting_period'
          | 'lines,tracking_categories,company'
          | 'lines,tracking_categories,company,accounting_period'
          | 'lines,tracking_categories,vendor'
          | 'lines,tracking_categories,vendor,accounting_period'
          | 'lines,tracking_categories,vendor,company'
          | 'lines,tracking_categories,vendor,company,accounting_period'
          | 'lines,vendor'
          | 'lines,vendor,accounting_period'
          | 'lines,vendor,company'
          | 'lines,vendor,company,accounting_period'
          | 'tracking_categories'
          | 'tracking_categories,accounting_period'
          | 'tracking_categories,company'
          | 'tracking_categories,company,accounting_period'
          | 'tracking_categories,vendor'
          | 'tracking_categories,vendor,accounting_period'
          | 'tracking_categories,vendor,company'
          | 'tracking_categories,vendor,company,accounting_period'
          | 'vendor'
          | 'vendor,accounting_period'
          | 'vendor,company'
          | 'vendor,company,accounting_period'
        /** @description Whether to include the original data Merge fetched from the third-party to produce these models. */
        include_remote_data?: boolean
      }
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['VendorCredit']
        }
      }
    }
  }
  vendor_credits_meta_post_retrieve: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MetaResponse']
        }
      }
    }
  }
  webhook_receivers_list: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['WebhookReceiver'][]
        }
      }
    }
  }
  webhook_receivers_create: {
    parameters: {
      query?: never
      header: {
        /** @description Token identifying the end user. */
        'X-Account-Token': string
      }
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['WebhookReceiverRequest']
        'application/x-www-form-urlencoded': components['schemas']['WebhookReceiverRequest']
        'multipart/form-data': components['schemas']['WebhookReceiverRequest']
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['WebhookReceiver']
        }
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
